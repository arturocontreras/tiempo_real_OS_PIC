CCS PCH C Compiler, Version 4.104, 5967               06-Nov-12 11:30

               Filename: C:\Users\oscar\Desktop\CODIGO\codigoc1\avance33.lst

               ROM used: 15642 bytes (48%)
                         Largest free fragment is 17122
               RAM used: 153 (10%) at main() level
                         179 (12%) worst case
               Stack:    15 worst case (8 in main + 7 for interrupts)

*
0000:  GOTO   3BA2
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  FF2.5
004A:  GOTO   0054
004E:  BTFSC  FF2.2
0050:  GOTO   0A94
0054:  BTFSS  F9D.5
0056:  GOTO   0060
005A:  BTFSC  F9E.5
005C:  GOTO   0216
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVF   04,W
0098:  MOVFF  06,FE0
009C:  MOVFF  05,FD8
00A0:  RETFIE 0
.................... #include <18f452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
.................... #fuses XT,NOPROTECT,NOWDT 
.................... #use delay(clock=20000000) 
*
0246:  CLRF   FEA
0248:  MOVLW  A9
024A:  MOVWF  FE9
024C:  MOVF   FEF,W
024E:  BZ    026A
0250:  MOVLW  06
0252:  MOVWF  01
0254:  CLRF   00
0256:  DECFSZ 00,F
0258:  BRA    0256
025A:  DECFSZ 01,F
025C:  BRA    0254
025E:  MOVLW  7B
0260:  MOVWF  00
0262:  DECFSZ 00,F
0264:  BRA    0262
0266:  DECFSZ FEF,F
0268:  BRA    0250
026A:  RETLW  00
.................... #use rs232(baud=9600,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
.................... #define LCD_ENABLE_PIN  PIN_D2                                  ////d0 
.................... #define LCD_RS_PIN      PIN_D0                                    ////d1 
.................... #define LCD_RW_PIN      PIN_D1                                    ////d2 
.................... #define LCD_DATA4       PIN_D4                                    //// 
.................... #define LCD_DATA5       PIN_D5                                    //// 
.................... #define LCD_DATA6       PIN_D6                                    //// 
.................... #define LCD_DATA7       PIN_D7                                    //// 
.................... #include <LCD.c>  
.................... /////////////////////////////////////////////////////////////////////////////// 
.................... ////                             LCD.C                                     //// 
.................... ////                 Driver for common LCD modules                         //// 
.................... ////                                                                       //// 
.................... ////  lcd_init()   Must be called before any other function.               //// 
.................... ////                                                                       //// 
.................... ////  lcd_putc(c)  Will display c on the next position of the LCD.         //// 
.................... ////                     The following have special meaning:               //// 
.................... ////                      \f  Clear display                                //// 
.................... ////                      \n  Go to start of second line                   //// 
.................... ////                      \b  Move back one position                       //// 
.................... ////                                                                       //// 
.................... ////  lcd_gotoxy(x,y) Set write position on LCD (upper left is 1,1)        //// 
.................... ////                                                                       //// 
.................... ////  lcd_getc(x,y)   Returns character at position x,y on LCD             //// 
.................... ////                                                                       //// 
.................... ////  CONFIGURATION                                                        //// 
.................... ////  The LCD can be configured in one of two ways: a.) port access or     //// 
.................... ////  b.) pin access.  Port access requires the entire 7 bit interface     //// 
.................... ////  connected to one GPIO port, and the data bits (D4:D7 of the LCD)     //// 
.................... ////  connected to sequential pins on the GPIO.  Pin access                //// 
.................... ////  has no requirements, all 7 bits of the control interface can         //// 
.................... ////  can be connected to any GPIO using several ports.                    //// 
.................... ////                                                                       //// 
.................... ////  To use port access, #define LCD_DATA_PORT to the SFR location of     //// 
.................... ////  of the GPIO port that holds the interface, -AND- edit LCD_PIN_MAP    //// 
.................... ////  of this file to configure the pin order.  If you are using a         //// 
.................... ////  baseline PIC (PCB), then LCD_OUTPUT_MAP and LCD_INPUT_MAP also must  //// 
.................... ////  be defined.                                                          //// 
.................... ////                                                                       //// 
.................... ////  Example of port access:                                              //// 
.................... ////     #define LCD_DATA_PORT getenv("SFR:PORTD")                         //// 
.................... ////                                                                       //// 
.................... ////  To use pin access, the following pins must be defined:               //// 
.................... ////     LCD_ENABLE_PIN                                                    //// 
.................... ////     LCD_RS_PIN                                                        //// 
.................... ////     LCD_RW_PIN                                                        //// 
.................... ////     LCD_DATA4                                                         //// 
.................... ////     LCD_DATA5                                                         //// 
.................... ////     LCD_DATA6                                                         //// 
.................... ////     LCD_DATA7                                                         //// 
.................... ////                                                                       //// 
.................... ////  Example of pin access:                                               //// 
.................... ////     #define LCD_ENABLE_PIN  PIN_E0                                    //// 
.................... ////     #define LCD_RS_PIN      PIN_E1                                    //// 
.................... ////     #define LCD_RW_PIN      PIN_E2                                    //// 
.................... ////     #define LCD_DATA4       PIN_D4                                    //// 
.................... ////     #define LCD_DATA5       PIN_D5                                    //// 
.................... ////     #define LCD_DATA6       PIN_D6                                    //// 
.................... ////     #define LCD_DATA7       PIN_D7                                    //// 
.................... ////                                                                       //// 
.................... /////////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996,2009 Custom Computer Services           //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
....................  
.................... // define the pinout. 
.................... // only required if port access is being used. 
.................... typedef struct   
.................... {                            // This structure is overlayed 
....................    BOOLEAN enable;           // on to an I/O port to gain 
....................    BOOLEAN rs;               // access to the LCD pins. 
....................    BOOLEAN rw;               // The bits are allocated from 
....................    BOOLEAN unused;           // low order up.  ENABLE will 
....................    int     data : 4;         // be LSB pin of that port. 
....................   #if defined(__PCD__)       // The port used will be LCD_DATA_PORT. 
....................    int    reserved: 8; 
....................   #endif 
.................... } LCD_PIN_MAP; 
....................  
.................... // this is to improve compatability with previous LCD drivers that accepted 
.................... // a define labeled 'use_portb_lcd' that configured the LCD onto port B. 
.................... #if ((defined(use_portb_lcd)) && (use_portb_lcd==TRUE)) 
....................  #define LCD_DATA_PORT getenv("SFR:PORTB") 
.................... #endif 
....................  
.................... #if defined(__PCB__) 
....................    // these definitions only need to be modified for baseline PICs. 
....................    // all other PICs use LCD_PIN_MAP or individual LCD_xxx pin definitions. 
.................... /*                                    EN, RS,   RW,   UNUSED,  DATA  */ 
....................  const LCD_PIN_MAP LCD_OUTPUT_MAP =  {0,  0,    0,    0,       0}; 
....................  const LCD_PIN_MAP LCD_INPUT_MAP =   {0,  0,    0,    0,       0xF}; 
.................... #endif 
....................  
.................... ////////////////////// END CONFIGURATION /////////////////////////////////// 
....................  
.................... #ifndef LCD_ENABLE_PIN 
....................    #define lcd_output_enable(x) lcdlat.enable=x 
....................    #define lcd_enable_tris()   lcdtris.enable=0 
.................... #else 
....................    #define lcd_output_enable(x) output_bit(LCD_ENABLE_PIN, x) 
....................    #define lcd_enable_tris()  output_drive(LCD_ENABLE_PIN) 
.................... #endif 
....................  
.................... #ifndef LCD_RS_PIN 
....................    #define lcd_output_rs(x) lcdlat.rs=x 
....................    #define lcd_rs_tris()   lcdtris.rs=0 
.................... #else 
....................    #define lcd_output_rs(x) output_bit(LCD_RS_PIN, x) 
....................    #define lcd_rs_tris()  output_drive(LCD_RS_PIN) 
.................... #endif 
....................  
.................... #ifndef LCD_RW_PIN 
....................    #define lcd_output_rw(x) lcdlat.rw=x 
....................    #define lcd_rw_tris()   lcdtris.rw=0 
.................... #else 
....................    #define lcd_output_rw(x) output_bit(LCD_RW_PIN, x) 
....................    #define lcd_rw_tris()  output_drive(LCD_RW_PIN) 
.................... #endif 
....................  
.................... // original version of this library incorrectly labeled LCD_DATA0 as LCD_DATA4, 
.................... // LCD_DATA1 as LCD_DATA5, and so on.  this block of code makes the driver 
.................... // compatible with any code written for the original library 
.................... #if (defined(LCD_DATA0) && defined(LCD_DATA1) && defined(LCD_DATA2) && defined(LCD_DATA3) && !defined(LCD_DATA4) && !defined(LCD_DATA5) && !defined(LCD_DATA6) && !defined(LCD_DATA7)) 
....................    #define  LCD_DATA4    LCD_DATA0 
....................    #define  LCD_DATA5    LCD_DATA1 
....................    #define  LCD_DATA6    LCD_DATA2 
....................    #define  LCD_DATA7    LCD_DATA3 
.................... #endif 
....................  
.................... #ifndef LCD_DATA4 
.................... #ifndef LCD_DATA_PORT 
....................    #if defined(__PCB__) 
....................       #define LCD_DATA_PORT      0x06     //portb 
....................       #define set_tris_lcd(x)   set_tris_b(x) 
....................    #else 
....................      #if defined(PIN_D0) 
....................       #define LCD_DATA_PORT      getenv("SFR:PORTD")     //portd 
....................      #else 
....................       #define LCD_DATA_PORT      getenv("SFR:PORTB")     //portb 
....................      #endif 
....................    #endif    
.................... #endif 
....................  
.................... #if defined(__PCB__) 
....................    LCD_PIN_MAP lcd, lcdlat; 
....................    #byte lcd = LCD_DATA_PORT 
....................    #byte lcdlat = LCD_DATA_PORT 
.................... #elif defined(__PCM__) 
....................    LCD_PIN_MAP lcd, lcdlat, lcdtris; 
....................    #byte lcd = LCD_DATA_PORT 
....................    #byte lcdlat = LCD_DATA_PORT 
....................    #byte lcdtris = LCD_DATA_PORT+0x80 
.................... #elif defined(__PCH__) 
....................    LCD_PIN_MAP lcd, lcdlat, lcdtris; 
....................    #byte lcd = LCD_DATA_PORT 
....................    #byte lcdlat = LCD_DATA_PORT+9 
....................    #byte lcdtris = LCD_DATA_PORT+0x12 
.................... #elif defined(__PCD__) 
....................    LCD_PIN_MAP lcd, lcdlat, lcdtris; 
....................    #word lcd = LCD_DATA_PORT 
....................    #word lcdlat = LCD_DATA_PORT+2 
....................    #word lcdtris = LCD_DATA_PORT-0x02 
.................... #endif 
.................... #endif   //LCD_DATA4 not defined 
....................  
.................... #ifndef LCD_TYPE 
....................    #define LCD_TYPE 2           // 0=5x7, 1=5x10, 2=2 lines 
.................... #endif 
....................  
.................... #ifndef LCD_LINE_TWO 
....................    #define LCD_LINE_TWO 0x40    // LCD RAM address for the second line 
.................... #endif 
....................  
.................... BYTE const LCD_INIT_STRING[4] = {0x20 | (LCD_TYPE << 2), 0xc, 1, 6}; 
....................                              // These bytes need to be sent to the LCD 
....................                              // to start it up. 
....................  
.................... BYTE lcd_read_nibble(void); 
....................  
.................... BYTE lcd_read_byte(void) 
.................... { 
....................    BYTE low,high; 
....................  
....................  #if defined(__PCB__) 
....................    set_tris_lcd(LCD_INPUT_MAP); 
....................  #else 
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
....................    output_float(LCD_DATA4); 
*
093C:  BSF    F95.4
....................    output_float(LCD_DATA5); 
093E:  BSF    F95.5
....................    output_float(LCD_DATA6); 
0940:  BSF    F95.6
....................    output_float(LCD_DATA7); 
0942:  BSF    F95.7
....................   #else 
....................    lcdtris.data = 0xF; 
....................   #endif 
....................  #endif 
....................          
....................    lcd_output_rw(1); 
0944:  BSF    F8C.1
0946:  BCF    F95.1
....................    delay_cycles(1); 
0948:  NOP   
....................    lcd_output_enable(1); 
094A:  BSF    F8C.2
094C:  BCF    F95.2
....................    delay_cycles(1); 
094E:  NOP   
....................    high = lcd_read_nibble(); 
0950:  RCALL  08EA
0952:  MOVFF  01,B0
....................        
....................    lcd_output_enable(0); 
0956:  BCF    F8C.2
0958:  BCF    F95.2
....................    delay_cycles(1); 
095A:  NOP   
....................    lcd_output_enable(1); 
095C:  BSF    F8C.2
095E:  BCF    F95.2
....................    delay_us(1); 
0960:  BRA    0962
0962:  BRA    0964
0964:  NOP   
....................    low = lcd_read_nibble(); 
0966:  RCALL  08EA
0968:  MOVFF  01,AF
....................        
....................    lcd_output_enable(0); 
096C:  BCF    F8C.2
096E:  BCF    F95.2
....................  
....................  #if defined(__PCB__) 
....................    set_tris_lcd(LCD_INPUT_MAP); 
....................  #else 
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
....................    output_drive(LCD_DATA4); 
0970:  BCF    F95.4
....................    output_drive(LCD_DATA5); 
0972:  BCF    F95.5
....................    output_drive(LCD_DATA6); 
0974:  BCF    F95.6
....................    output_drive(LCD_DATA7); 
0976:  BCF    F95.7
....................   #else 
....................    lcdtris.data = 0x0; 
....................   #endif 
....................  #endif 
....................  
....................    return( (high<<4) | low); 
0978:  SWAPF  xB0,W
097A:  MOVWF  00
097C:  MOVLW  F0
097E:  ANDWF  00,F
0980:  MOVF   00,W
0982:  IORWF  xAF,W
0984:  MOVWF  01
.................... } 
0986:  RETLW  00
....................  
.................... BYTE lcd_read_nibble(void) 
.................... { 
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
*
08EA:  CLRF   xB1
....................    BYTE n = 0x00; 
....................  
....................    /* Read the data port */ 
....................    n |= input(LCD_DATA4); 
08EC:  BSF    F95.4
08EE:  MOVLW  00
08F0:  BTFSC  F83.4
08F2:  MOVLW  01
08F4:  IORWF  xB1,F
....................    n |= input(LCD_DATA5) << 1; 
08F6:  BSF    F95.5
08F8:  MOVLW  00
08FA:  BTFSC  F83.5
08FC:  MOVLW  01
08FE:  MOVWF  00
0900:  BCF    FD8.0
0902:  RLCF   00,F
0904:  MOVF   00,W
0906:  IORWF  xB1,F
....................    n |= input(LCD_DATA6) << 2; 
0908:  BSF    F95.6
090A:  MOVLW  00
090C:  BTFSC  F83.6
090E:  MOVLW  01
0910:  MOVWF  00
0912:  RLCF   00,F
0914:  RLCF   00,F
0916:  MOVLW  FC
0918:  ANDWF  00,F
091A:  MOVF   00,W
091C:  IORWF  xB1,F
....................    n |= input(LCD_DATA7) << 3; 
091E:  BSF    F95.7
0920:  MOVLW  00
0922:  BTFSC  F83.7
0924:  MOVLW  01
0926:  MOVWF  00
0928:  RLCF   00,F
092A:  RLCF   00,F
092C:  RLCF   00,F
092E:  MOVLW  F8
0930:  ANDWF  00,F
0932:  MOVF   00,W
0934:  IORWF  xB1,F
....................     
....................    return(n); 
0936:  MOVFF  B1,01
....................   #else 
....................    return(lcd.data); 
....................   #endif 
.................... } 
093A:  RETLW  00
....................  
.................... void lcd_send_nibble(BYTE n) 
.................... { 
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
....................    /* Write to the data port */ 
....................    output_bit(LCD_DATA4, bit_test(n, 0)); 
*
0988:  BTFSC  xB0.0
098A:  BRA    0990
098C:  BCF    F8C.4
098E:  BRA    0992
0990:  BSF    F8C.4
0992:  BCF    F95.4
....................    output_bit(LCD_DATA5, bit_test(n, 1)); 
0994:  BTFSC  xB0.1
0996:  BRA    099C
0998:  BCF    F8C.5
099A:  BRA    099E
099C:  BSF    F8C.5
099E:  BCF    F95.5
....................    output_bit(LCD_DATA6, bit_test(n, 2)); 
09A0:  BTFSC  xB0.2
09A2:  BRA    09A8
09A4:  BCF    F8C.6
09A6:  BRA    09AA
09A8:  BSF    F8C.6
09AA:  BCF    F95.6
....................    output_bit(LCD_DATA7, bit_test(n, 3)); 
09AC:  BTFSC  xB0.3
09AE:  BRA    09B4
09B0:  BCF    F8C.7
09B2:  BRA    09B6
09B4:  BSF    F8C.7
09B6:  BCF    F95.7
....................   #else       
....................    lcdlat.data = n; 
....................   #endif 
....................        
....................    delay_cycles(1); 
09B8:  NOP   
....................    lcd_output_enable(1); 
09BA:  BSF    F8C.2
09BC:  BCF    F95.2
....................    delay_us(2); 
09BE:  MOVLW  03
09C0:  MOVWF  00
09C2:  DECFSZ 00,F
09C4:  BRA    09C2
....................    lcd_output_enable(0); 
09C6:  BCF    F8C.2
09C8:  BCF    F95.2
.................... } 
09CA:  RETLW  00
....................  
.................... void lcd_send_byte(BYTE address, BYTE n) 
.................... { 
....................    lcd_output_rs(0); 
09CC:  BCF    F8C.0
09CE:  BCF    F95.0
....................    while ( bit_test(lcd_read_byte(),7) ) ; 
09D0:  RCALL  093C
09D2:  MOVFF  01,AF
09D6:  BTFSC  01.7
09D8:  BRA    09D0
....................    lcd_output_rs(address); 
09DA:  MOVF   xAD,F
09DC:  BNZ   09E2
09DE:  BCF    F8C.0
09E0:  BRA    09E4
09E2:  BSF    F8C.0
09E4:  BCF    F95.0
....................    delay_cycles(1); 
09E6:  NOP   
....................    lcd_output_rw(0); 
09E8:  BCF    F8C.1
09EA:  BCF    F95.1
....................    delay_cycles(1); 
09EC:  NOP   
....................    lcd_output_enable(0); 
09EE:  BCF    F8C.2
09F0:  BCF    F95.2
....................    lcd_send_nibble(n >> 4); 
09F2:  SWAPF  xAE,W
09F4:  MOVWF  xAF
09F6:  MOVLW  0F
09F8:  ANDWF  xAF,F
09FA:  MOVFF  AF,B0
09FE:  RCALL  0988
....................    lcd_send_nibble(n & 0xf); 
0A00:  MOVF   xAE,W
0A02:  ANDLW  0F
0A04:  MOVWF  xAF
0A06:  MOVWF  xB0
0A08:  RCALL  0988
.................... } 
0A0A:  RETLW  00
....................  
.................... void lcd_init(void)  
.................... { 
....................    BYTE i; 
....................  
....................  #if defined(__PCB__) 
....................    set_tris_lcd(LCD_OUTPUT_MAP); 
....................  #else 
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
....................    output_drive(LCD_DATA4); 
*
0F36:  BCF    F95.4
....................    output_drive(LCD_DATA5); 
0F38:  BCF    F95.5
....................    output_drive(LCD_DATA6); 
0F3A:  BCF    F95.6
....................    output_drive(LCD_DATA7); 
0F3C:  BCF    F95.7
....................   #else 
....................    lcdtris.data = 0x0; 
....................   #endif 
....................    lcd_enable_tris(); 
0F3E:  BCF    F95.2
....................    lcd_rs_tris(); 
0F40:  BCF    F95.0
....................    lcd_rw_tris(); 
0F42:  BCF    F95.1
....................  #endif 
....................  
....................    lcd_output_rs(0); 
0F44:  BCF    F8C.0
0F46:  BCF    F95.0
....................    lcd_output_rw(0); 
0F48:  BCF    F8C.1
0F4A:  BCF    F95.1
....................    lcd_output_enable(0); 
0F4C:  BCF    F8C.2
0F4E:  BCF    F95.2
0F50:  CLRF   16
0F52:  BTFSC  FF2.7
0F54:  BSF    16.7
0F56:  BCF    FF2.7
....................      
....................    delay_ms(15); 
0F58:  MOVLW  0F
0F5A:  MOVWF  xA9
0F5C:  CALL   0246
0F60:  BTFSC  16.7
0F62:  BSF    FF2.7
....................    for(i=1;i<=3;++i) 
0F64:  MOVLW  01
0F66:  MOVWF  x99
0F68:  MOVF   x99,W
0F6A:  SUBLW  03
0F6C:  BNC   0F98
0F6E:  CLRF   16
0F70:  BTFSC  FF2.7
0F72:  BSF    16.7
0F74:  BCF    FF2.7
....................    { 
....................        lcd_send_nibble(3); 
0F76:  MOVLW  03
0F78:  MOVWF  xB0
0F7A:  RCALL  0988
0F7C:  BTFSC  16.7
0F7E:  BSF    FF2.7
0F80:  CLRF   16
0F82:  BTFSC  FF2.7
0F84:  BSF    16.7
0F86:  BCF    FF2.7
....................        delay_ms(5); 
0F88:  MOVLW  05
0F8A:  MOVWF  xA9
0F8C:  CALL   0246
0F90:  BTFSC  16.7
0F92:  BSF    FF2.7
....................    } 
0F94:  INCF   x99,F
0F96:  BRA    0F68
0F98:  CLRF   16
0F9A:  BTFSC  FF2.7
0F9C:  BSF    16.7
0F9E:  BCF    FF2.7
....................      
....................    lcd_send_nibble(2); 
0FA0:  MOVLW  02
0FA2:  MOVWF  xB0
0FA4:  RCALL  0988
0FA6:  BTFSC  16.7
0FA8:  BSF    FF2.7
....................    for(i=0;i<=3;++i) 
0FAA:  CLRF   x99
0FAC:  MOVF   x99,W
0FAE:  SUBLW  03
0FB0:  BNC   0FDC
....................       lcd_send_byte(0,LCD_INIT_STRING[i]); 
0FB2:  CLRF   03
0FB4:  MOVF   x99,W
0FB6:  MOVFF  FF2,9A
0FBA:  BCF    FF2.7
0FBC:  CALL   00A2
0FC0:  BTFSC  x9A.7
0FC2:  BSF    FF2.7
0FC4:  MOVWF  x9A
0FC6:  CLRF   16
0FC8:  BTFSC  FF2.7
0FCA:  BSF    16.7
0FCC:  BCF    FF2.7
0FCE:  CLRF   xAD
0FD0:  MOVWF  xAE
0FD2:  RCALL  09CC
0FD4:  BTFSC  16.7
0FD6:  BSF    FF2.7
0FD8:  INCF   x99,F
0FDA:  BRA    0FAC
.................... } 
0FDC:  GOTO   3C02 (RETURN)
....................  
.................... void lcd_gotoxy(BYTE x, BYTE y) 
.................... { 
....................    BYTE address; 
....................  
....................    if(y!=1) 
*
0A0C:  DECFSZ xAA,W
0A0E:  BRA    0A12
0A10:  BRA    0A18
....................       address=LCD_LINE_TWO; 
0A12:  MOVLW  40
0A14:  MOVWF  xAB
....................    else 
0A16:  BRA    0A1A
....................       address=0; 
0A18:  CLRF   xAB
....................       
....................    address+=x-1; 
0A1A:  MOVLW  01
0A1C:  SUBWF  xA9,W
0A1E:  ADDWF  xAB,F
....................    lcd_send_byte(0,0x80|address); 
0A20:  MOVF   xAB,W
0A22:  IORLW  80
0A24:  MOVWF  xAC
0A26:  CLRF   xAD
0A28:  MOVWF  xAE
0A2A:  RCALL  09CC
.................... } 
0A2C:  RETLW  00
....................  
.................... void lcd_putc(char c) 
.................... { 
....................    switch (c) 
....................    { 
0A2E:  MOVF   xA8,W
0A30:  XORLW  0C
0A32:  BZ    0A3E
0A34:  XORLW  06
0A36:  BZ    0A50
0A38:  XORLW  02
0A3A:  BZ    0A5C
0A3C:  BRA    0A66
....................       case '\f'   :  lcd_send_byte(0,1); 
0A3E:  CLRF   xAD
0A40:  MOVLW  01
0A42:  MOVWF  xAE
0A44:  RCALL  09CC
....................                      delay_ms(2); 
0A46:  MOVLW  02
0A48:  MOVWF  xA9
0A4A:  CALL   0246
....................                      break; 
0A4E:  BRA    0A72
....................                       
....................       case '\n'   : lcd_gotoxy(1,2);        break; 
0A50:  MOVLW  01
0A52:  MOVWF  xA9
0A54:  MOVLW  02
0A56:  MOVWF  xAA
0A58:  RCALL  0A0C
0A5A:  BRA    0A72
....................       
....................       case '\b'   : lcd_send_byte(0,0x10);  break; 
0A5C:  CLRF   xAD
0A5E:  MOVLW  10
0A60:  MOVWF  xAE
0A62:  RCALL  09CC
0A64:  BRA    0A72
....................       
....................       default     : lcd_send_byte(1,c);     break; 
0A66:  MOVLW  01
0A68:  MOVWF  xAD
0A6A:  MOVFF  A8,AE
0A6E:  RCALL  09CC
0A70:  BRA    0A72
....................    } 
.................... } 
0A72:  RETLW  00
....................   
.................... char lcd_getc(BYTE x, BYTE y) 
.................... { 
....................    char value; 
....................  
....................    lcd_gotoxy(x,y); 
....................    while ( bit_test(lcd_read_byte(),7) ); // wait until busy flag is low 
....................    lcd_output_rs(1); 
....................    value = lcd_read_byte(); 
....................    lcd_output_rs(0); 
....................     
....................    return(value); 
.................... } 
....................  
.................... //definiendo puertos 
.................... //valores de la pc 
.................... #byte TOSU=0xFFF  
.................... #byte TOSH=0xFFE 
.................... #byte TOSL=0xFFD 
.................... #byte STKPTR=0xFFC 
.................... #byte PCLATU=0xFFB 
.................... #byte PCLATH=0xFFA 
....................  
.................... #byte tris_a =0xf92 
.................... #byte port_a =0xf80 
.................... #byte tris_b =0xf93 
.................... #byte port_b =0xf81 
.................... #byte tris_c =0xf94 
.................... #byte port_c =0xf82 
.................... #byte tris_d =0xf95 
.................... #byte port_d =0xf83 
.................... #byte tris_e =0xf96 
.................... #byte port_e =0xf84 
.................... //definiendo bits 
.................... #bit rb0=port_b.0 //quantum 
.................... #bit rb1=port_b.1 //proceso1 
.................... #bit rb2=port_b.2 //proceso2 
.................... #bit rb3=port_b.3 //proceso3 
.................... #bit rb5=port_b.5 //sistema operativo 
.................... #bit rb6=port_b.6 //indicador si funciona el quantum 
.................... //definiendo variables 
.................... //para la pc 
.................... int8 aa,bb,cc; 
.................... // 
.................... char tecla_pulsada; 
.................... int mensaje_recibido; 
.................... int contador1=0; 
.................... int contador2=0; 
.................... int contador3=0; 
.................... int copia1; 
.................... int copia2; 
.................... int copia3; 
.................... //estados 
.................... char est1[12]; 
.................... char est2[12]; 
.................... char est3[12]; 
.................... //flags 
.................... int flag_ver=0; 
.................... int flag_procesador=0; 
.................... int flag_so=0; 
.................... //acumuladores 
.................... long int acc1; 
.................... long int acc2; 
.................... long int acc3; 
.................... //colas 
.................... int cola1; 
.................... int cola2; 
.................... int cola3; 
.................... char col_fijo[20]; 
.................... //tiempos de duracion de cada proceso 
.................... long int time1=2500;//10 
.................... long int time2=4000;//16 
.................... long int time3=5000;//20 
.................... long int quantum=250;/// 250 ms 
.................... //estructura del bloque de control de procesos(PCB) 
....................  typedef struct  { 
....................  int id; 
....................  int estado; 
....................  int dir_inicio; 
....................  int id_corriente;//el valor del PC 
....................  long int tiempo; 
....................  }bloque ; 
....................  long int acumulador; 
....................  bloque pcb[3]; 
....................  int cola [3];//cola de procesos 
....................  char col[20]; 
.................... //funcion para ver procesos 
....................  void ver_estado_proceso (int a){ 
....................  //0=vacio 
....................  //1=ejecutandose 
....................  //2=cargado 
....................      if(a==0){ 
*
028A:  MOVF   xA6,F
028C:  BTFSS  FD8.2
028E:  BRA    03A8
....................     if(contador1*quantum==0) 
0290:  CLRF   xA8
0292:  MOVFF  1C,A7
0296:  MOVFF  6D,AA
029A:  MOVFF  6C,A9
029E:  RCALL  026C
02A0:  MOVFF  02,A8
02A4:  MOVFF  01,A7
02A8:  MOVF   xA7,F
02AA:  BNZ   02D0
02AC:  MOVF   xA8,F
02AE:  BNZ   02D0
....................      est1= "pasivo" ; 
02B0:  CLRF   FEA
02B2:  MOVLW  22
02B4:  MOVWF  FE9
02B6:  MOVFF  FF2,A7
02BA:  BCF    FF2.7
02BC:  MOVLW  00
02BE:  RCALL  00C0
02C0:  TBLRD*-
02C2:  TBLRD*+
02C4:  MOVF   FF5,W
02C6:  MOVWF  FEE
02C8:  IORLW  00
02CA:  BNZ   02C2
02CC:  BTFSC  xA7.7
02CE:  BSF    FF2.7
....................      acc1=0; 
02D0:  CLRF   4A
02D2:  CLRF   49
....................      cola1=0; 
02D4:  CLRF   4F
....................     if(contador1*quantum>0 && contador1*quantum<time1){ 
02D6:  CLRF   xA8
02D8:  MOVFF  1C,A7
02DC:  MOVFF  6D,AA
02E0:  MOVFF  6C,A9
02E4:  RCALL  026C
02E6:  MOVFF  02,A8
02EA:  MOVFF  01,A7
02EE:  MOVF   xA7,F
02F0:  BNZ   02F6
02F2:  MOVF   xA8,F
02F4:  BZ    0358
02F6:  CLRF   xA8
02F8:  MOVFF  1C,A7
02FC:  MOVFF  6D,AA
0300:  MOVFF  6C,A9
0304:  RCALL  026C
0306:  MOVFF  02,A8
030A:  MOVFF  01,A7
030E:  MOVF   02,W
0310:  SUBWF  67,W
0312:  BNC   0358
0314:  BNZ   031C
0316:  MOVF   66,W
0318:  SUBWF  xA7,W
031A:  BC    0358
....................      est1="ejecutando"; 
031C:  CLRF   FEA
031E:  MOVLW  22
0320:  MOVWF  FE9
0322:  MOVFF  FF2,A7
0326:  BCF    FF2.7
0328:  MOVLW  00
032A:  RCALL  00D8
032C:  TBLRD*-
032E:  TBLRD*+
0330:  MOVF   FF5,W
0332:  MOVWF  FEE
0334:  IORLW  00
0336:  BNZ   032E
0338:  BTFSC  xA7.7
033A:  BSF    FF2.7
....................      acc1=contador1*quantum; 
033C:  CLRF   xA8
033E:  MOVFF  1C,A7
0342:  MOVFF  6D,AA
0346:  MOVFF  6C,A9
034A:  RCALL  026C
034C:  MOVFF  02,4A
0350:  MOVFF  01,49
....................      cola1=1; 
0354:  MOVLW  01
0356:  MOVWF  4F
....................     } 
....................     if(contador1*quantum>=time1){ 
0358:  CLRF   xA8
035A:  MOVFF  1C,A7
035E:  MOVFF  6D,AA
0362:  MOVFF  6C,A9
0366:  RCALL  026C
0368:  MOVFF  02,A8
036C:  MOVFF  01,A7
0370:  MOVF   67,W
0372:  SUBWF  02,W
0374:  BNC   03A8
0376:  BNZ   037E
0378:  MOVF   66,W
037A:  SUBWF  xA7,W
037C:  BNC   03A8
....................      est1="finalizo"; 
037E:  CLRF   FEA
0380:  MOVLW  22
0382:  MOVWF  FE9
0384:  MOVFF  FF2,A7
0388:  BCF    FF2.7
038A:  MOVLW  00
038C:  RCALL  00F4
038E:  TBLRD*-
0390:  TBLRD*+
0392:  MOVF   FF5,W
0394:  MOVWF  FEE
0396:  IORLW  00
0398:  BNZ   0390
039A:  BTFSC  xA7.7
039C:  BSF    FF2.7
....................      acc1=time1; 
039E:  MOVFF  67,4A
03A2:  MOVFF  66,49
....................      cola1=0; 
03A6:  CLRF   4F
....................     } 
....................      } 
....................      if(a==1){ 
03A8:  DECFSZ xA6,W
03AA:  BRA    04C4
....................     if(contador2*quantum==0) 
03AC:  CLRF   xA8
03AE:  MOVFF  1D,A7
03B2:  MOVFF  6D,AA
03B6:  MOVFF  6C,A9
03BA:  RCALL  026C
03BC:  MOVFF  02,A8
03C0:  MOVFF  01,A7
03C4:  MOVF   xA7,F
03C6:  BNZ   03EC
03C8:  MOVF   xA8,F
03CA:  BNZ   03EC
....................      est2= "pasivo" ; 
03CC:  CLRF   FEA
03CE:  MOVLW  2E
03D0:  MOVWF  FE9
03D2:  MOVFF  FF2,A7
03D6:  BCF    FF2.7
03D8:  MOVLW  00
03DA:  RCALL  00C0
03DC:  TBLRD*-
03DE:  TBLRD*+
03E0:  MOVF   FF5,W
03E2:  MOVWF  FEE
03E4:  IORLW  00
03E6:  BNZ   03DE
03E8:  BTFSC  xA7.7
03EA:  BSF    FF2.7
....................      acc2=0; 
03EC:  CLRF   4C
03EE:  CLRF   4B
....................      cola2=0; 
03F0:  CLRF   50
....................     if(contador2*quantum>0 && contador2*quantum<time2){ 
03F2:  CLRF   xA8
03F4:  MOVFF  1D,A7
03F8:  MOVFF  6D,AA
03FC:  MOVFF  6C,A9
0400:  RCALL  026C
0402:  MOVFF  02,A8
0406:  MOVFF  01,A7
040A:  MOVF   xA7,F
040C:  BNZ   0412
040E:  MOVF   xA8,F
0410:  BZ    0474
0412:  CLRF   xA8
0414:  MOVFF  1D,A7
0418:  MOVFF  6D,AA
041C:  MOVFF  6C,A9
0420:  RCALL  026C
0422:  MOVFF  02,A8
0426:  MOVFF  01,A7
042A:  MOVF   02,W
042C:  SUBWF  69,W
042E:  BNC   0474
0430:  BNZ   0438
0432:  MOVF   68,W
0434:  SUBWF  xA7,W
0436:  BC    0474
....................      est2="ejecutando"; 
0438:  CLRF   FEA
043A:  MOVLW  2E
043C:  MOVWF  FE9
043E:  MOVFF  FF2,A7
0442:  BCF    FF2.7
0444:  MOVLW  00
0446:  RCALL  00D8
0448:  TBLRD*-
044A:  TBLRD*+
044C:  MOVF   FF5,W
044E:  MOVWF  FEE
0450:  IORLW  00
0452:  BNZ   044A
0454:  BTFSC  xA7.7
0456:  BSF    FF2.7
....................      acc2=contador2*quantum; 
0458:  CLRF   xA8
045A:  MOVFF  1D,A7
045E:  MOVFF  6D,AA
0462:  MOVFF  6C,A9
0466:  RCALL  026C
0468:  MOVFF  02,4C
046C:  MOVFF  01,4B
....................      cola2=1; 
0470:  MOVLW  01
0472:  MOVWF  50
....................     } 
....................     if(contador2*quantum>=time2){ 
0474:  CLRF   xA8
0476:  MOVFF  1D,A7
047A:  MOVFF  6D,AA
047E:  MOVFF  6C,A9
0482:  RCALL  026C
0484:  MOVFF  02,A8
0488:  MOVFF  01,A7
048C:  MOVF   69,W
048E:  SUBWF  02,W
0490:  BNC   04C4
0492:  BNZ   049A
0494:  MOVF   68,W
0496:  SUBWF  xA7,W
0498:  BNC   04C4
....................      est2="finalizo"; 
049A:  CLRF   FEA
049C:  MOVLW  2E
049E:  MOVWF  FE9
04A0:  MOVFF  FF2,A7
04A4:  BCF    FF2.7
04A6:  MOVLW  00
04A8:  RCALL  00F4
04AA:  TBLRD*-
04AC:  TBLRD*+
04AE:  MOVF   FF5,W
04B0:  MOVWF  FEE
04B2:  IORLW  00
04B4:  BNZ   04AC
04B6:  BTFSC  xA7.7
04B8:  BSF    FF2.7
....................      acc2=time2; 
04BA:  MOVFF  69,4C
04BE:  MOVFF  68,4B
....................      cola2=0; 
04C2:  CLRF   50
....................     } 
....................      } 
....................      if(a==2){ 
04C4:  MOVF   xA6,W
04C6:  SUBLW  02
04C8:  BTFSS  FD8.2
04CA:  BRA    05E4
....................     if(contador3*quantum==0) 
04CC:  CLRF   xA8
04CE:  MOVFF  1E,A7
04D2:  MOVFF  6D,AA
04D6:  MOVFF  6C,A9
04DA:  RCALL  026C
04DC:  MOVFF  02,A8
04E0:  MOVFF  01,A7
04E4:  MOVF   xA7,F
04E6:  BNZ   050C
04E8:  MOVF   xA8,F
04EA:  BNZ   050C
....................      est3= "pasivo" ; 
04EC:  CLRF   FEA
04EE:  MOVLW  3A
04F0:  MOVWF  FE9
04F2:  MOVFF  FF2,A7
04F6:  BCF    FF2.7
04F8:  MOVLW  00
04FA:  RCALL  00C0
04FC:  TBLRD*-
04FE:  TBLRD*+
0500:  MOVF   FF5,W
0502:  MOVWF  FEE
0504:  IORLW  00
0506:  BNZ   04FE
0508:  BTFSC  xA7.7
050A:  BSF    FF2.7
....................      acc3=0; 
050C:  CLRF   4E
050E:  CLRF   4D
....................      cola3=0; 
0510:  CLRF   51
....................     if(contador3*quantum>0 && contador3*quantum<time3){ 
0512:  CLRF   xA8
0514:  MOVFF  1E,A7
0518:  MOVFF  6D,AA
051C:  MOVFF  6C,A9
0520:  RCALL  026C
0522:  MOVFF  02,A8
0526:  MOVFF  01,A7
052A:  MOVF   xA7,F
052C:  BNZ   0532
052E:  MOVF   xA8,F
0530:  BZ    0594
0532:  CLRF   xA8
0534:  MOVFF  1E,A7
0538:  MOVFF  6D,AA
053C:  MOVFF  6C,A9
0540:  RCALL  026C
0542:  MOVFF  02,A8
0546:  MOVFF  01,A7
054A:  MOVF   02,W
054C:  SUBWF  6B,W
054E:  BNC   0594
0550:  BNZ   0558
0552:  MOVF   6A,W
0554:  SUBWF  xA7,W
0556:  BC    0594
....................      est3="ejecutando"; 
0558:  CLRF   FEA
055A:  MOVLW  3A
055C:  MOVWF  FE9
055E:  MOVFF  FF2,A7
0562:  BCF    FF2.7
0564:  MOVLW  00
0566:  RCALL  00D8
0568:  TBLRD*-
056A:  TBLRD*+
056C:  MOVF   FF5,W
056E:  MOVWF  FEE
0570:  IORLW  00
0572:  BNZ   056A
0574:  BTFSC  xA7.7
0576:  BSF    FF2.7
....................      acc3=contador3*quantum; 
0578:  CLRF   xA8
057A:  MOVFF  1E,A7
057E:  MOVFF  6D,AA
0582:  MOVFF  6C,A9
0586:  RCALL  026C
0588:  MOVFF  02,4E
058C:  MOVFF  01,4D
....................      cola3=1; 
0590:  MOVLW  01
0592:  MOVWF  51
....................     } 
....................     if(contador3*quantum>=time3){ 
0594:  CLRF   xA8
0596:  MOVFF  1E,A7
059A:  MOVFF  6D,AA
059E:  MOVFF  6C,A9
05A2:  RCALL  026C
05A4:  MOVFF  02,A8
05A8:  MOVFF  01,A7
05AC:  MOVF   6B,W
05AE:  SUBWF  02,W
05B0:  BNC   05E4
05B2:  BNZ   05BA
05B4:  MOVF   6A,W
05B6:  SUBWF  xA7,W
05B8:  BNC   05E4
....................      est3="finalizo"; 
05BA:  CLRF   FEA
05BC:  MOVLW  3A
05BE:  MOVWF  FE9
05C0:  MOVFF  FF2,A7
05C4:  BCF    FF2.7
05C6:  MOVLW  00
05C8:  RCALL  00F4
05CA:  TBLRD*-
05CC:  TBLRD*+
05CE:  MOVF   FF5,W
05D0:  MOVWF  FEE
05D2:  IORLW  00
05D4:  BNZ   05CC
05D6:  BTFSC  xA7.7
05D8:  BSF    FF2.7
....................      acc3=time3; 
05DA:  MOVFF  6B,4E
05DE:  MOVFF  6A,4D
....................      cola3=0; 
05E2:  CLRF   51
....................     } 
....................      } 
....................      
....................  } 
05E4:  RETLW  00
....................   void ver_cola(int a ,int b,int c){ 
....................      if(a==0 && b==0 && c==0){ 
*
0786:  MOVF   xA6,F
0788:  BNZ   07B2
078A:  MOVF   xA7,F
078C:  BNZ   07B2
078E:  MOVF   xA8,F
0790:  BNZ   07B2
....................        col_fijo="no hay procesos"; 
0792:  CLRF   FEA
0794:  MOVLW  52
0796:  MOVWF  FE9
0798:  MOVFF  FF2,A9
079C:  BCF    FF2.7
079E:  MOVLW  00
07A0:  RCALL  010E
07A2:  TBLRD*-
07A4:  TBLRD*+
07A6:  MOVF   FF5,W
07A8:  MOVWF  FEE
07AA:  IORLW  00
07AC:  BNZ   07A4
07AE:  BTFSC  xA9.7
07B0:  BSF    FF2.7
....................         } 
....................      if(a==1 && b==0 && c==0){ 
07B2:  DECFSZ xA6,W
07B4:  BRA    07DE
07B6:  MOVF   xA7,F
07B8:  BNZ   07DE
07BA:  MOVF   xA8,F
07BC:  BNZ   07DE
....................        col_fijo="solo el proceso 1";  
07BE:  CLRF   FEA
07C0:  MOVLW  52
07C2:  MOVWF  FE9
07C4:  MOVFF  FF2,A9
07C8:  BCF    FF2.7
07CA:  MOVLW  00
07CC:  RCALL  012E
07CE:  TBLRD*-
07D0:  TBLRD*+
07D2:  MOVF   FF5,W
07D4:  MOVWF  FEE
07D6:  IORLW  00
07D8:  BNZ   07D0
07DA:  BTFSC  xA9.7
07DC:  BSF    FF2.7
....................      } 
....................      if(a==1 && b==1 && c==0){ 
07DE:  DECFSZ xA6,W
07E0:  BRA    080A
07E2:  DECFSZ xA7,W
07E4:  BRA    080A
07E6:  MOVF   xA8,F
07E8:  BNZ   080A
....................        col_fijo="procesos 1 y 2"; 
07EA:  CLRF   FEA
07EC:  MOVLW  52
07EE:  MOVWF  FE9
07F0:  MOVFF  FF2,A9
07F4:  BCF    FF2.7
07F6:  MOVLW  00
07F8:  RCALL  0150
07FA:  TBLRD*-
07FC:  TBLRD*+
07FE:  MOVF   FF5,W
0800:  MOVWF  FEE
0802:  IORLW  00
0804:  BNZ   07FC
0806:  BTFSC  xA9.7
0808:  BSF    FF2.7
....................      } 
....................      if(a==1 && b==0 && c==1){ 
080A:  DECFSZ xA6,W
080C:  BRA    0836
080E:  MOVF   xA7,F
0810:  BNZ   0836
0812:  DECFSZ xA8,W
0814:  BRA    0836
....................        col_fijo="procesos 1 y 3"; 
0816:  CLRF   FEA
0818:  MOVLW  52
081A:  MOVWF  FE9
081C:  MOVFF  FF2,A9
0820:  BCF    FF2.7
0822:  MOVLW  00
0824:  RCALL  0170
0826:  TBLRD*-
0828:  TBLRD*+
082A:  MOVF   FF5,W
082C:  MOVWF  FEE
082E:  IORLW  00
0830:  BNZ   0828
0832:  BTFSC  xA9.7
0834:  BSF    FF2.7
....................      } 
....................       if(a==0 && b==1 && c==0){ 
0836:  MOVF   xA6,F
0838:  BNZ   0862
083A:  DECFSZ xA7,W
083C:  BRA    0862
083E:  MOVF   xA8,F
0840:  BNZ   0862
....................        col_fijo="solo el proceso 2"; 
0842:  CLRF   FEA
0844:  MOVLW  52
0846:  MOVWF  FE9
0848:  MOVFF  FF2,A9
084C:  BCF    FF2.7
084E:  MOVLW  00
0850:  RCALL  0190
0852:  TBLRD*-
0854:  TBLRD*+
0856:  MOVF   FF5,W
0858:  MOVWF  FEE
085A:  IORLW  00
085C:  BNZ   0854
085E:  BTFSC  xA9.7
0860:  BSF    FF2.7
....................      } 
....................      if(a==0 && b==0 && c==1){ 
0862:  MOVF   xA6,F
0864:  BNZ   088E
0866:  MOVF   xA7,F
0868:  BNZ   088E
086A:  DECFSZ xA8,W
086C:  BRA    088E
....................        col_fijo="solo el proceso 3"; 
086E:  CLRF   FEA
0870:  MOVLW  52
0872:  MOVWF  FE9
0874:  MOVFF  FF2,A9
0878:  BCF    FF2.7
087A:  MOVLW  00
087C:  RCALL  01B2
087E:  TBLRD*-
0880:  TBLRD*+
0882:  MOVF   FF5,W
0884:  MOVWF  FEE
0886:  IORLW  00
0888:  BNZ   0880
088A:  BTFSC  xA9.7
088C:  BSF    FF2.7
....................      } 
....................      if(a==0 && b==1 && c==1){ 
088E:  MOVF   xA6,F
0890:  BNZ   08BA
0892:  DECFSZ xA7,W
0894:  BRA    08BA
0896:  DECFSZ xA8,W
0898:  BRA    08BA
....................        col_fijo="procesos 2 y 3"; 
089A:  CLRF   FEA
089C:  MOVLW  52
089E:  MOVWF  FE9
08A0:  MOVFF  FF2,A9
08A4:  BCF    FF2.7
08A6:  MOVLW  00
08A8:  RCALL  01D4
08AA:  TBLRD*-
08AC:  TBLRD*+
08AE:  MOVF   FF5,W
08B0:  MOVWF  FEE
08B2:  IORLW  00
08B4:  BNZ   08AC
08B6:  BTFSC  xA9.7
08B8:  BSF    FF2.7
....................      }  
....................      if(a==1 && b==1 && c==1){ 
08BA:  DECFSZ xA6,W
08BC:  BRA    08E6
08BE:  DECFSZ xA7,W
08C0:  BRA    08E6
08C2:  DECFSZ xA8,W
08C4:  BRA    08E6
....................        col_fijo="procesos 1,2 y 3"; 
08C6:  CLRF   FEA
08C8:  MOVLW  52
08CA:  MOVWF  FE9
08CC:  MOVFF  FF2,A9
08D0:  BCF    FF2.7
08D2:  MOVLW  00
08D4:  RCALL  01F4
08D6:  TBLRD*-
08D8:  TBLRD*+
08DA:  MOVF   FF5,W
08DC:  MOVWF  FEE
08DE:  IORLW  00
08E0:  BNZ   08D8
08E2:  BTFSC  xA9.7
08E4:  BSF    FF2.7
....................      } 
....................      
....................   } 
08E6:  GOTO   0D08 (RETURN)
.................... //interrupciones 
.................... #int_rda  
.................... void RDA_isr(){ 
.................... tecla_pulsada=getc(); 
*
0216:  BTFSS  F9E.5
0218:  BRA    0216
021A:  MOVFF  FAE,1A
.................... mensaje_recibido=1; 
021E:  MOVLW  01
0220:  MOVWF  1B
.................... if(tecla_pulsada=='v')flag_ver=1; 
0222:  MOVF   1A,W
0224:  SUBLW  76
0226:  BNZ   022C
0228:  MOVLW  01
022A:  MOVWF  46
.................... if(tecla_pulsada=='p')flag_procesador=1; 
022C:  MOVF   1A,W
022E:  SUBLW  70
0230:  BNZ   0236
0232:  MOVLW  01
0234:  MOVWF  47
.................... if(tecla_pulsada=='s')flag_so=1; 
0236:  MOVF   1A,W
0238:  SUBLW  73
023A:  BNZ   0240
023C:  MOVLW  01
023E:  MOVWF  48
.................... //!port_b=0; 
.................... } 
.................... //funcion interrupcion serial 
0240:  BCF    F9E.5
0242:  GOTO   0060
.................... #int_timer0 
.................... //interrupcion del timer0,para hallar el quantum 
.................... //funcion quantum  
.................... void timer0_isr(){ 
.................... delay_ms(quantum-4); 
*
0A94:  MOVLW  04
0A96:  SUBWF  6C,W
0A98:  MOVWF  xA6
0A9A:  MOVLW  00
0A9C:  SUBWFB 6D,W
0A9E:  MOVWF  xA7
0AA0:  MOVWF  xA8
0AA2:  INCF   xA8,F
0AA4:  DECF   xA8,F
0AA6:  BTFSC  FD8.2
0AA8:  BRA    0AB4
0AAA:  MOVLW  FF
0AAC:  MOVWF  xA9
0AAE:  CALL   0246
0AB2:  BRA    0AA4
0AB4:  MOVFF  A6,A9
0AB8:  CALL   0246
....................    rb6=!rb6; 
0ABC:  BTG    F81.6
....................    rb0=!rb0; 
0ABE:  BTG    F81.0
....................    if(tecla_pulsada=='v'&& flag_ver==1){ 
0AC0:  MOVF   1A,W
0AC2:  SUBLW  76
0AC4:  BTFSS  FD8.2
0AC6:  BRA    0D22
0AC8:  DECFSZ 46,W
0ACA:  BRA    0D22
....................  // 
....................  aa=TOSL; 
0ACC:  MOVFF  FFD,17
....................  bb=TOSH; 
0AD0:  MOVFF  FFE,18
....................  cc=TOSU; 
0AD4:  MOVFF  FFF,19
.................... //!  est1=ver_estado_proceso(pcb[0].id); 
.................... ver_estado_proceso(pcb[0].id); 
0AD8:  MOVFF  70,A6
0ADC:  CALL   028A
....................   ver_estado_proceso(pcb[1].id); 
0AE0:  MOVFF  76,A6
0AE4:  CALL   028A
....................  ver_estado_proceso(pcb[2].id); 
0AE8:  MOVFF  7C,A6
0AEC:  CALL   028A
....................   pcb[0].tiempo=acc1; 
0AF0:  MOVFF  4A,75
0AF4:  MOVFF  49,74
....................   pcb[1].tiempo=acc2; 
0AF8:  MOVFF  4C,7B
0AFC:  MOVFF  4B,7A
....................   pcb[2].tiempo=acc3; 
0B00:  MOVFF  4E,81
0B04:  MOVFF  4D,80
....................   acumulador=acc1+acc2+acc3; 
0B08:  MOVF   4B,W
0B0A:  ADDWF  49,W
0B0C:  MOVWF  xA6
0B0E:  MOVF   4C,W
0B10:  ADDWFC 4A,W
0B12:  MOVWF  xA7
0B14:  MOVF   4D,W
0B16:  ADDWF  xA6,W
0B18:  MOVWF  6E
0B1A:  MOVF   4E,W
0B1C:  ADDWFC xA7,W
0B1E:  MOVWF  6F
....................   puts("ver procesos"); 
0B20:  MOVLW  76
0B22:  MOVWF  FF6
0B24:  MOVLW  0D
0B26:  MOVWF  FF7
0B28:  RCALL  05E6
0B2A:  MOVLW  0D
0B2C:  BTFSS  F9E.4
0B2E:  BRA    0B2C
0B30:  MOVWF  FAD
0B32:  MOVLW  0A
0B34:  BTFSS  F9E.4
0B36:  BRA    0B34
0B38:  MOVWF  FAD
....................   puts("id     dir-inicio           tiempo         estado"); 
0B3A:  MOVLW  84
0B3C:  MOVWF  FF6
0B3E:  MOVLW  0D
0B40:  MOVWF  FF7
0B42:  RCALL  05E6
0B44:  MOVLW  0D
0B46:  BTFSS  F9E.4
0B48:  BRA    0B46
0B4A:  MOVWF  FAD
0B4C:  MOVLW  0A
0B4E:  BTFSS  F9E.4
0B50:  BRA    0B4E
0B52:  MOVWF  FAD
....................   printf("%1u                 %Lu                  %Lu            ",pcb[0].id,100,pcb[0].tiempo); 
0B54:  MOVFF  70,A6
0B58:  MOVLW  18
0B5A:  MOVWF  xA7
0B5C:  RCALL  0630
0B5E:  MOVLW  B9
0B60:  MOVWF  FF6
0B62:  MOVLW  0D
0B64:  MOVWF  FF7
0B66:  MOVLW  11
0B68:  MOVWF  xA6
0B6A:  RCALL  069C
0B6C:  MOVLW  10
0B6E:  MOVWF  FE9
0B70:  CLRF   xA7
0B72:  MOVLW  64
0B74:  MOVWF  xA6
0B76:  RCALL  06BC
0B78:  MOVLW  CD
0B7A:  MOVWF  FF6
0B7C:  MOVLW  0D
0B7E:  MOVWF  FF7
0B80:  MOVLW  12
0B82:  MOVWF  xA6
0B84:  RCALL  069C
0B86:  MOVLW  10
0B88:  MOVWF  FE9
0B8A:  MOVFF  75,A7
0B8E:  MOVFF  74,A6
0B92:  RCALL  06BC
0B94:  MOVLW  E2
0B96:  MOVWF  FF6
0B98:  MOVLW  0D
0B9A:  MOVWF  FF7
0B9C:  MOVLW  0C
0B9E:  MOVWF  xA6
0BA0:  RCALL  069C
....................   puts(est1); 
0BA2:  CLRF   FEA
0BA4:  MOVLW  22
0BA6:  MOVWF  FE9
0BA8:  RCALL  0760
0BAA:  MOVLW  0D
0BAC:  BTFSS  F9E.4
0BAE:  BRA    0BAC
0BB0:  MOVWF  FAD
0BB2:  MOVLW  0A
0BB4:  BTFSS  F9E.4
0BB6:  BRA    0BB4
0BB8:  MOVWF  FAD
....................    
....................   printf("%1u                 %Lu                  %Lu            ",pcb[1].id,200,pcb[1].tiempo); 
0BBA:  MOVFF  76,A6
0BBE:  MOVLW  18
0BC0:  MOVWF  xA7
0BC2:  RCALL  0630
0BC4:  MOVLW  F3
0BC6:  MOVWF  FF6
0BC8:  MOVLW  0D
0BCA:  MOVWF  FF7
0BCC:  MOVLW  11
0BCE:  MOVWF  xA6
0BD0:  RCALL  069C
0BD2:  MOVLW  10
0BD4:  MOVWF  FE9
0BD6:  CLRF   xA7
0BD8:  MOVLW  C8
0BDA:  MOVWF  xA6
0BDC:  RCALL  06BC
0BDE:  MOVLW  07
0BE0:  MOVWF  FF6
0BE2:  MOVLW  0E
0BE4:  MOVWF  FF7
0BE6:  MOVLW  12
0BE8:  MOVWF  xA6
0BEA:  RCALL  069C
0BEC:  MOVLW  10
0BEE:  MOVWF  FE9
0BF0:  MOVFF  7B,A7
0BF4:  MOVFF  7A,A6
0BF8:  RCALL  06BC
0BFA:  MOVLW  1C
0BFC:  MOVWF  FF6
0BFE:  MOVLW  0E
0C00:  MOVWF  FF7
0C02:  MOVLW  0C
0C04:  MOVWF  xA6
0C06:  RCALL  069C
....................   puts(est2); 
0C08:  CLRF   FEA
0C0A:  MOVLW  2E
0C0C:  MOVWF  FE9
0C0E:  RCALL  0760
0C10:  MOVLW  0D
0C12:  BTFSS  F9E.4
0C14:  BRA    0C12
0C16:  MOVWF  FAD
0C18:  MOVLW  0A
0C1A:  BTFSS  F9E.4
0C1C:  BRA    0C1A
0C1E:  MOVWF  FAD
....................    
....................   printf("%1u                 %Lu                  %Lu            ",pcb[2].id,300,pcb[2].tiempo); 
0C20:  MOVFF  7C,A6
0C24:  MOVLW  18
0C26:  MOVWF  xA7
0C28:  RCALL  0630
0C2A:  MOVLW  2D
0C2C:  MOVWF  FF6
0C2E:  MOVLW  0E
0C30:  MOVWF  FF7
0C32:  MOVLW  11
0C34:  MOVWF  xA6
0C36:  RCALL  069C
0C38:  MOVLW  10
0C3A:  MOVWF  FE9
0C3C:  MOVLW  01
0C3E:  MOVWF  xA7
0C40:  MOVLW  2C
0C42:  MOVWF  xA6
0C44:  RCALL  06BC
0C46:  MOVLW  41
0C48:  MOVWF  FF6
0C4A:  MOVLW  0E
0C4C:  MOVWF  FF7
0C4E:  MOVLW  12
0C50:  MOVWF  xA6
0C52:  RCALL  069C
0C54:  MOVLW  10
0C56:  MOVWF  FE9
0C58:  MOVFF  81,A7
0C5C:  MOVFF  80,A6
0C60:  RCALL  06BC
0C62:  MOVLW  56
0C64:  MOVWF  FF6
0C66:  MOVLW  0E
0C68:  MOVWF  FF7
0C6A:  MOVLW  0C
0C6C:  MOVWF  xA6
0C6E:  RCALL  069C
....................   puts(est3); 
0C70:  CLRF   FEA
0C72:  MOVLW  3A
0C74:  MOVWF  FE9
0C76:  RCALL  0760
0C78:  MOVLW  0D
0C7A:  BTFSS  F9E.4
0C7C:  BRA    0C7A
0C7E:  MOVWF  FAD
0C80:  MOVLW  0A
0C82:  BTFSS  F9E.4
0C84:  BRA    0C82
0C86:  MOVWF  FAD
....................   //el valor de pc 
....................    
....................   printf("valor del pc o id_corriente  " ); 
0C88:  MOVLW  64
0C8A:  MOVWF  FF6
0C8C:  MOVLW  0E
0C8E:  MOVWF  FF7
0C90:  RCALL  05E6
....................    printf("%u%u%u ",aa,bb,cc); 
0C92:  MOVFF  17,A6
0C96:  MOVLW  1B
0C98:  MOVWF  xA7
0C9A:  RCALL  0630
0C9C:  MOVFF  18,A6
0CA0:  MOVLW  1B
0CA2:  MOVWF  xA7
0CA4:  RCALL  0630
0CA6:  MOVFF  19,A6
0CAA:  MOVLW  1B
0CAC:  MOVWF  xA7
0CAE:  RCALL  0630
0CB0:  MOVLW  20
0CB2:  BTFSS  F9E.4
0CB4:  BRA    0CB2
0CB6:  MOVWF  FAD
....................    
....................   //el acumulador 
....................    
....................   printf("  acumulador = %Lu",acumulador); 
0CB8:  MOVLW  82
0CBA:  MOVWF  FF6
0CBC:  MOVLW  0E
0CBE:  MOVWF  FF7
0CC0:  MOVLW  0F
0CC2:  MOVWF  xA6
0CC4:  RCALL  069C
0CC6:  MOVLW  10
0CC8:  MOVWF  FE9
0CCA:  MOVFF  6F,A7
0CCE:  MOVFF  6E,A6
0CD2:  RCALL  06BC
....................   //la cola 
....................   printf("  "); 
0CD4:  MOVLW  20
0CD6:  BTFSS  F9E.4
0CD8:  BRA    0CD6
0CDA:  MOVWF  FAD
0CDC:  MOVLW  20
0CDE:  BTFSS  F9E.4
0CE0:  BRA    0CDE
0CE2:  MOVWF  FAD
....................    
....................   printf(" ----  ver cola :  "); 
0CE4:  MOVLW  96
0CE6:  MOVWF  FF6
0CE8:  MOVLW  0E
0CEA:  MOVWF  FF7
0CEC:  RCALL  05E6
....................   cola[0]=cola1; 
0CEE:  MOVFF  4F,82
....................   cola[1]=cola2; 
0CF2:  MOVFF  50,83
....................   cola[2]=cola3; 
0CF6:  MOVFF  51,84
....................  ver_cola(cola[0],cola[1],cola[2]); 
0CFA:  MOVFF  82,A6
0CFE:  MOVFF  83,A7
0D02:  MOVFF  84,A8
0D06:  BRA    0786
....................   puts(col_fijo); 
0D08:  CLRF   FEA
0D0A:  MOVLW  52
0D0C:  MOVWF  FE9
0D0E:  RCALL  0760
0D10:  MOVLW  0D
0D12:  BTFSS  F9E.4
0D14:  BRA    0D12
0D16:  MOVWF  FAD
0D18:  MOVLW  0A
0D1A:  BTFSS  F9E.4
0D1C:  BRA    0D1A
0D1E:  MOVWF  FAD
....................   // 
....................   flag_ver=0;} 
0D20:  CLRF   46
....................   if(tecla_pulsada=='p'&& flag_procesador==1){ 
0D22:  MOVF   1A,W
0D24:  SUBLW  70
0D26:  BNZ   0D2E
0D28:  DECFSZ 47,W
0D2A:  BRA    0D2E
....................   flag_procesador=0;} 
0D2C:  CLRF   47
....................   if(tecla_pulsada=='s' && flag_so==1){ 
0D2E:  MOVF   1A,W
0D30:  SUBLW  73
0D32:  BNZ   0D6A
0D34:  DECFSZ 48,W
0D36:  BRA    0D6A
....................   lcd_putc("\f"); 
0D38:  MOVLW  AA
0D3A:  MOVWF  FF6
0D3C:  MOVLW  0E
0D3E:  MOVWF  FF7
0D40:  RCALL  0A74
....................   lcd_putc("sist.oper. XAK");  
0D42:  MOVLW  AC
0D44:  MOVWF  FF6
0D46:  MOVLW  0E
0D48:  MOVWF  FF7
0D4A:  RCALL  0A74
....................   puts("sistema operativo XAK"); 
0D4C:  MOVLW  BC
0D4E:  MOVWF  FF6
0D50:  MOVLW  0E
0D52:  MOVWF  FF7
0D54:  RCALL  05E6
0D56:  MOVLW  0D
0D58:  BTFSS  F9E.4
0D5A:  BRA    0D58
0D5C:  MOVWF  FAD
0D5E:  MOVLW  0A
0D60:  BTFSS  F9E.4
0D62:  BRA    0D60
0D64:  MOVWF  FAD
....................    rb5=1; 
0D66:  BSF    F81.5
....................     
....................    flag_so=0;} 
0D68:  CLRF   48
.................... //!   if(tecla_pulsada=='h'&& flag_help==1){ 
.................... //!   flag_help=0;} 
....................    set_timer0(0x01); 
0D6A:  CLRF   FD7
0D6C:  MOVLW  01
0D6E:  MOVWF  FD6
.................... } 
....................   
.................... //funciones de los procesos 
....................  
.................... //proceso1: 
0D70:  BCF    FF2.2
0D72:  GOTO   0060
.................... void do_proceso1(){ 
.................... lcd_putc("\f"); 
*
0FE0:  MOVLW  D2
0FE2:  MOVWF  FF6
0FE4:  MOVLW  0E
0FE6:  MOVWF  FF7
0FE8:  CLRF   16
0FEA:  BTFSC  FF2.7
0FEC:  BSF    16.7
0FEE:  BCF    FF2.7
0FF0:  RCALL  0A74
0FF2:  BTFSC  16.7
0FF4:  BSF    FF2.7
.................... lcd_putc("proceso 1"); 
0FF6:  MOVLW  D4
0FF8:  MOVWF  FF6
0FFA:  MOVLW  0E
0FFC:  MOVWF  FF7
0FFE:  CLRF   16
1000:  BTFSC  FF2.7
1002:  BSF    16.7
1004:  BCF    FF2.7
1006:  RCALL  0A74
1008:  BTFSC  16.7
100A:  BSF    FF2.7
.................... puts("proceso 1"); 
100C:  MOVLW  DE
100E:  MOVWF  FF6
1010:  MOVLW  0E
1012:  MOVWF  FF7
1014:  CLRF   16
1016:  BTFSC  FF2.7
1018:  BSF    16.7
101A:  BCF    FF2.7
101C:  CALL   05E6
1020:  BTFSC  16.7
1022:  BSF    FF2.7
1024:  MOVLW  0D
1026:  BTFSS  F9E.4
1028:  BRA    1026
102A:  MOVWF  FAD
102C:  MOVLW  0A
102E:  BTFSS  F9E.4
1030:  BRA    102E
1032:  MOVWF  FAD
.................... rb1=1; 
1034:  BSF    F81.1
.................... } 
1036:  RETLW  00
.................... //proceso2: 
.................... void do_proceso2(){ 
.................... lcd_putc("\f"); 
1038:  MOVLW  E8
103A:  MOVWF  FF6
103C:  MOVLW  0E
103E:  MOVWF  FF7
1040:  CLRF   16
1042:  BTFSC  FF2.7
1044:  BSF    16.7
1046:  BCF    FF2.7
1048:  RCALL  0A74
104A:  BTFSC  16.7
104C:  BSF    FF2.7
.................... lcd_putc("proceso 2"); 
104E:  MOVLW  EA
1050:  MOVWF  FF6
1052:  MOVLW  0E
1054:  MOVWF  FF7
1056:  CLRF   16
1058:  BTFSC  FF2.7
105A:  BSF    16.7
105C:  BCF    FF2.7
105E:  RCALL  0A74
1060:  BTFSC  16.7
1062:  BSF    FF2.7
.................... puts("proceso 2"); 
1064:  MOVLW  F4
1066:  MOVWF  FF6
1068:  MOVLW  0E
106A:  MOVWF  FF7
106C:  CLRF   16
106E:  BTFSC  FF2.7
1070:  BSF    16.7
1072:  BCF    FF2.7
1074:  CALL   05E6
1078:  BTFSC  16.7
107A:  BSF    FF2.7
107C:  MOVLW  0D
107E:  BTFSS  F9E.4
1080:  BRA    107E
1082:  MOVWF  FAD
1084:  MOVLW  0A
1086:  BTFSS  F9E.4
1088:  BRA    1086
108A:  MOVWF  FAD
.................... rb2=1; 
108C:  BSF    F81.2
.................... } 
108E:  RETLW  00
.................... //proceso3: 
.................... void do_proceso3(){ 
.................... lcd_putc("\f"); 
1090:  MOVLW  FE
1092:  MOVWF  FF6
1094:  MOVLW  0E
1096:  MOVWF  FF7
1098:  CLRF   16
109A:  BTFSC  FF2.7
109C:  BSF    16.7
109E:  BCF    FF2.7
10A0:  RCALL  0A74
10A2:  BTFSC  16.7
10A4:  BSF    FF2.7
.................... lcd_putc("proceso 3"); 
10A6:  MOVLW  00
10A8:  MOVWF  FF6
10AA:  MOVLW  0F
10AC:  MOVWF  FF7
10AE:  CLRF   16
10B0:  BTFSC  FF2.7
10B2:  BSF    16.7
10B4:  BCF    FF2.7
10B6:  RCALL  0A74
10B8:  BTFSC  16.7
10BA:  BSF    FF2.7
.................... puts("proceso 3"); 
10BC:  MOVLW  0A
10BE:  MOVWF  FF6
10C0:  MOVLW  0F
10C2:  MOVWF  FF7
10C4:  CLRF   16
10C6:  BTFSC  FF2.7
10C8:  BSF    16.7
10CA:  BCF    FF2.7
10CC:  CALL   05E6
10D0:  BTFSC  16.7
10D2:  BSF    FF2.7
10D4:  MOVLW  0D
10D6:  BTFSS  F9E.4
10D8:  BRA    10D6
10DA:  MOVWF  FAD
10DC:  MOVLW  0A
10DE:  BTFSS  F9E.4
10E0:  BRA    10DE
10E2:  MOVWF  FAD
.................... rb3=1; 
10E4:  BSF    F81.3
.................... } 
10E6:  RETLW  00
.................... //descarga de procesos 
....................  
.................... void descargar_proceso1(){ 
.................... rb1=0; 
*
3B90:  BCF    F81.1
.................... } 
3B92:  GOTO   3D00 (RETURN)
....................  
.................... void descargar_proceso2(){ 
.................... rb2=0; 
3B96:  BCF    F81.2
.................... } 
3B98:  GOTO   3D0C (RETURN)
....................  
.................... void descargar_proceso3(){ 
.................... rb3=0; 
3B9C:  BCF    F81.3
.................... } 
3B9E:  GOTO   3D18 (RETURN)
....................  
.................... //proceso11: 
.................... void do_proceso11(){ 
.................... for (contador1=1;contador1<=10;contador1++){ 
*
10E8:  MOVLW  01
10EA:  MOVWF  1C
10EC:  MOVF   1C,W
10EE:  SUBLW  0A
10F0:  BNC   11BA
....................               
....................              copia1=contador1; 
10F2:  MOVFF  1C,1F
10F6:  CLRF   16
10F8:  BTFSC  FF2.7
10FA:  BSF    16.7
10FC:  BCF    FF2.7
....................              if(quantum*contador1<time1){ 
10FE:  MOVFF  6D,A8
1102:  MOVFF  6C,A7
1106:  CLRF   xAA
1108:  MOVFF  1C,A9
110C:  CALL   026C
1110:  BTFSC  16.7
1112:  BSF    FF2.7
1114:  MOVFF  02,9A
1118:  MOVFF  01,99
111C:  MOVF   02,W
111E:  SUBWF  67,W
1120:  BNC   119C
1122:  BNZ   112A
1124:  MOVF   66,W
1126:  SUBWF  x99,W
1128:  BC    119C
....................                 rb1=1; 
112A:  BSF    F81.1
....................                 delay_ms(quantum); 
112C:  MOVFF  6D,99
1130:  INCF   x99,F
1132:  DECF   x99,F
1134:  BTFSC  FD8.2
1136:  BRA    114E
1138:  CLRF   16
113A:  BTFSC  FF2.7
113C:  BSF    16.7
113E:  BCF    FF2.7
1140:  MOVLW  FF
1142:  MOVWF  xA9
1144:  CALL   0246
1148:  BTFSC  16.7
114A:  BSF    FF2.7
114C:  BRA    1132
114E:  CLRF   16
1150:  BTFSC  FF2.7
1152:  BSF    16.7
1154:  BCF    FF2.7
1156:  MOVFF  6C,A9
115A:  CALL   0246
115E:  BTFSC  16.7
1160:  BSF    FF2.7
....................                 rb1=0; 
1162:  BCF    F81.1
....................                 delay_ms(quantum); 
1164:  MOVFF  6D,99
1168:  INCF   x99,F
116A:  DECF   x99,F
116C:  BTFSC  FD8.2
116E:  BRA    1186
1170:  CLRF   16
1172:  BTFSC  FF2.7
1174:  BSF    16.7
1176:  BCF    FF2.7
1178:  MOVLW  FF
117A:  MOVWF  xA9
117C:  CALL   0246
1180:  BTFSC  16.7
1182:  BSF    FF2.7
1184:  BRA    116A
1186:  CLRF   16
1188:  BTFSC  FF2.7
118A:  BSF    16.7
118C:  BCF    FF2.7
118E:  MOVFF  6C,A9
1192:  CALL   0246
1196:  BTFSC  16.7
1198:  BSF    FF2.7
....................                                         } 
....................              else { 
119A:  BRA    119E
....................                     do_proceso1(); 
119C:  RCALL  0FE0
....................                   }   
....................              if(tecla_pulsada=='2'){ 
119E:  MOVF   1A,W
11A0:  SUBLW  32
11A2:  BNZ   11A6
....................                  
....................                    break; 
11A4:  BRA    11BA
....................                   } 
....................              if(tecla_pulsada=='3'){ 
11A6:  MOVF   1A,W
11A8:  SUBLW  33
11AA:  BNZ   11AE
....................                    break; 
11AC:  BRA    11BA
....................                   } 
....................              if(tecla_pulsada=='a'){ 
11AE:  MOVF   1A,W
11B0:  SUBLW  61
11B2:  BNZ   11B6
....................                    break; 
11B4:  BRA    11BA
....................                   } 
....................          } 
11B6:  INCF   1C,F
11B8:  BRA    10EC
....................   
....................      if(tecla_pulsada=='2'){ 
11BA:  MOVF   1A,W
11BC:  SUBLW  32
11BE:  BTFSS  FD8.2
11C0:  BRA    1588
....................                for (contador2=1;contador2<=16;contador2++){ 
11C2:  MOVLW  01
11C4:  MOVWF  1D
11C6:  MOVF   1D,W
11C8:  SUBLW  10
11CA:  BTFSS  FD8.0
11CC:  BRA    1346
....................                     copia2=contador2; 
11CE:  MOVFF  1D,20
11D2:  CLRF   16
11D4:  BTFSC  FF2.7
11D6:  BSF    16.7
11D8:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
11DA:  MOVFF  6D,A8
11DE:  MOVFF  6C,A7
11E2:  CLRF   xAA
11E4:  MOVFF  1C,A9
11E8:  CALL   026C
11EC:  BTFSC  16.7
11EE:  BSF    FF2.7
11F0:  MOVFF  02,9A
11F4:  MOVFF  01,99
11F8:  MOVF   02,W
11FA:  SUBWF  67,W
11FC:  BNC   127C
11FE:  BNZ   1206
1200:  MOVF   x99,W
1202:  SUBWF  66,W
1204:  BNC   127C
....................                       rb2=1; 
1206:  BSF    F81.2
....................                       rb1=1; 
1208:  BSF    F81.1
....................                       delay_ms(quantum); 
120A:  MOVFF  6D,99
120E:  INCF   x99,F
1210:  DECF   x99,F
1212:  BTFSC  FD8.2
1214:  BRA    122C
1216:  CLRF   16
1218:  BTFSC  FF2.7
121A:  BSF    16.7
121C:  BCF    FF2.7
121E:  MOVLW  FF
1220:  MOVWF  xA9
1222:  CALL   0246
1226:  BTFSC  16.7
1228:  BSF    FF2.7
122A:  BRA    1210
122C:  CLRF   16
122E:  BTFSC  FF2.7
1230:  BSF    16.7
1232:  BCF    FF2.7
1234:  MOVFF  6C,A9
1238:  CALL   0246
123C:  BTFSC  16.7
123E:  BSF    FF2.7
....................                       rb1=0; 
1240:  BCF    F81.1
....................                       rb2=0; 
1242:  BCF    F81.2
....................                       delay_ms(quantum); 
1244:  MOVFF  6D,99
1248:  INCF   x99,F
124A:  DECF   x99,F
124C:  BTFSC  FD8.2
124E:  BRA    1266
1250:  CLRF   16
1252:  BTFSC  FF2.7
1254:  BSF    16.7
1256:  BCF    FF2.7
1258:  MOVLW  FF
125A:  MOVWF  xA9
125C:  CALL   0246
1260:  BTFSC  16.7
1262:  BSF    FF2.7
1264:  BRA    124A
1266:  CLRF   16
1268:  BTFSC  FF2.7
126A:  BSF    16.7
126C:  BCF    FF2.7
126E:  MOVFF  6C,A9
1272:  CALL   0246
1276:  BTFSC  16.7
1278:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
127A:  BRA    1320
127C:  CLRF   16
127E:  BTFSC  FF2.7
1280:  BSF    16.7
1282:  BCF    FF2.7
....................  
....................                           if(quantum*contador2<time2){ 
1284:  MOVFF  6D,A8
1288:  MOVFF  6C,A7
128C:  CLRF   xAA
128E:  MOVFF  1D,A9
1292:  CALL   026C
1296:  BTFSC  16.7
1298:  BSF    FF2.7
129A:  MOVFF  02,9A
129E:  MOVFF  01,99
12A2:  MOVF   02,W
12A4:  SUBWF  69,W
12A6:  BNC   1320
12A8:  BNZ   12B0
12AA:  MOVF   68,W
12AC:  SUBWF  x99,W
12AE:  BC    1320
....................                                rb2=1; 
12B0:  BSF    F81.2
....................                                delay_ms(quantum); 
12B2:  MOVFF  6D,99
12B6:  INCF   x99,F
12B8:  DECF   x99,F
12BA:  BTFSC  FD8.2
12BC:  BRA    12D4
12BE:  CLRF   16
12C0:  BTFSC  FF2.7
12C2:  BSF    16.7
12C4:  BCF    FF2.7
12C6:  MOVLW  FF
12C8:  MOVWF  xA9
12CA:  CALL   0246
12CE:  BTFSC  16.7
12D0:  BSF    FF2.7
12D2:  BRA    12B8
12D4:  CLRF   16
12D6:  BTFSC  FF2.7
12D8:  BSF    16.7
12DA:  BCF    FF2.7
12DC:  MOVFF  6C,A9
12E0:  CALL   0246
12E4:  BTFSC  16.7
12E6:  BSF    FF2.7
....................                                rb2=0; 
12E8:  BCF    F81.2
....................                                delay_ms(quantum); 
12EA:  MOVFF  6D,99
12EE:  INCF   x99,F
12F0:  DECF   x99,F
12F2:  BTFSC  FD8.2
12F4:  BRA    130C
12F6:  CLRF   16
12F8:  BTFSC  FF2.7
12FA:  BSF    16.7
12FC:  BCF    FF2.7
12FE:  MOVLW  FF
1300:  MOVWF  xA9
1302:  CALL   0246
1306:  BTFSC  16.7
1308:  BSF    FF2.7
130A:  BRA    12F0
130C:  CLRF   16
130E:  BTFSC  FF2.7
1310:  BSF    16.7
1312:  BCF    FF2.7
1314:  MOVFF  6C,A9
1318:  CALL   0246
131C:  BTFSC  16.7
131E:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
1320:  MOVF   1C,W
1322:  SUBLW  0A
1324:  BNZ   1330
1326:  MOVF   1F,W
1328:  SUBLW  09
132A:  BNC   1330
132C:  RCALL  0FE0
....................                  else{ if(contador2==16) do_proceso2();} 
132E:  BRA    1338
1330:  MOVF   1D,W
1332:  SUBLW  10
1334:  BNZ   1338
1336:  RCALL  1038
....................           
....................                  if(tecla_pulsada=='3'){ 
1338:  MOVF   1A,W
133A:  SUBLW  33
133C:  BNZ   1340
....................                       break; 
133E:  BRA    1346
....................                   } 
....................                
....................                   contador1++; 
1340:  INCF   1C,F
....................                    
....................               } 
1342:  INCF   1D,F
1344:  BRA    11C6
....................  
....................               if(tecla_pulsada=='3'){ 
1346:  MOVF   1A,W
1348:  SUBLW  33
134A:  BTFSS  FD8.2
134C:  BRA    1586
....................                       for (contador3=1;contador3<=20;contador3++){ 
134E:  MOVLW  01
1350:  MOVWF  1E
1352:  MOVF   1E,W
1354:  SUBLW  14
1356:  BTFSS  FD8.0
1358:  BRA    1586
....................                            copia3=contador3; 
135A:  MOVFF  1E,21
135E:  CLRF   16
1360:  BTFSC  FF2.7
1362:  BSF    16.7
1364:  BCF    FF2.7
....................                            if(quantum*contador1<time1){ 
1366:  MOVFF  6D,A8
136A:  MOVFF  6C,A7
136E:  CLRF   xAA
1370:  MOVFF  1C,A9
1374:  CALL   026C
1378:  BTFSC  16.7
137A:  BSF    FF2.7
137C:  MOVFF  02,9A
1380:  MOVFF  01,99
1384:  MOVF   02,W
1386:  SUBWF  67,W
1388:  BNC   140C
138A:  BNZ   1392
138C:  MOVF   66,W
138E:  SUBWF  x99,W
1390:  BC    140C
....................                             rb3=1; 
1392:  BSF    F81.3
....................                             rb2=1; 
1394:  BSF    F81.2
....................                             rb1=1; 
1396:  BSF    F81.1
....................                             delay_ms(quantum); 
1398:  MOVFF  6D,99
139C:  INCF   x99,F
139E:  DECF   x99,F
13A0:  BTFSC  FD8.2
13A2:  BRA    13BA
13A4:  CLRF   16
13A6:  BTFSC  FF2.7
13A8:  BSF    16.7
13AA:  BCF    FF2.7
13AC:  MOVLW  FF
13AE:  MOVWF  xA9
13B0:  CALL   0246
13B4:  BTFSC  16.7
13B6:  BSF    FF2.7
13B8:  BRA    139E
13BA:  CLRF   16
13BC:  BTFSC  FF2.7
13BE:  BSF    16.7
13C0:  BCF    FF2.7
13C2:  MOVFF  6C,A9
13C6:  CALL   0246
13CA:  BTFSC  16.7
13CC:  BSF    FF2.7
....................                             rb3=0; 
13CE:  BCF    F81.3
....................                             rb1=0; 
13D0:  BCF    F81.1
....................                             rb2=0; 
13D2:  BCF    F81.2
....................                             delay_ms(quantum); 
13D4:  MOVFF  6D,99
13D8:  INCF   x99,F
13DA:  DECF   x99,F
13DC:  BTFSC  FD8.2
13DE:  BRA    13F6
13E0:  CLRF   16
13E2:  BTFSC  FF2.7
13E4:  BSF    16.7
13E6:  BCF    FF2.7
13E8:  MOVLW  FF
13EA:  MOVWF  xA9
13EC:  CALL   0246
13F0:  BTFSC  16.7
13F2:  BSF    FF2.7
13F4:  BRA    13DA
13F6:  CLRF   16
13F8:  BTFSC  FF2.7
13FA:  BSF    16.7
13FC:  BCF    FF2.7
13FE:  MOVFF  6C,A9
1402:  CALL   0246
1406:  BTFSC  16.7
1408:  BSF    FF2.7
....................                                                }                                              
....................                    else  { 
140A:  BRA    155A
140C:  CLRF   16
140E:  BTFSC  FF2.7
1410:  BSF    16.7
1412:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<time2){ 
1414:  MOVFF  6D,A8
1418:  MOVFF  6C,A7
141C:  CLRF   xAA
141E:  MOVFF  1D,A9
1422:  CALL   026C
1426:  BTFSC  16.7
1428:  BSF    FF2.7
142A:  MOVFF  02,9A
142E:  MOVFF  01,99
1432:  MOVF   02,W
1434:  SUBWF  69,W
1436:  BNC   14B6
1438:  BNZ   1440
143A:  MOVF   68,W
143C:  SUBWF  x99,W
143E:  BC    14B6
....................                                rb3=1; 
1440:  BSF    F81.3
....................                                rb2=1; 
1442:  BSF    F81.2
....................                                delay_ms(quantum); 
1444:  MOVFF  6D,99
1448:  INCF   x99,F
144A:  DECF   x99,F
144C:  BTFSC  FD8.2
144E:  BRA    1466
1450:  CLRF   16
1452:  BTFSC  FF2.7
1454:  BSF    16.7
1456:  BCF    FF2.7
1458:  MOVLW  FF
145A:  MOVWF  xA9
145C:  CALL   0246
1460:  BTFSC  16.7
1462:  BSF    FF2.7
1464:  BRA    144A
1466:  CLRF   16
1468:  BTFSC  FF2.7
146A:  BSF    16.7
146C:  BCF    FF2.7
146E:  MOVFF  6C,A9
1472:  CALL   0246
1476:  BTFSC  16.7
1478:  BSF    FF2.7
....................                                rb3=0; 
147A:  BCF    F81.3
....................                                rb2=0; 
147C:  BCF    F81.2
....................                                delay_ms(quantum); 
147E:  MOVFF  6D,99
1482:  INCF   x99,F
1484:  DECF   x99,F
1486:  BTFSC  FD8.2
1488:  BRA    14A0
148A:  CLRF   16
148C:  BTFSC  FF2.7
148E:  BSF    16.7
1490:  BCF    FF2.7
1492:  MOVLW  FF
1494:  MOVWF  xA9
1496:  CALL   0246
149A:  BTFSC  16.7
149C:  BSF    FF2.7
149E:  BRA    1484
14A0:  CLRF   16
14A2:  BTFSC  FF2.7
14A4:  BSF    16.7
14A6:  BCF    FF2.7
14A8:  MOVFF  6C,A9
14AC:  CALL   0246
14B0:  BTFSC  16.7
14B2:  BSF    FF2.7
....................                                                     }  
....................                      else { 
14B4:  BRA    155A
14B6:  CLRF   16
14B8:  BTFSC  FF2.7
14BA:  BSF    16.7
14BC:  BCF    FF2.7
....................                          if(quantum*contador3<time3){ 
14BE:  MOVFF  6D,A8
14C2:  MOVFF  6C,A7
14C6:  CLRF   xAA
14C8:  MOVFF  1E,A9
14CC:  CALL   026C
14D0:  BTFSC  16.7
14D2:  BSF    FF2.7
14D4:  MOVFF  02,9A
14D8:  MOVFF  01,99
14DC:  MOVF   02,W
14DE:  SUBWF  6B,W
14E0:  BNC   155A
14E2:  BNZ   14EA
14E4:  MOVF   6A,W
14E6:  SUBWF  x99,W
14E8:  BC    155A
....................                                rb3=1; 
14EA:  BSF    F81.3
....................                                delay_ms(quantum); 
14EC:  MOVFF  6D,99
14F0:  INCF   x99,F
14F2:  DECF   x99,F
14F4:  BTFSC  FD8.2
14F6:  BRA    150E
14F8:  CLRF   16
14FA:  BTFSC  FF2.7
14FC:  BSF    16.7
14FE:  BCF    FF2.7
1500:  MOVLW  FF
1502:  MOVWF  xA9
1504:  CALL   0246
1508:  BTFSC  16.7
150A:  BSF    FF2.7
150C:  BRA    14F2
150E:  CLRF   16
1510:  BTFSC  FF2.7
1512:  BSF    16.7
1514:  BCF    FF2.7
1516:  MOVFF  6C,A9
151A:  CALL   0246
151E:  BTFSC  16.7
1520:  BSF    FF2.7
....................                                rb3=0; 
1522:  BCF    F81.3
....................                                delay_ms(quantum); 
1524:  MOVFF  6D,99
1528:  INCF   x99,F
152A:  DECF   x99,F
152C:  BTFSC  FD8.2
152E:  BRA    1546
1530:  CLRF   16
1532:  BTFSC  FF2.7
1534:  BSF    16.7
1536:  BCF    FF2.7
1538:  MOVLW  FF
153A:  MOVWF  xA9
153C:  CALL   0246
1540:  BTFSC  16.7
1542:  BSF    FF2.7
1544:  BRA    152A
1546:  CLRF   16
1548:  BTFSC  FF2.7
154A:  BSF    16.7
154C:  BCF    FF2.7
154E:  MOVFF  6C,A9
1552:  CALL   0246
1556:  BTFSC  16.7
1558:  BSF    FF2.7
....................                                                      }  
....................                              } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1();                 
155A:  MOVF   1C,W
155C:  SUBLW  0A
155E:  BNZ   1568
1560:  MOVF   1F,W
1562:  SUBLW  09
1564:  BNC   1568
1566:  RCALL  0FE0
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
1568:  MOVF   1D,W
156A:  SUBLW  10
156C:  BNZ   1576
156E:  MOVF   20,W
1570:  SUBLW  0F
1572:  BNC   1576
1574:  RCALL  1038
....................                  if(contador3==20 )do_proceso3(); 
1576:  MOVF   1E,W
1578:  SUBLW  14
157A:  BNZ   157E
157C:  RCALL  1090
....................  
....................                   contador1++; 
157E:  INCF   1C,F
....................                   contador2++; 
1580:  INCF   1D,F
....................                  
....................               } 
1582:  INCF   1E,F
1584:  BRA    1352
....................                     
....................                    
....................    } 
....................          
....................                
.................... } 
....................           else { 
1586:  BRA    1B9A
....................           if(tecla_pulsada=='3'){ 
1588:  MOVF   1A,W
158A:  SUBLW  33
158C:  BTFSS  FD8.2
158E:  BRA    1B9A
....................                for (contador3=1;contador3<=20;contador3++){ 
1590:  MOVLW  01
1592:  MOVWF  1E
1594:  MOVF   1E,W
1596:  SUBLW  14
1598:  BTFSS  FD8.0
159A:  BRA    1712
....................                     copia3=contador3; 
159C:  MOVFF  1E,21
15A0:  CLRF   16
15A2:  BTFSC  FF2.7
15A4:  BSF    16.7
15A6:  BCF    FF2.7
....................                     if(quantum*contador1<time1){ 
15A8:  MOVFF  6D,A8
15AC:  MOVFF  6C,A7
15B0:  CLRF   xAA
15B2:  MOVFF  1C,A9
15B6:  CALL   026C
15BA:  BTFSC  16.7
15BC:  BSF    FF2.7
15BE:  MOVFF  02,9A
15C2:  MOVFF  01,99
15C6:  MOVF   02,W
15C8:  SUBWF  67,W
15CA:  BNC   164A
15CC:  BNZ   15D4
15CE:  MOVF   66,W
15D0:  SUBWF  x99,W
15D2:  BC    164A
....................                       rb3=1; 
15D4:  BSF    F81.3
....................                       rb1=1; 
15D6:  BSF    F81.1
....................                       delay_ms(quantum); 
15D8:  MOVFF  6D,99
15DC:  INCF   x99,F
15DE:  DECF   x99,F
15E0:  BTFSC  FD8.2
15E2:  BRA    15FA
15E4:  CLRF   16
15E6:  BTFSC  FF2.7
15E8:  BSF    16.7
15EA:  BCF    FF2.7
15EC:  MOVLW  FF
15EE:  MOVWF  xA9
15F0:  CALL   0246
15F4:  BTFSC  16.7
15F6:  BSF    FF2.7
15F8:  BRA    15DE
15FA:  CLRF   16
15FC:  BTFSC  FF2.7
15FE:  BSF    16.7
1600:  BCF    FF2.7
1602:  MOVFF  6C,A9
1606:  CALL   0246
160A:  BTFSC  16.7
160C:  BSF    FF2.7
....................                       rb3=0; 
160E:  BCF    F81.3
....................                       rb1=0; 
1610:  BCF    F81.1
....................                       delay_ms(quantum); 
1612:  MOVFF  6D,99
1616:  INCF   x99,F
1618:  DECF   x99,F
161A:  BTFSC  FD8.2
161C:  BRA    1634
161E:  CLRF   16
1620:  BTFSC  FF2.7
1622:  BSF    16.7
1624:  BCF    FF2.7
1626:  MOVLW  FF
1628:  MOVWF  xA9
162A:  CALL   0246
162E:  BTFSC  16.7
1630:  BSF    FF2.7
1632:  BRA    1618
1634:  CLRF   16
1636:  BTFSC  FF2.7
1638:  BSF    16.7
163A:  BCF    FF2.7
163C:  MOVFF  6C,A9
1640:  CALL   0246
1644:  BTFSC  16.7
1646:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
1648:  BRA    16EE
164A:  CLRF   16
164C:  BTFSC  FF2.7
164E:  BSF    16.7
1650:  BCF    FF2.7
....................                     
....................                           if(quantum*contador3<=time3){ 
1652:  MOVFF  6D,A8
1656:  MOVFF  6C,A7
165A:  CLRF   xAA
165C:  MOVFF  1E,A9
1660:  CALL   026C
1664:  BTFSC  16.7
1666:  BSF    FF2.7
1668:  MOVFF  02,9A
166C:  MOVFF  01,99
1670:  MOVF   02,W
1672:  SUBWF  6B,W
1674:  BNC   16EE
1676:  BNZ   167E
1678:  MOVF   x99,W
167A:  SUBWF  6A,W
167C:  BNC   16EE
....................                                rb3=1; 
167E:  BSF    F81.3
....................                                delay_ms(quantum); 
1680:  MOVFF  6D,99
1684:  INCF   x99,F
1686:  DECF   x99,F
1688:  BTFSC  FD8.2
168A:  BRA    16A2
168C:  CLRF   16
168E:  BTFSC  FF2.7
1690:  BSF    16.7
1692:  BCF    FF2.7
1694:  MOVLW  FF
1696:  MOVWF  xA9
1698:  CALL   0246
169C:  BTFSC  16.7
169E:  BSF    FF2.7
16A0:  BRA    1686
16A2:  CLRF   16
16A4:  BTFSC  FF2.7
16A6:  BSF    16.7
16A8:  BCF    FF2.7
16AA:  MOVFF  6C,A9
16AE:  CALL   0246
16B2:  BTFSC  16.7
16B4:  BSF    FF2.7
....................                                rb3=0; 
16B6:  BCF    F81.3
....................                                delay_ms(quantum); 
16B8:  MOVFF  6D,99
16BC:  INCF   x99,F
16BE:  DECF   x99,F
16C0:  BTFSC  FD8.2
16C2:  BRA    16DA
16C4:  CLRF   16
16C6:  BTFSC  FF2.7
16C8:  BSF    16.7
16CA:  BCF    FF2.7
16CC:  MOVLW  FF
16CE:  MOVWF  xA9
16D0:  CALL   0246
16D4:  BTFSC  16.7
16D6:  BSF    FF2.7
16D8:  BRA    16BE
16DA:  CLRF   16
16DC:  BTFSC  FF2.7
16DE:  BSF    16.7
16E0:  BCF    FF2.7
16E2:  MOVFF  6C,A9
16E6:  CALL   0246
16EA:  BTFSC  16.7
16EC:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
16EE:  MOVF   1C,W
16F0:  SUBLW  0A
16F2:  BNZ   16FC
16F4:  MOVF   1F,W
16F6:  SUBLW  09
16F8:  BNC   16FC
16FA:  RCALL  0FE0
....................                  if(contador3==20 )do_proceso3(); 
16FC:  MOVF   1E,W
16FE:  SUBLW  14
1700:  BNZ   1704
1702:  RCALL  1090
....................                   
....................                  if(tecla_pulsada=='2'){ 
1704:  MOVF   1A,W
1706:  SUBLW  32
1708:  BNZ   170C
....................                       break; 
170A:  BRA    1712
....................                   } 
....................                   contador1++; 
170C:  INCF   1C,F
....................  
....................                  } 
170E:  INCF   1E,F
1710:  BRA    1594
....................                  if(tecla_pulsada=='2'){ 
1712:  MOVF   1A,W
1714:  SUBLW  32
1716:  BTFSS  FD8.2
1718:  BRA    1B9A
....................                          if(copia3<=4){///////////// 
171A:  MOVF   21,W
171C:  SUBLW  04
171E:  BTFSS  FD8.0
1720:  BRA    195C
....................                            for (contador3=copia3;contador3<=20;contador3++){ 
1722:  MOVFF  21,1E
1726:  MOVF   1E,W
1728:  SUBLW  14
172A:  BTFSS  FD8.0
172C:  BRA    195A
....................                     copia3=contador3; 
172E:  MOVFF  1E,21
1732:  CLRF   16
1734:  BTFSC  FF2.7
1736:  BSF    16.7
1738:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
173A:  MOVFF  6D,A8
173E:  MOVFF  6C,A7
1742:  CLRF   xAA
1744:  MOVFF  1C,A9
1748:  CALL   026C
174C:  BTFSC  16.7
174E:  BSF    FF2.7
1750:  MOVFF  02,9A
1754:  MOVFF  01,99
1758:  MOVF   02,W
175A:  SUBWF  67,W
175C:  BNC   17E0
175E:  BNZ   1766
1760:  MOVF   x99,W
1762:  SUBWF  66,W
1764:  BNC   17E0
....................                       rb2=1; 
1766:  BSF    F81.2
....................                       rb3=1; 
1768:  BSF    F81.3
....................                       rb1=1; 
176A:  BSF    F81.1
....................                       delay_ms(quantum); 
176C:  MOVFF  6D,99
1770:  INCF   x99,F
1772:  DECF   x99,F
1774:  BTFSC  FD8.2
1776:  BRA    178E
1778:  CLRF   16
177A:  BTFSC  FF2.7
177C:  BSF    16.7
177E:  BCF    FF2.7
1780:  MOVLW  FF
1782:  MOVWF  xA9
1784:  CALL   0246
1788:  BTFSC  16.7
178A:  BSF    FF2.7
178C:  BRA    1772
178E:  CLRF   16
1790:  BTFSC  FF2.7
1792:  BSF    16.7
1794:  BCF    FF2.7
1796:  MOVFF  6C,A9
179A:  CALL   0246
179E:  BTFSC  16.7
17A0:  BSF    FF2.7
....................                       rb2=0; 
17A2:  BCF    F81.2
....................                       rb3=0; 
17A4:  BCF    F81.3
....................                       rb1=0; 
17A6:  BCF    F81.1
....................                       delay_ms(quantum); 
17A8:  MOVFF  6D,99
17AC:  INCF   x99,F
17AE:  DECF   x99,F
17B0:  BTFSC  FD8.2
17B2:  BRA    17CA
17B4:  CLRF   16
17B6:  BTFSC  FF2.7
17B8:  BSF    16.7
17BA:  BCF    FF2.7
17BC:  MOVLW  FF
17BE:  MOVWF  xA9
17C0:  CALL   0246
17C4:  BTFSC  16.7
17C6:  BSF    FF2.7
17C8:  BRA    17AE
17CA:  CLRF   16
17CC:  BTFSC  FF2.7
17CE:  BSF    16.7
17D0:  BCF    FF2.7
17D2:  MOVFF  6C,A9
17D6:  CALL   0246
17DA:  BTFSC  16.7
17DC:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
17DE:  BRA    192E
17E0:  CLRF   16
17E2:  BTFSC  FF2.7
17E4:  BSF    16.7
17E6:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<=time2){ 
17E8:  MOVFF  6D,A8
17EC:  MOVFF  6C,A7
17F0:  CLRF   xAA
17F2:  MOVFF  1D,A9
17F6:  CALL   026C
17FA:  BTFSC  16.7
17FC:  BSF    FF2.7
17FE:  MOVFF  02,9A
1802:  MOVFF  01,99
1806:  MOVF   02,W
1808:  SUBWF  69,W
180A:  BNC   188A
180C:  BNZ   1814
180E:  MOVF   x99,W
1810:  SUBWF  68,W
1812:  BNC   188A
....................                                rb2=1; 
1814:  BSF    F81.2
....................                                rb3=1; 
1816:  BSF    F81.3
....................                                delay_ms(quantum); 
1818:  MOVFF  6D,99
181C:  INCF   x99,F
181E:  DECF   x99,F
1820:  BTFSC  FD8.2
1822:  BRA    183A
1824:  CLRF   16
1826:  BTFSC  FF2.7
1828:  BSF    16.7
182A:  BCF    FF2.7
182C:  MOVLW  FF
182E:  MOVWF  xA9
1830:  CALL   0246
1834:  BTFSC  16.7
1836:  BSF    FF2.7
1838:  BRA    181E
183A:  CLRF   16
183C:  BTFSC  FF2.7
183E:  BSF    16.7
1840:  BCF    FF2.7
1842:  MOVFF  6C,A9
1846:  CALL   0246
184A:  BTFSC  16.7
184C:  BSF    FF2.7
....................                                rb2=0; 
184E:  BCF    F81.2
....................                                rb3=0; 
1850:  BCF    F81.3
....................                                delay_ms(quantum); 
1852:  MOVFF  6D,99
1856:  INCF   x99,F
1858:  DECF   x99,F
185A:  BTFSC  FD8.2
185C:  BRA    1874
185E:  CLRF   16
1860:  BTFSC  FF2.7
1862:  BSF    16.7
1864:  BCF    FF2.7
1866:  MOVLW  FF
1868:  MOVWF  xA9
186A:  CALL   0246
186E:  BTFSC  16.7
1870:  BSF    FF2.7
1872:  BRA    1858
1874:  CLRF   16
1876:  BTFSC  FF2.7
1878:  BSF    16.7
187A:  BCF    FF2.7
187C:  MOVFF  6C,A9
1880:  CALL   0246
1884:  BTFSC  16.7
1886:  BSF    FF2.7
....................                                                      }  
....................                              else{ 
1888:  BRA    192E
188A:  CLRF   16
188C:  BTFSC  FF2.7
188E:  BSF    16.7
1890:  BCF    FF2.7
....................                                         if(quantum*contador3<=time3){ 
1892:  MOVFF  6D,A8
1896:  MOVFF  6C,A7
189A:  CLRF   xAA
189C:  MOVFF  1E,A9
18A0:  CALL   026C
18A4:  BTFSC  16.7
18A6:  BSF    FF2.7
18A8:  MOVFF  02,9A
18AC:  MOVFF  01,99
18B0:  MOVF   02,W
18B2:  SUBWF  6B,W
18B4:  BNC   192E
18B6:  BNZ   18BE
18B8:  MOVF   x99,W
18BA:  SUBWF  6A,W
18BC:  BNC   192E
....................                                rb3=1; 
18BE:  BSF    F81.3
....................                                
....................                                delay_ms(quantum); 
18C0:  MOVFF  6D,99
18C4:  INCF   x99,F
18C6:  DECF   x99,F
18C8:  BTFSC  FD8.2
18CA:  BRA    18E2
18CC:  CLRF   16
18CE:  BTFSC  FF2.7
18D0:  BSF    16.7
18D2:  BCF    FF2.7
18D4:  MOVLW  FF
18D6:  MOVWF  xA9
18D8:  CALL   0246
18DC:  BTFSC  16.7
18DE:  BSF    FF2.7
18E0:  BRA    18C6
18E2:  CLRF   16
18E4:  BTFSC  FF2.7
18E6:  BSF    16.7
18E8:  BCF    FF2.7
18EA:  MOVFF  6C,A9
18EE:  CALL   0246
18F2:  BTFSC  16.7
18F4:  BSF    FF2.7
....................                                rb3=0; 
18F6:  BCF    F81.3
....................                                
....................                                delay_ms(quantum); 
18F8:  MOVFF  6D,99
18FC:  INCF   x99,F
18FE:  DECF   x99,F
1900:  BTFSC  FD8.2
1902:  BRA    191A
1904:  CLRF   16
1906:  BTFSC  FF2.7
1908:  BSF    16.7
190A:  BCF    FF2.7
190C:  MOVLW  FF
190E:  MOVWF  xA9
1910:  CALL   0246
1914:  BTFSC  16.7
1916:  BSF    FF2.7
1918:  BRA    18FE
191A:  CLRF   16
191C:  BTFSC  FF2.7
191E:  BSF    16.7
1920:  BCF    FF2.7
1922:  MOVFF  6C,A9
1926:  CALL   0246
192A:  BTFSC  16.7
192C:  BSF    FF2.7
....................                                                      }                
....................                                                       
....................                                                      } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
192E:  MOVF   1C,W
1930:  SUBLW  0A
1932:  BNZ   193E
1934:  MOVF   1F,W
1936:  SUBLW  09
1938:  BNC   193E
193A:  CALL   0FE0
....................                  if(contador3==20 )do_proceso3(); 
193E:  MOVF   1E,W
1940:  SUBLW  14
1942:  BNZ   1948
1944:  CALL   1090
....................                  if(contador2==16 )do_proceso2(); 
1948:  MOVF   1D,W
194A:  SUBLW  10
194C:  BNZ   1952
194E:  CALL   1038
....................                   contador1++; 
1952:  INCF   1C,F
....................                   contador2++; 
1954:  INCF   1D,F
....................  
....................                  } 
1956:  INCF   1E,F
1958:  BRA    1726
....................                          } 
....................                          else{ 
195A:  BRA    1B9A
....................                               for (contador2=1;contador2<=16;contador2++){ 
195C:  MOVLW  01
195E:  MOVWF  1D
1960:  MOVF   1D,W
1962:  SUBLW  10
1964:  BTFSS  FD8.0
1966:  BRA    1B9A
....................                     copia2=contador2; 
1968:  MOVFF  1D,20
196C:  CLRF   16
196E:  BTFSC  FF2.7
1970:  BSF    16.7
1972:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
1974:  MOVFF  6D,A8
1978:  MOVFF  6C,A7
197C:  CLRF   xAA
197E:  MOVFF  1C,A9
1982:  CALL   026C
1986:  BTFSC  16.7
1988:  BSF    FF2.7
198A:  MOVFF  02,9A
198E:  MOVFF  01,99
1992:  MOVF   02,W
1994:  SUBWF  67,W
1996:  BNC   1A1A
1998:  BNZ   19A0
199A:  MOVF   x99,W
199C:  SUBWF  66,W
199E:  BNC   1A1A
....................                       rb2=1; 
19A0:  BSF    F81.2
....................                       rb3=1; 
19A2:  BSF    F81.3
....................                       rb1=1; 
19A4:  BSF    F81.1
....................                       delay_ms(quantum); 
19A6:  MOVFF  6D,99
19AA:  INCF   x99,F
19AC:  DECF   x99,F
19AE:  BTFSC  FD8.2
19B0:  BRA    19C8
19B2:  CLRF   16
19B4:  BTFSC  FF2.7
19B6:  BSF    16.7
19B8:  BCF    FF2.7
19BA:  MOVLW  FF
19BC:  MOVWF  xA9
19BE:  CALL   0246
19C2:  BTFSC  16.7
19C4:  BSF    FF2.7
19C6:  BRA    19AC
19C8:  CLRF   16
19CA:  BTFSC  FF2.7
19CC:  BSF    16.7
19CE:  BCF    FF2.7
19D0:  MOVFF  6C,A9
19D4:  CALL   0246
19D8:  BTFSC  16.7
19DA:  BSF    FF2.7
....................                       rb2=0; 
19DC:  BCF    F81.2
....................                       rb3=0; 
19DE:  BCF    F81.3
....................                       rb1=0; 
19E0:  BCF    F81.1
....................                       delay_ms(quantum); 
19E2:  MOVFF  6D,99
19E6:  INCF   x99,F
19E8:  DECF   x99,F
19EA:  BTFSC  FD8.2
19EC:  BRA    1A04
19EE:  CLRF   16
19F0:  BTFSC  FF2.7
19F2:  BSF    16.7
19F4:  BCF    FF2.7
19F6:  MOVLW  FF
19F8:  MOVWF  xA9
19FA:  CALL   0246
19FE:  BTFSC  16.7
1A00:  BSF    FF2.7
1A02:  BRA    19E8
1A04:  CLRF   16
1A06:  BTFSC  FF2.7
1A08:  BSF    16.7
1A0A:  BCF    FF2.7
1A0C:  MOVFF  6C,A9
1A10:  CALL   0246
1A14:  BTFSC  16.7
1A16:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
1A18:  BRA    1B68
1A1A:  CLRF   16
1A1C:  BTFSC  FF2.7
1A1E:  BSF    16.7
1A20:  BCF    FF2.7
....................                     
....................                           if(quantum*contador3<=time3){ 
1A22:  MOVFF  6D,A8
1A26:  MOVFF  6C,A7
1A2A:  CLRF   xAA
1A2C:  MOVFF  1E,A9
1A30:  CALL   026C
1A34:  BTFSC  16.7
1A36:  BSF    FF2.7
1A38:  MOVFF  02,9A
1A3C:  MOVFF  01,99
1A40:  MOVF   02,W
1A42:  SUBWF  6B,W
1A44:  BNC   1AC4
1A46:  BNZ   1A4E
1A48:  MOVF   x99,W
1A4A:  SUBWF  6A,W
1A4C:  BNC   1AC4
....................                                rb2=1; 
1A4E:  BSF    F81.2
....................                                rb3=1; 
1A50:  BSF    F81.3
....................                                delay_ms(quantum); 
1A52:  MOVFF  6D,99
1A56:  INCF   x99,F
1A58:  DECF   x99,F
1A5A:  BTFSC  FD8.2
1A5C:  BRA    1A74
1A5E:  CLRF   16
1A60:  BTFSC  FF2.7
1A62:  BSF    16.7
1A64:  BCF    FF2.7
1A66:  MOVLW  FF
1A68:  MOVWF  xA9
1A6A:  CALL   0246
1A6E:  BTFSC  16.7
1A70:  BSF    FF2.7
1A72:  BRA    1A58
1A74:  CLRF   16
1A76:  BTFSC  FF2.7
1A78:  BSF    16.7
1A7A:  BCF    FF2.7
1A7C:  MOVFF  6C,A9
1A80:  CALL   0246
1A84:  BTFSC  16.7
1A86:  BSF    FF2.7
....................                                rb2=0; 
1A88:  BCF    F81.2
....................                                rb3=0; 
1A8A:  BCF    F81.3
....................                                delay_ms(quantum); 
1A8C:  MOVFF  6D,99
1A90:  INCF   x99,F
1A92:  DECF   x99,F
1A94:  BTFSC  FD8.2
1A96:  BRA    1AAE
1A98:  CLRF   16
1A9A:  BTFSC  FF2.7
1A9C:  BSF    16.7
1A9E:  BCF    FF2.7
1AA0:  MOVLW  FF
1AA2:  MOVWF  xA9
1AA4:  CALL   0246
1AA8:  BTFSC  16.7
1AAA:  BSF    FF2.7
1AAC:  BRA    1A92
1AAE:  CLRF   16
1AB0:  BTFSC  FF2.7
1AB2:  BSF    16.7
1AB4:  BCF    FF2.7
1AB6:  MOVFF  6C,A9
1ABA:  CALL   0246
1ABE:  BTFSC  16.7
1AC0:  BSF    FF2.7
....................                                                      }  
....................                              else{ 
1AC2:  BRA    1B68
1AC4:  CLRF   16
1AC6:  BTFSC  FF2.7
1AC8:  BSF    16.7
1ACA:  BCF    FF2.7
....................                                         if(quantum*contador2<=time2){ 
1ACC:  MOVFF  6D,A8
1AD0:  MOVFF  6C,A7
1AD4:  CLRF   xAA
1AD6:  MOVFF  1D,A9
1ADA:  CALL   026C
1ADE:  BTFSC  16.7
1AE0:  BSF    FF2.7
1AE2:  MOVFF  02,9A
1AE6:  MOVFF  01,99
1AEA:  MOVF   02,W
1AEC:  SUBWF  69,W
1AEE:  BNC   1B68
1AF0:  BNZ   1AF8
1AF2:  MOVF   x99,W
1AF4:  SUBWF  68,W
1AF6:  BNC   1B68
....................                                rb2=1; 
1AF8:  BSF    F81.2
....................                                
....................                                delay_ms(quantum); 
1AFA:  MOVFF  6D,99
1AFE:  INCF   x99,F
1B00:  DECF   x99,F
1B02:  BTFSC  FD8.2
1B04:  BRA    1B1C
1B06:  CLRF   16
1B08:  BTFSC  FF2.7
1B0A:  BSF    16.7
1B0C:  BCF    FF2.7
1B0E:  MOVLW  FF
1B10:  MOVWF  xA9
1B12:  CALL   0246
1B16:  BTFSC  16.7
1B18:  BSF    FF2.7
1B1A:  BRA    1B00
1B1C:  CLRF   16
1B1E:  BTFSC  FF2.7
1B20:  BSF    16.7
1B22:  BCF    FF2.7
1B24:  MOVFF  6C,A9
1B28:  CALL   0246
1B2C:  BTFSC  16.7
1B2E:  BSF    FF2.7
....................                                rb2=0; 
1B30:  BCF    F81.2
....................                                
....................                                delay_ms(quantum); 
1B32:  MOVFF  6D,99
1B36:  INCF   x99,F
1B38:  DECF   x99,F
1B3A:  BTFSC  FD8.2
1B3C:  BRA    1B54
1B3E:  CLRF   16
1B40:  BTFSC  FF2.7
1B42:  BSF    16.7
1B44:  BCF    FF2.7
1B46:  MOVLW  FF
1B48:  MOVWF  xA9
1B4A:  CALL   0246
1B4E:  BTFSC  16.7
1B50:  BSF    FF2.7
1B52:  BRA    1B38
1B54:  CLRF   16
1B56:  BTFSC  FF2.7
1B58:  BSF    16.7
1B5A:  BCF    FF2.7
1B5C:  MOVFF  6C,A9
1B60:  CALL   0246
1B64:  BTFSC  16.7
1B66:  BSF    FF2.7
....................                                                      }                
....................                                                       
....................                                                      } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
1B68:  MOVF   1C,W
1B6A:  SUBLW  0A
1B6C:  BNZ   1B78
1B6E:  MOVF   1F,W
1B70:  SUBLW  09
1B72:  BNC   1B78
1B74:  CALL   0FE0
....................                  if(contador3==20 && copia3<20)do_proceso3(); 
1B78:  MOVF   1E,W
1B7A:  SUBLW  14
1B7C:  BNZ   1B88
1B7E:  MOVF   21,W
1B80:  SUBLW  13
1B82:  BNC   1B88
1B84:  CALL   1090
....................                  if(contador2==16 )do_proceso2(); 
1B88:  MOVF   1D,W
1B8A:  SUBLW  10
1B8C:  BNZ   1B92
1B8E:  CALL   1038
....................                   contador1++; 
1B92:  INCF   1C,F
....................                   contador3++; 
1B94:  INCF   1E,F
....................  
....................                  } 
1B96:  INCF   1D,F
1B98:  BRA    1960
....................                              } 
....................                   
....................                                        } 
....................               } 
.................... }   
....................           } 
1B9A:  GOTO   3CDC (RETURN)
....................            
.................... //////////////////////////////////////////// 
.................... void do_proceso22(){ 
.................... for (contador2=1;contador2<=16;contador2++){ 
1B9E:  MOVLW  01
1BA0:  MOVWF  1D
1BA2:  MOVF   1D,W
1BA4:  SUBLW  10
1BA6:  BNC   1C6A
....................              copia2=contador2; 
1BA8:  MOVFF  1D,20
1BAC:  CLRF   16
1BAE:  BTFSC  FF2.7
1BB0:  BSF    16.7
1BB2:  BCF    FF2.7
....................              if(quantum*contador2<time2){ 
1BB4:  MOVFF  6D,A8
1BB8:  MOVFF  6C,A7
1BBC:  CLRF   xAA
1BBE:  MOVFF  1D,A9
1BC2:  CALL   026C
1BC6:  BTFSC  16.7
1BC8:  BSF    FF2.7
1BCA:  MOVFF  02,9A
1BCE:  MOVFF  01,99
1BD2:  MOVF   02,W
1BD4:  SUBWF  69,W
1BD6:  BNC   1C52
1BD8:  BNZ   1BE0
1BDA:  MOVF   68,W
1BDC:  SUBWF  x99,W
1BDE:  BC    1C52
....................                 rb2=1; 
1BE0:  BSF    F81.2
....................                 delay_ms(quantum); 
1BE2:  MOVFF  6D,99
1BE6:  INCF   x99,F
1BE8:  DECF   x99,F
1BEA:  BTFSC  FD8.2
1BEC:  BRA    1C04
1BEE:  CLRF   16
1BF0:  BTFSC  FF2.7
1BF2:  BSF    16.7
1BF4:  BCF    FF2.7
1BF6:  MOVLW  FF
1BF8:  MOVWF  xA9
1BFA:  CALL   0246
1BFE:  BTFSC  16.7
1C00:  BSF    FF2.7
1C02:  BRA    1BE8
1C04:  CLRF   16
1C06:  BTFSC  FF2.7
1C08:  BSF    16.7
1C0A:  BCF    FF2.7
1C0C:  MOVFF  6C,A9
1C10:  CALL   0246
1C14:  BTFSC  16.7
1C16:  BSF    FF2.7
....................                 rb2=0; 
1C18:  BCF    F81.2
....................                 delay_ms(quantum); 
1C1A:  MOVFF  6D,99
1C1E:  INCF   x99,F
1C20:  DECF   x99,F
1C22:  BTFSC  FD8.2
1C24:  BRA    1C3C
1C26:  CLRF   16
1C28:  BTFSC  FF2.7
1C2A:  BSF    16.7
1C2C:  BCF    FF2.7
1C2E:  MOVLW  FF
1C30:  MOVWF  xA9
1C32:  CALL   0246
1C36:  BTFSC  16.7
1C38:  BSF    FF2.7
1C3A:  BRA    1C20
1C3C:  CLRF   16
1C3E:  BTFSC  FF2.7
1C40:  BSF    16.7
1C42:  BCF    FF2.7
1C44:  MOVFF  6C,A9
1C48:  CALL   0246
1C4C:  BTFSC  16.7
1C4E:  BSF    FF2.7
....................                                         } 
....................              else { 
1C50:  BRA    1C56
....................                     do_proceso2(); 
1C52:  CALL   1038
....................                    }   
....................              if(tecla_pulsada=='1'){ 
1C56:  MOVF   1A,W
1C58:  SUBLW  31
1C5A:  BNZ   1C5E
....................                    break; 
1C5C:  BRA    1C6A
....................                   } 
....................              if(tecla_pulsada=='3'){ 
1C5E:  MOVF   1A,W
1C60:  SUBLW  33
1C62:  BNZ   1C66
....................                    break; 
1C64:  BRA    1C6A
....................                   } 
....................          } 
1C66:  INCF   1D,F
1C68:  BRA    1BA2
....................   
....................      if(tecla_pulsada=='1'){ 
1C6A:  MOVF   1A,W
1C6C:  SUBLW  31
1C6E:  BTFSS  FD8.2
1C70:  BRA    2284
....................                if(copia2<=6){ 
1C72:  MOVF   20,W
1C74:  SUBLW  06
1C76:  BTFSS  FD8.0
1C78:  BRA    1E02
....................                for (contador2=copia2;contador2<=16;contador2++){ 
1C7A:  MOVFF  20,1D
1C7E:  MOVF   1D,W
1C80:  SUBLW  10
1C82:  BTFSS  FD8.0
1C84:  BRA    1E00
....................                     copia2=contador2; 
1C86:  MOVFF  1D,20
1C8A:  CLRF   16
1C8C:  BTFSC  FF2.7
1C8E:  BSF    16.7
1C90:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
1C92:  MOVFF  6D,A8
1C96:  MOVFF  6C,A7
1C9A:  CLRF   xAA
1C9C:  MOVFF  1C,A9
1CA0:  CALL   026C
1CA4:  BTFSC  16.7
1CA6:  BSF    FF2.7
1CA8:  MOVFF  02,9A
1CAC:  MOVFF  01,99
1CB0:  MOVF   02,W
1CB2:  SUBWF  67,W
1CB4:  BNC   1D34
1CB6:  BNZ   1CBE
1CB8:  MOVF   x99,W
1CBA:  SUBWF  66,W
1CBC:  BNC   1D34
....................                       rb2=1; 
1CBE:  BSF    F81.2
....................                       rb1=1; 
1CC0:  BSF    F81.1
....................                       delay_ms(quantum); 
1CC2:  MOVFF  6D,99
1CC6:  INCF   x99,F
1CC8:  DECF   x99,F
1CCA:  BTFSC  FD8.2
1CCC:  BRA    1CE4
1CCE:  CLRF   16
1CD0:  BTFSC  FF2.7
1CD2:  BSF    16.7
1CD4:  BCF    FF2.7
1CD6:  MOVLW  FF
1CD8:  MOVWF  xA9
1CDA:  CALL   0246
1CDE:  BTFSC  16.7
1CE0:  BSF    FF2.7
1CE2:  BRA    1CC8
1CE4:  CLRF   16
1CE6:  BTFSC  FF2.7
1CE8:  BSF    16.7
1CEA:  BCF    FF2.7
1CEC:  MOVFF  6C,A9
1CF0:  CALL   0246
1CF4:  BTFSC  16.7
1CF6:  BSF    FF2.7
....................                       rb1=0; 
1CF8:  BCF    F81.1
....................                       rb2=0; 
1CFA:  BCF    F81.2
....................                       delay_ms(quantum); 
1CFC:  MOVFF  6D,99
1D00:  INCF   x99,F
1D02:  DECF   x99,F
1D04:  BTFSC  FD8.2
1D06:  BRA    1D1E
1D08:  CLRF   16
1D0A:  BTFSC  FF2.7
1D0C:  BSF    16.7
1D0E:  BCF    FF2.7
1D10:  MOVLW  FF
1D12:  MOVWF  xA9
1D14:  CALL   0246
1D18:  BTFSC  16.7
1D1A:  BSF    FF2.7
1D1C:  BRA    1D02
1D1E:  CLRF   16
1D20:  BTFSC  FF2.7
1D22:  BSF    16.7
1D24:  BCF    FF2.7
1D26:  MOVFF  6C,A9
1D2A:  CALL   0246
1D2E:  BTFSC  16.7
1D30:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
1D32:  BRA    1DD8
1D34:  CLRF   16
1D36:  BTFSC  FF2.7
1D38:  BSF    16.7
1D3A:  BCF    FF2.7
....................  
....................                           if(quantum*contador2<time2){ 
1D3C:  MOVFF  6D,A8
1D40:  MOVFF  6C,A7
1D44:  CLRF   xAA
1D46:  MOVFF  1D,A9
1D4A:  CALL   026C
1D4E:  BTFSC  16.7
1D50:  BSF    FF2.7
1D52:  MOVFF  02,9A
1D56:  MOVFF  01,99
1D5A:  MOVF   02,W
1D5C:  SUBWF  69,W
1D5E:  BNC   1DD8
1D60:  BNZ   1D68
1D62:  MOVF   68,W
1D64:  SUBWF  x99,W
1D66:  BC    1DD8
....................                                rb2=1; 
1D68:  BSF    F81.2
....................                                delay_ms(quantum); 
1D6A:  MOVFF  6D,99
1D6E:  INCF   x99,F
1D70:  DECF   x99,F
1D72:  BTFSC  FD8.2
1D74:  BRA    1D8C
1D76:  CLRF   16
1D78:  BTFSC  FF2.7
1D7A:  BSF    16.7
1D7C:  BCF    FF2.7
1D7E:  MOVLW  FF
1D80:  MOVWF  xA9
1D82:  CALL   0246
1D86:  BTFSC  16.7
1D88:  BSF    FF2.7
1D8A:  BRA    1D70
1D8C:  CLRF   16
1D8E:  BTFSC  FF2.7
1D90:  BSF    16.7
1D92:  BCF    FF2.7
1D94:  MOVFF  6C,A9
1D98:  CALL   0246
1D9C:  BTFSC  16.7
1D9E:  BSF    FF2.7
....................                                rb2=0; 
1DA0:  BCF    F81.2
....................                                delay_ms(quantum); 
1DA2:  MOVFF  6D,99
1DA6:  INCF   x99,F
1DA8:  DECF   x99,F
1DAA:  BTFSC  FD8.2
1DAC:  BRA    1DC4
1DAE:  CLRF   16
1DB0:  BTFSC  FF2.7
1DB2:  BSF    16.7
1DB4:  BCF    FF2.7
1DB6:  MOVLW  FF
1DB8:  MOVWF  xA9
1DBA:  CALL   0246
1DBE:  BTFSC  16.7
1DC0:  BSF    FF2.7
1DC2:  BRA    1DA8
1DC4:  CLRF   16
1DC6:  BTFSC  FF2.7
1DC8:  BSF    16.7
1DCA:  BCF    FF2.7
1DCC:  MOVFF  6C,A9
1DD0:  CALL   0246
1DD4:  BTFSC  16.7
1DD6:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
1DD8:  MOVF   1C,W
1DDA:  SUBLW  0A
1DDC:  BNZ   1DE8
1DDE:  MOVF   1F,W
1DE0:  SUBLW  09
1DE2:  BNC   1DE8
1DE4:  CALL   0FE0
....................                  if(contador2==16 ) do_proceso2(); 
1DE8:  MOVF   1D,W
1DEA:  SUBLW  10
1DEC:  BNZ   1DF2
1DEE:  CALL   1038
....................           
....................                  if(tecla_pulsada=='3'){ 
1DF2:  MOVF   1A,W
1DF4:  SUBLW  33
1DF6:  BNZ   1DFA
....................                       break; 
1DF8:  BRA    1E00
....................                   } 
....................                
....................                   contador1++; 
1DFA:  INCF   1C,F
....................                    
....................               } 
1DFC:  INCF   1D,F
1DFE:  BRA    1C7E
....................              } 
....................                        else{ 
1E00:  BRA    1F8E
....................                         for (contador1=1;contador1<=10;contador1++){ 
1E02:  MOVLW  01
1E04:  MOVWF  1C
1E06:  MOVF   1C,W
1E08:  SUBLW  0A
1E0A:  BTFSS  FD8.0
1E0C:  BRA    1F8E
....................                     copia1=contador1; 
1E0E:  MOVFF  1C,1F
1E12:  CLRF   16
1E14:  BTFSC  FF2.7
1E16:  BSF    16.7
1E18:  BCF    FF2.7
....................                     if(quantum*contador2<=time2){ 
1E1A:  MOVFF  6D,A8
1E1E:  MOVFF  6C,A7
1E22:  CLRF   xAA
1E24:  MOVFF  1D,A9
1E28:  CALL   026C
1E2C:  BTFSC  16.7
1E2E:  BSF    FF2.7
1E30:  MOVFF  02,9A
1E34:  MOVFF  01,99
1E38:  MOVF   02,W
1E3A:  SUBWF  69,W
1E3C:  BNC   1EBC
1E3E:  BNZ   1E46
1E40:  MOVF   x99,W
1E42:  SUBWF  68,W
1E44:  BNC   1EBC
....................                       rb2=1; 
1E46:  BSF    F81.2
....................                       rb1=1; 
1E48:  BSF    F81.1
....................                       delay_ms(quantum); 
1E4A:  MOVFF  6D,99
1E4E:  INCF   x99,F
1E50:  DECF   x99,F
1E52:  BTFSC  FD8.2
1E54:  BRA    1E6C
1E56:  CLRF   16
1E58:  BTFSC  FF2.7
1E5A:  BSF    16.7
1E5C:  BCF    FF2.7
1E5E:  MOVLW  FF
1E60:  MOVWF  xA9
1E62:  CALL   0246
1E66:  BTFSC  16.7
1E68:  BSF    FF2.7
1E6A:  BRA    1E50
1E6C:  CLRF   16
1E6E:  BTFSC  FF2.7
1E70:  BSF    16.7
1E72:  BCF    FF2.7
1E74:  MOVFF  6C,A9
1E78:  CALL   0246
1E7C:  BTFSC  16.7
1E7E:  BSF    FF2.7
....................                       rb1=0; 
1E80:  BCF    F81.1
....................                       rb2=0; 
1E82:  BCF    F81.2
....................                       delay_ms(quantum); 
1E84:  MOVFF  6D,99
1E88:  INCF   x99,F
1E8A:  DECF   x99,F
1E8C:  BTFSC  FD8.2
1E8E:  BRA    1EA6
1E90:  CLRF   16
1E92:  BTFSC  FF2.7
1E94:  BSF    16.7
1E96:  BCF    FF2.7
1E98:  MOVLW  FF
1E9A:  MOVWF  xA9
1E9C:  CALL   0246
1EA0:  BTFSC  16.7
1EA2:  BSF    FF2.7
1EA4:  BRA    1E8A
1EA6:  CLRF   16
1EA8:  BTFSC  FF2.7
1EAA:  BSF    16.7
1EAC:  BCF    FF2.7
1EAE:  MOVFF  6C,A9
1EB2:  CALL   0246
1EB6:  BTFSC  16.7
1EB8:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
1EBA:  BRA    1F60
1EBC:  CLRF   16
1EBE:  BTFSC  FF2.7
1EC0:  BSF    16.7
1EC2:  BCF    FF2.7
....................  
....................                           if(quantum*contador1<time1){ 
1EC4:  MOVFF  6D,A8
1EC8:  MOVFF  6C,A7
1ECC:  CLRF   xAA
1ECE:  MOVFF  1C,A9
1ED2:  CALL   026C
1ED6:  BTFSC  16.7
1ED8:  BSF    FF2.7
1EDA:  MOVFF  02,9A
1EDE:  MOVFF  01,99
1EE2:  MOVF   02,W
1EE4:  SUBWF  67,W
1EE6:  BNC   1F60
1EE8:  BNZ   1EF0
1EEA:  MOVF   66,W
1EEC:  SUBWF  x99,W
1EEE:  BC    1F60
....................                                rb1=1; 
1EF0:  BSF    F81.1
....................                                delay_ms(quantum); 
1EF2:  MOVFF  6D,99
1EF6:  INCF   x99,F
1EF8:  DECF   x99,F
1EFA:  BTFSC  FD8.2
1EFC:  BRA    1F14
1EFE:  CLRF   16
1F00:  BTFSC  FF2.7
1F02:  BSF    16.7
1F04:  BCF    FF2.7
1F06:  MOVLW  FF
1F08:  MOVWF  xA9
1F0A:  CALL   0246
1F0E:  BTFSC  16.7
1F10:  BSF    FF2.7
1F12:  BRA    1EF8
1F14:  CLRF   16
1F16:  BTFSC  FF2.7
1F18:  BSF    16.7
1F1A:  BCF    FF2.7
1F1C:  MOVFF  6C,A9
1F20:  CALL   0246
1F24:  BTFSC  16.7
1F26:  BSF    FF2.7
....................                                rb1=0; 
1F28:  BCF    F81.1
....................                                delay_ms(quantum); 
1F2A:  MOVFF  6D,99
1F2E:  INCF   x99,F
1F30:  DECF   x99,F
1F32:  BTFSC  FD8.2
1F34:  BRA    1F4C
1F36:  CLRF   16
1F38:  BTFSC  FF2.7
1F3A:  BSF    16.7
1F3C:  BCF    FF2.7
1F3E:  MOVLW  FF
1F40:  MOVWF  xA9
1F42:  CALL   0246
1F46:  BTFSC  16.7
1F48:  BSF    FF2.7
1F4A:  BRA    1F30
1F4C:  CLRF   16
1F4E:  BTFSC  FF2.7
1F50:  BSF    16.7
1F52:  BCF    FF2.7
1F54:  MOVFF  6C,A9
1F58:  CALL   0246
1F5C:  BTFSC  16.7
1F5E:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
1F60:  MOVF   1C,W
1F62:  SUBLW  0A
1F64:  BNZ   1F70
1F66:  MOVF   1F,W
1F68:  SUBLW  09
1F6A:  BNC   1F70
1F6C:  CALL   0FE0
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
1F70:  MOVF   1D,W
1F72:  SUBLW  10
1F74:  BNZ   1F80
1F76:  MOVF   20,W
1F78:  SUBLW  0F
1F7A:  BNC   1F80
1F7C:  CALL   1038
....................           
....................                  if(tecla_pulsada=='3'){ 
1F80:  MOVF   1A,W
1F82:  SUBLW  33
1F84:  BNZ   1F88
....................                       break; 
1F86:  BRA    1F8E
....................                   } 
....................                
....................                   contador2++; 
1F88:  INCF   1D,F
....................                    
....................               } 
1F8A:  INCF   1C,F
1F8C:  BRA    1E06
....................                         
....................                         
....................           } 
....................               if(tecla_pulsada=='3'){ 
1F8E:  MOVF   1A,W
1F90:  SUBLW  33
1F92:  BTFSS  FD8.2
1F94:  BRA    2282
....................                       for (contador3=1;contador3<=20;contador3++){ 
1F96:  MOVLW  01
1F98:  MOVWF  1E
1F9A:  MOVF   1E,W
1F9C:  SUBLW  14
1F9E:  BTFSS  FD8.0
1FA0:  BRA    2282
....................                            copia3=contador3; 
1FA2:  MOVFF  1E,21
1FA6:  CLRF   16
1FA8:  BTFSC  FF2.7
1FAA:  BSF    16.7
1FAC:  BCF    FF2.7
....................                            if(quantum*contador1<time1){ 
1FAE:  MOVFF  6D,A8
1FB2:  MOVFF  6C,A7
1FB6:  CLRF   xAA
1FB8:  MOVFF  1C,A9
1FBC:  CALL   026C
1FC0:  BTFSC  16.7
1FC2:  BSF    FF2.7
1FC4:  MOVFF  02,9A
1FC8:  MOVFF  01,99
1FCC:  MOVF   02,W
1FCE:  SUBWF  67,W
1FD0:  BTFSS  FD8.0
1FD2:  BRA    2102
1FD4:  BNZ   1FDE
1FD6:  MOVF   66,W
1FD8:  SUBWF  x99,W
1FDA:  BTFSC  FD8.0
1FDC:  BRA    2102
1FDE:  CLRF   16
1FE0:  BTFSC  FF2.7
1FE2:  BSF    16.7
1FE4:  BCF    FF2.7
....................                            if(quantum*contador2<=time2){ 
1FE6:  MOVFF  6D,A8
1FEA:  MOVFF  6C,A7
1FEE:  CLRF   xAA
1FF0:  MOVFF  1D,A9
1FF4:  CALL   026C
1FF8:  BTFSC  16.7
1FFA:  BSF    FF2.7
1FFC:  MOVFF  02,9A
2000:  MOVFF  01,99
2004:  MOVF   02,W
2006:  SUBWF  69,W
2008:  BNC   208C
200A:  BNZ   2012
200C:  MOVF   x99,W
200E:  SUBWF  68,W
2010:  BNC   208C
....................                              rb2=1; 
2012:  BSF    F81.2
....................                              rb3=1; 
2014:  BSF    F81.3
....................                              rb1=1; 
2016:  BSF    F81.1
....................                              delay_ms(quantum); 
2018:  MOVFF  6D,99
201C:  INCF   x99,F
201E:  DECF   x99,F
2020:  BTFSC  FD8.2
2022:  BRA    203A
2024:  CLRF   16
2026:  BTFSC  FF2.7
2028:  BSF    16.7
202A:  BCF    FF2.7
202C:  MOVLW  FF
202E:  MOVWF  xA9
2030:  CALL   0246
2034:  BTFSC  16.7
2036:  BSF    FF2.7
2038:  BRA    201E
203A:  CLRF   16
203C:  BTFSC  FF2.7
203E:  BSF    16.7
2040:  BCF    FF2.7
2042:  MOVFF  6C,A9
2046:  CALL   0246
204A:  BTFSC  16.7
204C:  BSF    FF2.7
....................                              rb2=0; 
204E:  BCF    F81.2
....................                              rb3=0; 
2050:  BCF    F81.3
....................                              rb1=0; 
2052:  BCF    F81.1
....................                              delay_ms(quantum); 
2054:  MOVFF  6D,99
2058:  INCF   x99,F
205A:  DECF   x99,F
205C:  BTFSC  FD8.2
205E:  BRA    2076
2060:  CLRF   16
2062:  BTFSC  FF2.7
2064:  BSF    16.7
2066:  BCF    FF2.7
2068:  MOVLW  FF
206A:  MOVWF  xA9
206C:  CALL   0246
2070:  BTFSC  16.7
2072:  BSF    FF2.7
2074:  BRA    205A
2076:  CLRF   16
2078:  BTFSC  FF2.7
207A:  BSF    16.7
207C:  BCF    FF2.7
207E:  MOVFF  6C,A9
2082:  CALL   0246
2086:  BTFSC  16.7
2088:  BSF    FF2.7
....................                           } 
....................                           else{    
208A:  BRA    2100
....................                              rb3=1; 
208C:  BSF    F81.3
....................                              rb1=1; 
208E:  BSF    F81.1
....................                              delay_ms(quantum); 
2090:  MOVFF  6D,99
2094:  INCF   x99,F
2096:  DECF   x99,F
2098:  BTFSC  FD8.2
209A:  BRA    20B2
209C:  CLRF   16
209E:  BTFSC  FF2.7
20A0:  BSF    16.7
20A2:  BCF    FF2.7
20A4:  MOVLW  FF
20A6:  MOVWF  xA9
20A8:  CALL   0246
20AC:  BTFSC  16.7
20AE:  BSF    FF2.7
20B0:  BRA    2096
20B2:  CLRF   16
20B4:  BTFSC  FF2.7
20B6:  BSF    16.7
20B8:  BCF    FF2.7
20BA:  MOVFF  6C,A9
20BE:  CALL   0246
20C2:  BTFSC  16.7
20C4:  BSF    FF2.7
....................                              rb3=0; 
20C6:  BCF    F81.3
....................                              rb1=0; 
20C8:  BCF    F81.1
....................                              delay_ms(quantum); 
20CA:  MOVFF  6D,99
20CE:  INCF   x99,F
20D0:  DECF   x99,F
20D2:  BTFSC  FD8.2
20D4:  BRA    20EC
20D6:  CLRF   16
20D8:  BTFSC  FF2.7
20DA:  BSF    16.7
20DC:  BCF    FF2.7
20DE:  MOVLW  FF
20E0:  MOVWF  xA9
20E2:  CALL   0246
20E6:  BTFSC  16.7
20E8:  BSF    FF2.7
20EA:  BRA    20D0
20EC:  CLRF   16
20EE:  BTFSC  FF2.7
20F0:  BSF    16.7
20F2:  BCF    FF2.7
20F4:  MOVFF  6C,A9
20F8:  CALL   0246
20FC:  BTFSC  16.7
20FE:  BSF    FF2.7
....................                           } 
....................                                                }                                              
....................                    else  { 
2100:  BRA    2250
2102:  CLRF   16
2104:  BTFSC  FF2.7
2106:  BSF    16.7
2108:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<time2){ 
210A:  MOVFF  6D,A8
210E:  MOVFF  6C,A7
2112:  CLRF   xAA
2114:  MOVFF  1D,A9
2118:  CALL   026C
211C:  BTFSC  16.7
211E:  BSF    FF2.7
2120:  MOVFF  02,9A
2124:  MOVFF  01,99
2128:  MOVF   02,W
212A:  SUBWF  69,W
212C:  BNC   21AC
212E:  BNZ   2136
2130:  MOVF   68,W
2132:  SUBWF  x99,W
2134:  BC    21AC
....................                                rb3=1; 
2136:  BSF    F81.3
....................                                rb2=1; 
2138:  BSF    F81.2
....................                                delay_ms(quantum); 
213A:  MOVFF  6D,99
213E:  INCF   x99,F
2140:  DECF   x99,F
2142:  BTFSC  FD8.2
2144:  BRA    215C
2146:  CLRF   16
2148:  BTFSC  FF2.7
214A:  BSF    16.7
214C:  BCF    FF2.7
214E:  MOVLW  FF
2150:  MOVWF  xA9
2152:  CALL   0246
2156:  BTFSC  16.7
2158:  BSF    FF2.7
215A:  BRA    2140
215C:  CLRF   16
215E:  BTFSC  FF2.7
2160:  BSF    16.7
2162:  BCF    FF2.7
2164:  MOVFF  6C,A9
2168:  CALL   0246
216C:  BTFSC  16.7
216E:  BSF    FF2.7
....................                                rb3=0; 
2170:  BCF    F81.3
....................                                rb2=0; 
2172:  BCF    F81.2
....................                                delay_ms(quantum); 
2174:  MOVFF  6D,99
2178:  INCF   x99,F
217A:  DECF   x99,F
217C:  BTFSC  FD8.2
217E:  BRA    2196
2180:  CLRF   16
2182:  BTFSC  FF2.7
2184:  BSF    16.7
2186:  BCF    FF2.7
2188:  MOVLW  FF
218A:  MOVWF  xA9
218C:  CALL   0246
2190:  BTFSC  16.7
2192:  BSF    FF2.7
2194:  BRA    217A
2196:  CLRF   16
2198:  BTFSC  FF2.7
219A:  BSF    16.7
219C:  BCF    FF2.7
219E:  MOVFF  6C,A9
21A2:  CALL   0246
21A6:  BTFSC  16.7
21A8:  BSF    FF2.7
....................                                                     }  
....................                      else{ 
21AA:  BRA    2250
21AC:  CLRF   16
21AE:  BTFSC  FF2.7
21B0:  BSF    16.7
21B2:  BCF    FF2.7
....................                          if(quantum*contador3<time3){ 
21B4:  MOVFF  6D,A8
21B8:  MOVFF  6C,A7
21BC:  CLRF   xAA
21BE:  MOVFF  1E,A9
21C2:  CALL   026C
21C6:  BTFSC  16.7
21C8:  BSF    FF2.7
21CA:  MOVFF  02,9A
21CE:  MOVFF  01,99
21D2:  MOVF   02,W
21D4:  SUBWF  6B,W
21D6:  BNC   2250
21D8:  BNZ   21E0
21DA:  MOVF   6A,W
21DC:  SUBWF  x99,W
21DE:  BC    2250
....................                                rb3=1; 
21E0:  BSF    F81.3
....................                                delay_ms(quantum); 
21E2:  MOVFF  6D,99
21E6:  INCF   x99,F
21E8:  DECF   x99,F
21EA:  BTFSC  FD8.2
21EC:  BRA    2204
21EE:  CLRF   16
21F0:  BTFSC  FF2.7
21F2:  BSF    16.7
21F4:  BCF    FF2.7
21F6:  MOVLW  FF
21F8:  MOVWF  xA9
21FA:  CALL   0246
21FE:  BTFSC  16.7
2200:  BSF    FF2.7
2202:  BRA    21E8
2204:  CLRF   16
2206:  BTFSC  FF2.7
2208:  BSF    16.7
220A:  BCF    FF2.7
220C:  MOVFF  6C,A9
2210:  CALL   0246
2214:  BTFSC  16.7
2216:  BSF    FF2.7
....................                                rb3=0; 
2218:  BCF    F81.3
....................                                delay_ms(quantum); 
221A:  MOVFF  6D,99
221E:  INCF   x99,F
2220:  DECF   x99,F
2222:  BTFSC  FD8.2
2224:  BRA    223C
2226:  CLRF   16
2228:  BTFSC  FF2.7
222A:  BSF    16.7
222C:  BCF    FF2.7
222E:  MOVLW  FF
2230:  MOVWF  xA9
2232:  CALL   0246
2236:  BTFSC  16.7
2238:  BSF    FF2.7
223A:  BRA    2220
223C:  CLRF   16
223E:  BTFSC  FF2.7
2240:  BSF    16.7
2242:  BCF    FF2.7
2244:  MOVFF  6C,A9
2248:  CALL   0246
224C:  BTFSC  16.7
224E:  BSF    FF2.7
....................                                                      }  
....................                            } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1();                 
2250:  MOVF   1C,W
2252:  SUBLW  0A
2254:  BNZ   2260
2256:  MOVF   1F,W
2258:  SUBLW  09
225A:  BNC   2260
225C:  CALL   0FE0
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
2260:  MOVF   1D,W
2262:  SUBLW  10
2264:  BNZ   2270
2266:  MOVF   20,W
2268:  SUBLW  0F
226A:  BNC   2270
226C:  CALL   1038
....................                  if(contador3==20 )do_proceso3(); 
2270:  MOVF   1E,W
2272:  SUBLW  14
2274:  BNZ   227A
2276:  CALL   1090
....................  
....................                   contador1++; 
227A:  INCF   1C,F
....................                   contador2++; 
227C:  INCF   1D,F
....................                  
....................               }                                   
227E:  INCF   1E,F
2280:  BRA    1F9A
....................          }       
....................      }   
....................      //       
....................          else{ 
2282:  BRA    264C
....................           if(tecla_pulsada=='3'){ 
2284:  MOVF   1A,W
2286:  SUBLW  33
2288:  BTFSS  FD8.2
228A:  BRA    264C
....................                for (contador3=1;contador3<=20;contador3++){ 
228C:  MOVLW  01
228E:  MOVWF  1E
2290:  MOVF   1E,W
2292:  SUBLW  14
2294:  BTFSS  FD8.0
2296:  BRA    2412
....................                     copia3=contador3; 
2298:  MOVFF  1E,21
229C:  CLRF   16
229E:  BTFSC  FF2.7
22A0:  BSF    16.7
22A2:  BCF    FF2.7
....................                     if(quantum*contador2<time2){ 
22A4:  MOVFF  6D,A8
22A8:  MOVFF  6C,A7
22AC:  CLRF   xAA
22AE:  MOVFF  1D,A9
22B2:  CALL   026C
22B6:  BTFSC  16.7
22B8:  BSF    FF2.7
22BA:  MOVFF  02,9A
22BE:  MOVFF  01,99
22C2:  MOVF   02,W
22C4:  SUBWF  69,W
22C6:  BNC   2346
22C8:  BNZ   22D0
22CA:  MOVF   68,W
22CC:  SUBWF  x99,W
22CE:  BC    2346
....................                       rb3=1; 
22D0:  BSF    F81.3
....................                       rb2=1; 
22D2:  BSF    F81.2
....................                       delay_ms(quantum); 
22D4:  MOVFF  6D,99
22D8:  INCF   x99,F
22DA:  DECF   x99,F
22DC:  BTFSC  FD8.2
22DE:  BRA    22F6
22E0:  CLRF   16
22E2:  BTFSC  FF2.7
22E4:  BSF    16.7
22E6:  BCF    FF2.7
22E8:  MOVLW  FF
22EA:  MOVWF  xA9
22EC:  CALL   0246
22F0:  BTFSC  16.7
22F2:  BSF    FF2.7
22F4:  BRA    22DA
22F6:  CLRF   16
22F8:  BTFSC  FF2.7
22FA:  BSF    16.7
22FC:  BCF    FF2.7
22FE:  MOVFF  6C,A9
2302:  CALL   0246
2306:  BTFSC  16.7
2308:  BSF    FF2.7
....................                       rb3=0; 
230A:  BCF    F81.3
....................                       rb2=0; 
230C:  BCF    F81.2
....................                       delay_ms(quantum); 
230E:  MOVFF  6D,99
2312:  INCF   x99,F
2314:  DECF   x99,F
2316:  BTFSC  FD8.2
2318:  BRA    2330
231A:  CLRF   16
231C:  BTFSC  FF2.7
231E:  BSF    16.7
2320:  BCF    FF2.7
2322:  MOVLW  FF
2324:  MOVWF  xA9
2326:  CALL   0246
232A:  BTFSC  16.7
232C:  BSF    FF2.7
232E:  BRA    2314
2330:  CLRF   16
2332:  BTFSC  FF2.7
2334:  BSF    16.7
2336:  BCF    FF2.7
2338:  MOVFF  6C,A9
233C:  CALL   0246
2340:  BTFSC  16.7
2342:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
2344:  BRA    23EA
2346:  CLRF   16
2348:  BTFSC  FF2.7
234A:  BSF    16.7
234C:  BCF    FF2.7
....................                     
....................                           if(quantum*contador3<=time3){ 
234E:  MOVFF  6D,A8
2352:  MOVFF  6C,A7
2356:  CLRF   xAA
2358:  MOVFF  1E,A9
235C:  CALL   026C
2360:  BTFSC  16.7
2362:  BSF    FF2.7
2364:  MOVFF  02,9A
2368:  MOVFF  01,99
236C:  MOVF   02,W
236E:  SUBWF  6B,W
2370:  BNC   23EA
2372:  BNZ   237A
2374:  MOVF   x99,W
2376:  SUBWF  6A,W
2378:  BNC   23EA
....................                                rb3=1; 
237A:  BSF    F81.3
....................                                delay_ms(quantum); 
237C:  MOVFF  6D,99
2380:  INCF   x99,F
2382:  DECF   x99,F
2384:  BTFSC  FD8.2
2386:  BRA    239E
2388:  CLRF   16
238A:  BTFSC  FF2.7
238C:  BSF    16.7
238E:  BCF    FF2.7
2390:  MOVLW  FF
2392:  MOVWF  xA9
2394:  CALL   0246
2398:  BTFSC  16.7
239A:  BSF    FF2.7
239C:  BRA    2382
239E:  CLRF   16
23A0:  BTFSC  FF2.7
23A2:  BSF    16.7
23A4:  BCF    FF2.7
23A6:  MOVFF  6C,A9
23AA:  CALL   0246
23AE:  BTFSC  16.7
23B0:  BSF    FF2.7
....................                                rb3=0; 
23B2:  BCF    F81.3
....................                                delay_ms(quantum); 
23B4:  MOVFF  6D,99
23B8:  INCF   x99,F
23BA:  DECF   x99,F
23BC:  BTFSC  FD8.2
23BE:  BRA    23D6
23C0:  CLRF   16
23C2:  BTFSC  FF2.7
23C4:  BSF    16.7
23C6:  BCF    FF2.7
23C8:  MOVLW  FF
23CA:  MOVWF  xA9
23CC:  CALL   0246
23D0:  BTFSC  16.7
23D2:  BSF    FF2.7
23D4:  BRA    23BA
23D6:  CLRF   16
23D8:  BTFSC  FF2.7
23DA:  BSF    16.7
23DC:  BCF    FF2.7
23DE:  MOVFF  6C,A9
23E2:  CALL   0246
23E6:  BTFSC  16.7
23E8:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
23EA:  MOVF   1D,W
23EC:  SUBLW  10
23EE:  BNZ   23FA
23F0:  MOVF   20,W
23F2:  SUBLW  0F
23F4:  BNC   23FA
23F6:  CALL   1038
....................                  if(contador3==20 )do_proceso3(); 
23FA:  MOVF   1E,W
23FC:  SUBLW  14
23FE:  BNZ   2404
2400:  CALL   1090
....................                   
....................                  if(tecla_pulsada=='1'){ 
2404:  MOVF   1A,W
2406:  SUBLW  31
2408:  BNZ   240C
....................                       break; 
240A:  BRA    2412
....................                   } 
....................                   contador2++; 
240C:  INCF   1D,F
....................  
....................                  } 
240E:  INCF   1E,F
2410:  BRA    2290
....................                  if(tecla_pulsada=='1'){ 
2412:  MOVF   1A,W
2414:  SUBLW  31
2416:  BTFSS  FD8.2
2418:  BRA    264C
....................                           
....................                          for (contador3=copia3;contador3<=20;contador3++){ 
241A:  MOVFF  21,1E
241E:  MOVF   1E,W
2420:  SUBLW  14
2422:  BTFSS  FD8.0
2424:  BRA    264C
....................                               copia3=contador3; 
2426:  MOVFF  1E,21
242A:  CLRF   16
242C:  BTFSC  FF2.7
242E:  BSF    16.7
2430:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
2432:  MOVFF  6D,A8
2436:  MOVFF  6C,A7
243A:  CLRF   xAA
243C:  MOVFF  1C,A9
2440:  CALL   026C
2444:  BTFSC  16.7
2446:  BSF    FF2.7
2448:  MOVFF  02,9A
244C:  MOVFF  01,99
2450:  MOVF   02,W
2452:  SUBWF  67,W
2454:  BNC   24D8
2456:  BNZ   245E
2458:  MOVF   x99,W
245A:  SUBWF  66,W
245C:  BNC   24D8
....................                            
....................                              rb2=1; 
245E:  BSF    F81.2
....................                              rb3=1; 
2460:  BSF    F81.3
....................                              rb1=1; 
2462:  BSF    F81.1
....................                              delay_ms(quantum); 
2464:  MOVFF  6D,99
2468:  INCF   x99,F
246A:  DECF   x99,F
246C:  BTFSC  FD8.2
246E:  BRA    2486
2470:  CLRF   16
2472:  BTFSC  FF2.7
2474:  BSF    16.7
2476:  BCF    FF2.7
2478:  MOVLW  FF
247A:  MOVWF  xA9
247C:  CALL   0246
2480:  BTFSC  16.7
2482:  BSF    FF2.7
2484:  BRA    246A
2486:  CLRF   16
2488:  BTFSC  FF2.7
248A:  BSF    16.7
248C:  BCF    FF2.7
248E:  MOVFF  6C,A9
2492:  CALL   0246
2496:  BTFSC  16.7
2498:  BSF    FF2.7
....................                              rb2=0; 
249A:  BCF    F81.2
....................                              rb3=0; 
249C:  BCF    F81.3
....................                              rb1=0; 
249E:  BCF    F81.1
....................                              delay_ms(quantum); 
24A0:  MOVFF  6D,99
24A4:  INCF   x99,F
24A6:  DECF   x99,F
24A8:  BTFSC  FD8.2
24AA:  BRA    24C2
24AC:  CLRF   16
24AE:  BTFSC  FF2.7
24B0:  BSF    16.7
24B2:  BCF    FF2.7
24B4:  MOVLW  FF
24B6:  MOVWF  xA9
24B8:  CALL   0246
24BC:  BTFSC  16.7
24BE:  BSF    FF2.7
24C0:  BRA    24A6
24C2:  CLRF   16
24C4:  BTFSC  FF2.7
24C6:  BSF    16.7
24C8:  BCF    FF2.7
24CA:  MOVFF  6C,A9
24CE:  CALL   0246
24D2:  BTFSC  16.7
24D4:  BSF    FF2.7
....................                           
....................                                                } 
....................                                                 
....................                    else  { 
24D6:  BRA    2626
24D8:  CLRF   16
24DA:  BTFSC  FF2.7
24DC:  BSF    16.7
24DE:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<=time2){ 
24E0:  MOVFF  6D,A8
24E4:  MOVFF  6C,A7
24E8:  CLRF   xAA
24EA:  MOVFF  1D,A9
24EE:  CALL   026C
24F2:  BTFSC  16.7
24F4:  BSF    FF2.7
24F6:  MOVFF  02,9A
24FA:  MOVFF  01,99
24FE:  MOVF   02,W
2500:  SUBWF  69,W
2502:  BNC   2582
2504:  BNZ   250C
2506:  MOVF   x99,W
2508:  SUBWF  68,W
250A:  BNC   2582
....................                                rb2=1; 
250C:  BSF    F81.2
....................                                rb3=1; 
250E:  BSF    F81.3
....................                                delay_ms(quantum); 
2510:  MOVFF  6D,99
2514:  INCF   x99,F
2516:  DECF   x99,F
2518:  BTFSC  FD8.2
251A:  BRA    2532
251C:  CLRF   16
251E:  BTFSC  FF2.7
2520:  BSF    16.7
2522:  BCF    FF2.7
2524:  MOVLW  FF
2526:  MOVWF  xA9
2528:  CALL   0246
252C:  BTFSC  16.7
252E:  BSF    FF2.7
2530:  BRA    2516
2532:  CLRF   16
2534:  BTFSC  FF2.7
2536:  BSF    16.7
2538:  BCF    FF2.7
253A:  MOVFF  6C,A9
253E:  CALL   0246
2542:  BTFSC  16.7
2544:  BSF    FF2.7
....................                                rb2=0; 
2546:  BCF    F81.2
....................                                rb3=0; 
2548:  BCF    F81.3
....................                                delay_ms(quantum); 
254A:  MOVFF  6D,99
254E:  INCF   x99,F
2550:  DECF   x99,F
2552:  BTFSC  FD8.2
2554:  BRA    256C
2556:  CLRF   16
2558:  BTFSC  FF2.7
255A:  BSF    16.7
255C:  BCF    FF2.7
255E:  MOVLW  FF
2560:  MOVWF  xA9
2562:  CALL   0246
2566:  BTFSC  16.7
2568:  BSF    FF2.7
256A:  BRA    2550
256C:  CLRF   16
256E:  BTFSC  FF2.7
2570:  BSF    16.7
2572:  BCF    FF2.7
2574:  MOVFF  6C,A9
2578:  CALL   0246
257C:  BTFSC  16.7
257E:  BSF    FF2.7
....................                                                      }  
....................                              else{ 
2580:  BRA    2626
2582:  CLRF   16
2584:  BTFSC  FF2.7
2586:  BSF    16.7
2588:  BCF    FF2.7
....................                                         if(quantum*contador3<=time3){ 
258A:  MOVFF  6D,A8
258E:  MOVFF  6C,A7
2592:  CLRF   xAA
2594:  MOVFF  1E,A9
2598:  CALL   026C
259C:  BTFSC  16.7
259E:  BSF    FF2.7
25A0:  MOVFF  02,9A
25A4:  MOVFF  01,99
25A8:  MOVF   02,W
25AA:  SUBWF  6B,W
25AC:  BNC   2626
25AE:  BNZ   25B6
25B0:  MOVF   x99,W
25B2:  SUBWF  6A,W
25B4:  BNC   2626
....................                                rb3=1; 
25B6:  BSF    F81.3
....................                                
....................                                delay_ms(quantum); 
25B8:  MOVFF  6D,99
25BC:  INCF   x99,F
25BE:  DECF   x99,F
25C0:  BTFSC  FD8.2
25C2:  BRA    25DA
25C4:  CLRF   16
25C6:  BTFSC  FF2.7
25C8:  BSF    16.7
25CA:  BCF    FF2.7
25CC:  MOVLW  FF
25CE:  MOVWF  xA9
25D0:  CALL   0246
25D4:  BTFSC  16.7
25D6:  BSF    FF2.7
25D8:  BRA    25BE
25DA:  CLRF   16
25DC:  BTFSC  FF2.7
25DE:  BSF    16.7
25E0:  BCF    FF2.7
25E2:  MOVFF  6C,A9
25E6:  CALL   0246
25EA:  BTFSC  16.7
25EC:  BSF    FF2.7
....................                                rb3=0; 
25EE:  BCF    F81.3
....................                                
....................                                delay_ms(quantum); 
25F0:  MOVFF  6D,99
25F4:  INCF   x99,F
25F6:  DECF   x99,F
25F8:  BTFSC  FD8.2
25FA:  BRA    2612
25FC:  CLRF   16
25FE:  BTFSC  FF2.7
2600:  BSF    16.7
2602:  BCF    FF2.7
2604:  MOVLW  FF
2606:  MOVWF  xA9
2608:  CALL   0246
260C:  BTFSC  16.7
260E:  BSF    FF2.7
2610:  BRA    25F6
2612:  CLRF   16
2614:  BTFSC  FF2.7
2616:  BSF    16.7
2618:  BCF    FF2.7
261A:  MOVFF  6C,A9
261E:  CALL   0246
2622:  BTFSC  16.7
2624:  BSF    FF2.7
....................                                                      }                
....................                                                       
....................                                                      } 
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
2626:  MOVF   1C,W
2628:  SUBLW  0A
262A:  BNZ   2630
262C:  CALL   0FE0
....................                  if(contador3==20 )do_proceso3(); 
2630:  MOVF   1E,W
2632:  SUBLW  14
2634:  BNZ   263A
2636:  CALL   1090
....................                  if(contador2==16 )do_proceso2(); 
263A:  MOVF   1D,W
263C:  SUBLW  10
263E:  BNZ   2644
2640:  CALL   1038
....................                   contador1++; 
2644:  INCF   1C,F
....................                   contador2++; 
2646:  INCF   1D,F
....................  
....................                  } 
2648:  INCF   1E,F
264A:  BRA    241E
....................                           
....................                          
....................                   
....................                                        } 
....................               } 
....................        }    
....................    } 
264C:  GOTO   3CF4 (RETURN)
....................            
.................... //////////////////////////////////////// 
.................... void do_proceso33(){ 
.................... for (contador3=1;contador2<=20;contador3++){ 
2650:  MOVLW  01
2652:  MOVWF  1E
2654:  MOVF   1D,W
2656:  SUBLW  14
2658:  BNC   271C
....................              copia3=contador3; 
265A:  MOVFF  1E,21
265E:  CLRF   16
2660:  BTFSC  FF2.7
2662:  BSF    16.7
2664:  BCF    FF2.7
....................              if(quantum*contador3<time3){ 
2666:  MOVFF  6D,A8
266A:  MOVFF  6C,A7
266E:  CLRF   xAA
2670:  MOVFF  1E,A9
2674:  CALL   026C
2678:  BTFSC  16.7
267A:  BSF    FF2.7
267C:  MOVFF  02,9A
2680:  MOVFF  01,99
2684:  MOVF   02,W
2686:  SUBWF  6B,W
2688:  BNC   2704
268A:  BNZ   2692
268C:  MOVF   6A,W
268E:  SUBWF  x99,W
2690:  BC    2704
....................                 rb3=1; 
2692:  BSF    F81.3
....................                 delay_ms(quantum); 
2694:  MOVFF  6D,99
2698:  INCF   x99,F
269A:  DECF   x99,F
269C:  BTFSC  FD8.2
269E:  BRA    26B6
26A0:  CLRF   16
26A2:  BTFSC  FF2.7
26A4:  BSF    16.7
26A6:  BCF    FF2.7
26A8:  MOVLW  FF
26AA:  MOVWF  xA9
26AC:  CALL   0246
26B0:  BTFSC  16.7
26B2:  BSF    FF2.7
26B4:  BRA    269A
26B6:  CLRF   16
26B8:  BTFSC  FF2.7
26BA:  BSF    16.7
26BC:  BCF    FF2.7
26BE:  MOVFF  6C,A9
26C2:  CALL   0246
26C6:  BTFSC  16.7
26C8:  BSF    FF2.7
....................                 rb3=0; 
26CA:  BCF    F81.3
....................                 delay_ms(quantum); 
26CC:  MOVFF  6D,99
26D0:  INCF   x99,F
26D2:  DECF   x99,F
26D4:  BTFSC  FD8.2
26D6:  BRA    26EE
26D8:  CLRF   16
26DA:  BTFSC  FF2.7
26DC:  BSF    16.7
26DE:  BCF    FF2.7
26E0:  MOVLW  FF
26E2:  MOVWF  xA9
26E4:  CALL   0246
26E8:  BTFSC  16.7
26EA:  BSF    FF2.7
26EC:  BRA    26D2
26EE:  CLRF   16
26F0:  BTFSC  FF2.7
26F2:  BSF    16.7
26F4:  BCF    FF2.7
26F6:  MOVFF  6C,A9
26FA:  CALL   0246
26FE:  BTFSC  16.7
2700:  BSF    FF2.7
....................                                         } 
....................              else { 
2702:  BRA    2708
....................                     do_proceso3(); 
2704:  CALL   1090
....................                    }   
....................              if(tecla_pulsada=='1'){ 
2708:  MOVF   1A,W
270A:  SUBLW  31
270C:  BNZ   2710
....................                    break; 
270E:  BRA    271C
....................                   } 
....................              if(tecla_pulsada=='2'){ 
2710:  MOVF   1A,W
2712:  SUBLW  32
2714:  BNZ   2718
....................                    break; 
2716:  BRA    271C
....................                   } 
....................          } 
2718:  INCF   1E,F
271A:  BRA    2654
....................   
....................      if(tecla_pulsada=='1'){ 
271C:  MOVF   1A,W
271E:  SUBLW  31
2720:  BTFSS  FD8.2
2722:  GOTO   2ECC
....................                if(copia3<=10){ 
2726:  MOVF   21,W
2728:  SUBLW  0A
272A:  BTFSS  FD8.0
272C:  BRA    28B6
....................                for (contador3=copia3;contador3<=20;contador3++){ 
272E:  MOVFF  21,1E
2732:  MOVF   1E,W
2734:  SUBLW  14
2736:  BTFSS  FD8.0
2738:  BRA    28B4
....................                     copia3=contador3; 
273A:  MOVFF  1E,21
273E:  CLRF   16
2740:  BTFSC  FF2.7
2742:  BSF    16.7
2744:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
2746:  MOVFF  6D,A8
274A:  MOVFF  6C,A7
274E:  CLRF   xAA
2750:  MOVFF  1C,A9
2754:  CALL   026C
2758:  BTFSC  16.7
275A:  BSF    FF2.7
275C:  MOVFF  02,9A
2760:  MOVFF  01,99
2764:  MOVF   02,W
2766:  SUBWF  67,W
2768:  BNC   27E8
276A:  BNZ   2772
276C:  MOVF   x99,W
276E:  SUBWF  66,W
2770:  BNC   27E8
....................                       rb3=1; 
2772:  BSF    F81.3
....................                       rb1=1; 
2774:  BSF    F81.1
....................                       delay_ms(quantum); 
2776:  MOVFF  6D,99
277A:  INCF   x99,F
277C:  DECF   x99,F
277E:  BTFSC  FD8.2
2780:  BRA    2798
2782:  CLRF   16
2784:  BTFSC  FF2.7
2786:  BSF    16.7
2788:  BCF    FF2.7
278A:  MOVLW  FF
278C:  MOVWF  xA9
278E:  CALL   0246
2792:  BTFSC  16.7
2794:  BSF    FF2.7
2796:  BRA    277C
2798:  CLRF   16
279A:  BTFSC  FF2.7
279C:  BSF    16.7
279E:  BCF    FF2.7
27A0:  MOVFF  6C,A9
27A4:  CALL   0246
27A8:  BTFSC  16.7
27AA:  BSF    FF2.7
....................                       rb1=0; 
27AC:  BCF    F81.1
....................                       rb3=0; 
27AE:  BCF    F81.3
....................                       delay_ms(quantum); 
27B0:  MOVFF  6D,99
27B4:  INCF   x99,F
27B6:  DECF   x99,F
27B8:  BTFSC  FD8.2
27BA:  BRA    27D2
27BC:  CLRF   16
27BE:  BTFSC  FF2.7
27C0:  BSF    16.7
27C2:  BCF    FF2.7
27C4:  MOVLW  FF
27C6:  MOVWF  xA9
27C8:  CALL   0246
27CC:  BTFSC  16.7
27CE:  BSF    FF2.7
27D0:  BRA    27B6
27D2:  CLRF   16
27D4:  BTFSC  FF2.7
27D6:  BSF    16.7
27D8:  BCF    FF2.7
27DA:  MOVFF  6C,A9
27DE:  CALL   0246
27E2:  BTFSC  16.7
27E4:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
27E6:  BRA    288C
27E8:  CLRF   16
27EA:  BTFSC  FF2.7
27EC:  BSF    16.7
27EE:  BCF    FF2.7
....................  
....................                           if(quantum*contador3<time3){ 
27F0:  MOVFF  6D,A8
27F4:  MOVFF  6C,A7
27F8:  CLRF   xAA
27FA:  MOVFF  1E,A9
27FE:  CALL   026C
2802:  BTFSC  16.7
2804:  BSF    FF2.7
2806:  MOVFF  02,9A
280A:  MOVFF  01,99
280E:  MOVF   02,W
2810:  SUBWF  6B,W
2812:  BNC   288C
2814:  BNZ   281C
2816:  MOVF   6A,W
2818:  SUBWF  x99,W
281A:  BC    288C
....................                                rb3=1; 
281C:  BSF    F81.3
....................                                delay_ms(quantum); 
281E:  MOVFF  6D,99
2822:  INCF   x99,F
2824:  DECF   x99,F
2826:  BTFSC  FD8.2
2828:  BRA    2840
282A:  CLRF   16
282C:  BTFSC  FF2.7
282E:  BSF    16.7
2830:  BCF    FF2.7
2832:  MOVLW  FF
2834:  MOVWF  xA9
2836:  CALL   0246
283A:  BTFSC  16.7
283C:  BSF    FF2.7
283E:  BRA    2824
2840:  CLRF   16
2842:  BTFSC  FF2.7
2844:  BSF    16.7
2846:  BCF    FF2.7
2848:  MOVFF  6C,A9
284C:  CALL   0246
2850:  BTFSC  16.7
2852:  BSF    FF2.7
....................                                rb3=0; 
2854:  BCF    F81.3
....................                                delay_ms(quantum); 
2856:  MOVFF  6D,99
285A:  INCF   x99,F
285C:  DECF   x99,F
285E:  BTFSC  FD8.2
2860:  BRA    2878
2862:  CLRF   16
2864:  BTFSC  FF2.7
2866:  BSF    16.7
2868:  BCF    FF2.7
286A:  MOVLW  FF
286C:  MOVWF  xA9
286E:  CALL   0246
2872:  BTFSC  16.7
2874:  BSF    FF2.7
2876:  BRA    285C
2878:  CLRF   16
287A:  BTFSC  FF2.7
287C:  BSF    16.7
287E:  BCF    FF2.7
2880:  MOVFF  6C,A9
2884:  CALL   0246
2888:  BTFSC  16.7
288A:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
288C:  MOVF   1C,W
288E:  SUBLW  0A
2890:  BNZ   289C
2892:  MOVF   1F,W
2894:  SUBLW  09
2896:  BNC   289C
2898:  CALL   0FE0
....................                  if(contador3==20 ) do_proceso3(); 
289C:  MOVF   1E,W
289E:  SUBLW  14
28A0:  BNZ   28A6
28A2:  CALL   1090
....................           
....................                  if(tecla_pulsada=='2'){ 
28A6:  MOVF   1A,W
28A8:  SUBLW  32
28AA:  BNZ   28AE
....................                       break; 
28AC:  BRA    28B4
....................                   } 
....................                
....................                   contador1++; 
28AE:  INCF   1C,F
....................                    
....................               } 
28B0:  INCF   1E,F
28B2:  BRA    2732
....................              } 
....................                        else{ 
28B4:  BRA    2A3C
....................                         for (contador1=1;contador1<=10;contador1++){ 
28B6:  MOVLW  01
28B8:  MOVWF  1C
28BA:  MOVF   1C,W
28BC:  SUBLW  0A
28BE:  BTFSS  FD8.0
28C0:  BRA    2A3C
....................                     copia1=contador1; 
28C2:  MOVFF  1C,1F
28C6:  CLRF   16
28C8:  BTFSC  FF2.7
28CA:  BSF    16.7
28CC:  BCF    FF2.7
....................                     if(quantum*contador3<=time3){ 
28CE:  MOVFF  6D,A8
28D2:  MOVFF  6C,A7
28D6:  CLRF   xAA
28D8:  MOVFF  1E,A9
28DC:  CALL   026C
28E0:  BTFSC  16.7
28E2:  BSF    FF2.7
28E4:  MOVFF  02,9A
28E8:  MOVFF  01,99
28EC:  MOVF   02,W
28EE:  SUBWF  6B,W
28F0:  BNC   2970
28F2:  BNZ   28FA
28F4:  MOVF   x99,W
28F6:  SUBWF  6A,W
28F8:  BNC   2970
....................                       rb3=1; 
28FA:  BSF    F81.3
....................                       rb1=1; 
28FC:  BSF    F81.1
....................                       delay_ms(quantum); 
28FE:  MOVFF  6D,99
2902:  INCF   x99,F
2904:  DECF   x99,F
2906:  BTFSC  FD8.2
2908:  BRA    2920
290A:  CLRF   16
290C:  BTFSC  FF2.7
290E:  BSF    16.7
2910:  BCF    FF2.7
2912:  MOVLW  FF
2914:  MOVWF  xA9
2916:  CALL   0246
291A:  BTFSC  16.7
291C:  BSF    FF2.7
291E:  BRA    2904
2920:  CLRF   16
2922:  BTFSC  FF2.7
2924:  BSF    16.7
2926:  BCF    FF2.7
2928:  MOVFF  6C,A9
292C:  CALL   0246
2930:  BTFSC  16.7
2932:  BSF    FF2.7
....................                       rb1=0; 
2934:  BCF    F81.1
....................                       rb3=0; 
2936:  BCF    F81.3
....................                       delay_ms(quantum); 
2938:  MOVFF  6D,99
293C:  INCF   x99,F
293E:  DECF   x99,F
2940:  BTFSC  FD8.2
2942:  BRA    295A
2944:  CLRF   16
2946:  BTFSC  FF2.7
2948:  BSF    16.7
294A:  BCF    FF2.7
294C:  MOVLW  FF
294E:  MOVWF  xA9
2950:  CALL   0246
2954:  BTFSC  16.7
2956:  BSF    FF2.7
2958:  BRA    293E
295A:  CLRF   16
295C:  BTFSC  FF2.7
295E:  BSF    16.7
2960:  BCF    FF2.7
2962:  MOVFF  6C,A9
2966:  CALL   0246
296A:  BTFSC  16.7
296C:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
296E:  BRA    2A14
2970:  CLRF   16
2972:  BTFSC  FF2.7
2974:  BSF    16.7
2976:  BCF    FF2.7
....................  
....................                           if(quantum*contador1<time1){ 
2978:  MOVFF  6D,A8
297C:  MOVFF  6C,A7
2980:  CLRF   xAA
2982:  MOVFF  1C,A9
2986:  CALL   026C
298A:  BTFSC  16.7
298C:  BSF    FF2.7
298E:  MOVFF  02,9A
2992:  MOVFF  01,99
2996:  MOVF   02,W
2998:  SUBWF  67,W
299A:  BNC   2A14
299C:  BNZ   29A4
299E:  MOVF   66,W
29A0:  SUBWF  x99,W
29A2:  BC    2A14
....................                                rb1=1; 
29A4:  BSF    F81.1
....................                                delay_ms(quantum); 
29A6:  MOVFF  6D,99
29AA:  INCF   x99,F
29AC:  DECF   x99,F
29AE:  BTFSC  FD8.2
29B0:  BRA    29C8
29B2:  CLRF   16
29B4:  BTFSC  FF2.7
29B6:  BSF    16.7
29B8:  BCF    FF2.7
29BA:  MOVLW  FF
29BC:  MOVWF  xA9
29BE:  CALL   0246
29C2:  BTFSC  16.7
29C4:  BSF    FF2.7
29C6:  BRA    29AC
29C8:  CLRF   16
29CA:  BTFSC  FF2.7
29CC:  BSF    16.7
29CE:  BCF    FF2.7
29D0:  MOVFF  6C,A9
29D4:  CALL   0246
29D8:  BTFSC  16.7
29DA:  BSF    FF2.7
....................                                rb1=0; 
29DC:  BCF    F81.1
....................                                delay_ms(quantum); 
29DE:  MOVFF  6D,99
29E2:  INCF   x99,F
29E4:  DECF   x99,F
29E6:  BTFSC  FD8.2
29E8:  BRA    2A00
29EA:  CLRF   16
29EC:  BTFSC  FF2.7
29EE:  BSF    16.7
29F0:  BCF    FF2.7
29F2:  MOVLW  FF
29F4:  MOVWF  xA9
29F6:  CALL   0246
29FA:  BTFSC  16.7
29FC:  BSF    FF2.7
29FE:  BRA    29E4
2A00:  CLRF   16
2A02:  BTFSC  FF2.7
2A04:  BSF    16.7
2A06:  BCF    FF2.7
2A08:  MOVFF  6C,A9
2A0C:  CALL   0246
2A10:  BTFSC  16.7
2A12:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
2A14:  MOVF   1C,W
2A16:  SUBLW  0A
2A18:  BNZ   2A1E
2A1A:  CALL   0FE0
....................                  if(contador3==20 && copia3<20) do_proceso3(); 
2A1E:  MOVF   1E,W
2A20:  SUBLW  14
2A22:  BNZ   2A2E
2A24:  MOVF   21,W
2A26:  SUBLW  13
2A28:  BNC   2A2E
2A2A:  CALL   1090
....................           
....................                  if(tecla_pulsada=='2'){ 
2A2E:  MOVF   1A,W
2A30:  SUBLW  32
2A32:  BNZ   2A36
....................                       break; 
2A34:  BRA    2A3C
....................                   } 
....................                
....................                   contador3++; 
2A36:  INCF   1E,F
....................                    
....................               } 
2A38:  INCF   1C,F
2A3A:  BRA    28BA
....................                         
....................                         
....................           } 
....................            
....................               if(tecla_pulsada=='2'){ 
2A3C:  MOVF   1A,W
2A3E:  SUBLW  32
2A40:  BTFSS  FD8.2
2A42:  BRA    2EC8
....................                           if (copia3<=4){ 
2A44:  MOVF   21,W
2A46:  SUBLW  04
2A48:  BTFSS  FD8.0
2A4A:  BRA    2C8C
....................                       for (contador3=1;contador3<=20;contador3++){ 
2A4C:  MOVLW  01
2A4E:  MOVWF  1E
2A50:  MOVF   1E,W
2A52:  SUBLW  14
2A54:  BTFSS  FD8.0
2A56:  BRA    2C8A
....................                            copia3=contador3; 
2A58:  MOVFF  1E,21
2A5C:  CLRF   16
2A5E:  BTFSC  FF2.7
2A60:  BSF    16.7
2A62:  BCF    FF2.7
....................                            if(quantum*contador1<time1){ 
2A64:  MOVFF  6D,A8
2A68:  MOVFF  6C,A7
2A6C:  CLRF   xAA
2A6E:  MOVFF  1C,A9
2A72:  CALL   026C
2A76:  BTFSC  16.7
2A78:  BSF    FF2.7
2A7A:  MOVFF  02,9A
2A7E:  MOVFF  01,99
2A82:  MOVF   02,W
2A84:  SUBWF  67,W
2A86:  BNC   2B0A
2A88:  BNZ   2A90
2A8A:  MOVF   66,W
2A8C:  SUBWF  x99,W
2A8E:  BC    2B0A
....................                              rb2=1; 
2A90:  BSF    F81.2
....................                              rb3=1; 
2A92:  BSF    F81.3
....................                              rb1=1; 
2A94:  BSF    F81.1
....................                              delay_ms(quantum); 
2A96:  MOVFF  6D,99
2A9A:  INCF   x99,F
2A9C:  DECF   x99,F
2A9E:  BTFSC  FD8.2
2AA0:  BRA    2AB8
2AA2:  CLRF   16
2AA4:  BTFSC  FF2.7
2AA6:  BSF    16.7
2AA8:  BCF    FF2.7
2AAA:  MOVLW  FF
2AAC:  MOVWF  xA9
2AAE:  CALL   0246
2AB2:  BTFSC  16.7
2AB4:  BSF    FF2.7
2AB6:  BRA    2A9C
2AB8:  CLRF   16
2ABA:  BTFSC  FF2.7
2ABC:  BSF    16.7
2ABE:  BCF    FF2.7
2AC0:  MOVFF  6C,A9
2AC4:  CALL   0246
2AC8:  BTFSC  16.7
2ACA:  BSF    FF2.7
....................                              rb2=0; 
2ACC:  BCF    F81.2
....................                              rb3=0; 
2ACE:  BCF    F81.3
....................                              rb1=0; 
2AD0:  BCF    F81.1
....................                              delay_ms(quantum); 
2AD2:  MOVFF  6D,99
2AD6:  INCF   x99,F
2AD8:  DECF   x99,F
2ADA:  BTFSC  FD8.2
2ADC:  BRA    2AF4
2ADE:  CLRF   16
2AE0:  BTFSC  FF2.7
2AE2:  BSF    16.7
2AE4:  BCF    FF2.7
2AE6:  MOVLW  FF
2AE8:  MOVWF  xA9
2AEA:  CALL   0246
2AEE:  BTFSC  16.7
2AF0:  BSF    FF2.7
2AF2:  BRA    2AD8
2AF4:  CLRF   16
2AF6:  BTFSC  FF2.7
2AF8:  BSF    16.7
2AFA:  BCF    FF2.7
2AFC:  MOVFF  6C,A9
2B00:  CALL   0246
2B04:  BTFSC  16.7
2B06:  BSF    FF2.7
....................                          
....................                                                }                                              
....................                    else  { 
2B08:  BRA    2C58
2B0A:  CLRF   16
2B0C:  BTFSC  FF2.7
2B0E:  BSF    16.7
2B10:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<time2){ 
2B12:  MOVFF  6D,A8
2B16:  MOVFF  6C,A7
2B1A:  CLRF   xAA
2B1C:  MOVFF  1D,A9
2B20:  CALL   026C
2B24:  BTFSC  16.7
2B26:  BSF    FF2.7
2B28:  MOVFF  02,9A
2B2C:  MOVFF  01,99
2B30:  MOVF   02,W
2B32:  SUBWF  69,W
2B34:  BNC   2BB4
2B36:  BNZ   2B3E
2B38:  MOVF   68,W
2B3A:  SUBWF  x99,W
2B3C:  BC    2BB4
....................                                rb3=1; 
2B3E:  BSF    F81.3
....................                                rb2=1; 
2B40:  BSF    F81.2
....................                                delay_ms(quantum); 
2B42:  MOVFF  6D,99
2B46:  INCF   x99,F
2B48:  DECF   x99,F
2B4A:  BTFSC  FD8.2
2B4C:  BRA    2B64
2B4E:  CLRF   16
2B50:  BTFSC  FF2.7
2B52:  BSF    16.7
2B54:  BCF    FF2.7
2B56:  MOVLW  FF
2B58:  MOVWF  xA9
2B5A:  CALL   0246
2B5E:  BTFSC  16.7
2B60:  BSF    FF2.7
2B62:  BRA    2B48
2B64:  CLRF   16
2B66:  BTFSC  FF2.7
2B68:  BSF    16.7
2B6A:  BCF    FF2.7
2B6C:  MOVFF  6C,A9
2B70:  CALL   0246
2B74:  BTFSC  16.7
2B76:  BSF    FF2.7
....................                                rb3=0; 
2B78:  BCF    F81.3
....................                                rb2=0; 
2B7A:  BCF    F81.2
....................                                delay_ms(quantum); 
2B7C:  MOVFF  6D,99
2B80:  INCF   x99,F
2B82:  DECF   x99,F
2B84:  BTFSC  FD8.2
2B86:  BRA    2B9E
2B88:  CLRF   16
2B8A:  BTFSC  FF2.7
2B8C:  BSF    16.7
2B8E:  BCF    FF2.7
2B90:  MOVLW  FF
2B92:  MOVWF  xA9
2B94:  CALL   0246
2B98:  BTFSC  16.7
2B9A:  BSF    FF2.7
2B9C:  BRA    2B82
2B9E:  CLRF   16
2BA0:  BTFSC  FF2.7
2BA2:  BSF    16.7
2BA4:  BCF    FF2.7
2BA6:  MOVFF  6C,A9
2BAA:  CALL   0246
2BAE:  BTFSC  16.7
2BB0:  BSF    FF2.7
....................                                                     }  
....................                      else{ 
2BB2:  BRA    2C58
2BB4:  CLRF   16
2BB6:  BTFSC  FF2.7
2BB8:  BSF    16.7
2BBA:  BCF    FF2.7
....................                          if(quantum*contador3<time3){ 
2BBC:  MOVFF  6D,A8
2BC0:  MOVFF  6C,A7
2BC4:  CLRF   xAA
2BC6:  MOVFF  1E,A9
2BCA:  CALL   026C
2BCE:  BTFSC  16.7
2BD0:  BSF    FF2.7
2BD2:  MOVFF  02,9A
2BD6:  MOVFF  01,99
2BDA:  MOVF   02,W
2BDC:  SUBWF  6B,W
2BDE:  BNC   2C58
2BE0:  BNZ   2BE8
2BE2:  MOVF   6A,W
2BE4:  SUBWF  x99,W
2BE6:  BC    2C58
....................                                rb3=1; 
2BE8:  BSF    F81.3
....................                                delay_ms(quantum); 
2BEA:  MOVFF  6D,99
2BEE:  INCF   x99,F
2BF0:  DECF   x99,F
2BF2:  BTFSC  FD8.2
2BF4:  BRA    2C0C
2BF6:  CLRF   16
2BF8:  BTFSC  FF2.7
2BFA:  BSF    16.7
2BFC:  BCF    FF2.7
2BFE:  MOVLW  FF
2C00:  MOVWF  xA9
2C02:  CALL   0246
2C06:  BTFSC  16.7
2C08:  BSF    FF2.7
2C0A:  BRA    2BF0
2C0C:  CLRF   16
2C0E:  BTFSC  FF2.7
2C10:  BSF    16.7
2C12:  BCF    FF2.7
2C14:  MOVFF  6C,A9
2C18:  CALL   0246
2C1C:  BTFSC  16.7
2C1E:  BSF    FF2.7
....................                                rb3=0; 
2C20:  BCF    F81.3
....................                                delay_ms(quantum); 
2C22:  MOVFF  6D,99
2C26:  INCF   x99,F
2C28:  DECF   x99,F
2C2A:  BTFSC  FD8.2
2C2C:  BRA    2C44
2C2E:  CLRF   16
2C30:  BTFSC  FF2.7
2C32:  BSF    16.7
2C34:  BCF    FF2.7
2C36:  MOVLW  FF
2C38:  MOVWF  xA9
2C3A:  CALL   0246
2C3E:  BTFSC  16.7
2C40:  BSF    FF2.7
2C42:  BRA    2C28
2C44:  CLRF   16
2C46:  BTFSC  FF2.7
2C48:  BSF    16.7
2C4A:  BCF    FF2.7
2C4C:  MOVFF  6C,A9
2C50:  CALL   0246
2C54:  BTFSC  16.7
2C56:  BSF    FF2.7
....................                                                      }  
....................                            } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1();                 
2C58:  MOVF   1C,W
2C5A:  SUBLW  0A
2C5C:  BNZ   2C68
2C5E:  MOVF   1F,W
2C60:  SUBLW  09
2C62:  BNC   2C68
2C64:  CALL   0FE0
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
2C68:  MOVF   1D,W
2C6A:  SUBLW  10
2C6C:  BNZ   2C78
2C6E:  MOVF   20,W
2C70:  SUBLW  0F
2C72:  BNC   2C78
2C74:  CALL   1038
....................                  if(contador3==20 )do_proceso3(); 
2C78:  MOVF   1E,W
2C7A:  SUBLW  14
2C7C:  BNZ   2C82
2C7E:  CALL   1090
....................  
....................                   contador1++; 
2C82:  INCF   1C,F
....................                   contador2++; 
2C84:  INCF   1D,F
....................                  
....................               } // 
2C86:  INCF   1E,F
2C88:  BRA    2A50
....................                           } 
....................               
....................               
....................              else 
2C8A:  BRA    2EC8
....................                  { 
....................                      for (contador2=1;contador2<=16;contador2++){ 
2C8C:  MOVLW  01
2C8E:  MOVWF  1D
2C90:  MOVF   1D,W
2C92:  SUBLW  10
2C94:  BTFSS  FD8.0
2C96:  BRA    2EC8
....................                            copia2=contador2; 
2C98:  MOVFF  1D,20
2C9C:  CLRF   16
2C9E:  BTFSC  FF2.7
2CA0:  BSF    16.7
2CA2:  BCF    FF2.7
....................                            if(quantum*contador1<time1){ 
2CA4:  MOVFF  6D,A8
2CA8:  MOVFF  6C,A7
2CAC:  CLRF   xAA
2CAE:  MOVFF  1C,A9
2CB2:  CALL   026C
2CB6:  BTFSC  16.7
2CB8:  BSF    FF2.7
2CBA:  MOVFF  02,9A
2CBE:  MOVFF  01,99
2CC2:  MOVF   02,W
2CC4:  SUBWF  67,W
2CC6:  BTFSS  FD8.0
2CC8:  BRA    2DF8
2CCA:  BNZ   2CD4
2CCC:  MOVF   66,W
2CCE:  SUBWF  x99,W
2CD0:  BTFSC  FD8.0
2CD2:  BRA    2DF8
2CD4:  CLRF   16
2CD6:  BTFSC  FF2.7
2CD8:  BSF    16.7
2CDA:  BCF    FF2.7
....................                            if(quantum*contador3<time3){ 
2CDC:  MOVFF  6D,A8
2CE0:  MOVFF  6C,A7
2CE4:  CLRF   xAA
2CE6:  MOVFF  1E,A9
2CEA:  CALL   026C
2CEE:  BTFSC  16.7
2CF0:  BSF    FF2.7
2CF2:  MOVFF  02,9A
2CF6:  MOVFF  01,99
2CFA:  MOVF   02,W
2CFC:  SUBWF  6B,W
2CFE:  BNC   2D82
2D00:  BNZ   2D08
2D02:  MOVF   6A,W
2D04:  SUBWF  x99,W
2D06:  BC    2D82
....................                              rb2=1; 
2D08:  BSF    F81.2
....................                              rb3=1; 
2D0A:  BSF    F81.3
....................                              rb1=1; 
2D0C:  BSF    F81.1
....................                              delay_ms(quantum); 
2D0E:  MOVFF  6D,99
2D12:  INCF   x99,F
2D14:  DECF   x99,F
2D16:  BTFSC  FD8.2
2D18:  BRA    2D30
2D1A:  CLRF   16
2D1C:  BTFSC  FF2.7
2D1E:  BSF    16.7
2D20:  BCF    FF2.7
2D22:  MOVLW  FF
2D24:  MOVWF  xA9
2D26:  CALL   0246
2D2A:  BTFSC  16.7
2D2C:  BSF    FF2.7
2D2E:  BRA    2D14
2D30:  CLRF   16
2D32:  BTFSC  FF2.7
2D34:  BSF    16.7
2D36:  BCF    FF2.7
2D38:  MOVFF  6C,A9
2D3C:  CALL   0246
2D40:  BTFSC  16.7
2D42:  BSF    FF2.7
....................                              rb2=0; 
2D44:  BCF    F81.2
....................                              rb3=0; 
2D46:  BCF    F81.3
....................                              rb1=0; 
2D48:  BCF    F81.1
....................                              delay_ms(quantum); 
2D4A:  MOVFF  6D,99
2D4E:  INCF   x99,F
2D50:  DECF   x99,F
2D52:  BTFSC  FD8.2
2D54:  BRA    2D6C
2D56:  CLRF   16
2D58:  BTFSC  FF2.7
2D5A:  BSF    16.7
2D5C:  BCF    FF2.7
2D5E:  MOVLW  FF
2D60:  MOVWF  xA9
2D62:  CALL   0246
2D66:  BTFSC  16.7
2D68:  BSF    FF2.7
2D6A:  BRA    2D50
2D6C:  CLRF   16
2D6E:  BTFSC  FF2.7
2D70:  BSF    16.7
2D72:  BCF    FF2.7
2D74:  MOVFF  6C,A9
2D78:  CALL   0246
2D7C:  BTFSC  16.7
2D7E:  BSF    FF2.7
....................                              } 
....................                              else{ 
2D80:  BRA    2DF6
....................                              rb2=1; 
2D82:  BSF    F81.2
....................                              rb1=1; 
2D84:  BSF    F81.1
....................                              delay_ms(quantum); 
2D86:  MOVFF  6D,99
2D8A:  INCF   x99,F
2D8C:  DECF   x99,F
2D8E:  BTFSC  FD8.2
2D90:  BRA    2DA8
2D92:  CLRF   16
2D94:  BTFSC  FF2.7
2D96:  BSF    16.7
2D98:  BCF    FF2.7
2D9A:  MOVLW  FF
2D9C:  MOVWF  xA9
2D9E:  CALL   0246
2DA2:  BTFSC  16.7
2DA4:  BSF    FF2.7
2DA6:  BRA    2D8C
2DA8:  CLRF   16
2DAA:  BTFSC  FF2.7
2DAC:  BSF    16.7
2DAE:  BCF    FF2.7
2DB0:  MOVFF  6C,A9
2DB4:  CALL   0246
2DB8:  BTFSC  16.7
2DBA:  BSF    FF2.7
....................                              rb2=0; 
2DBC:  BCF    F81.2
....................                              rb1=0; 
2DBE:  BCF    F81.1
....................                              delay_ms(quantum); 
2DC0:  MOVFF  6D,99
2DC4:  INCF   x99,F
2DC6:  DECF   x99,F
2DC8:  BTFSC  FD8.2
2DCA:  BRA    2DE2
2DCC:  CLRF   16
2DCE:  BTFSC  FF2.7
2DD0:  BSF    16.7
2DD2:  BCF    FF2.7
2DD4:  MOVLW  FF
2DD6:  MOVWF  xA9
2DD8:  CALL   0246
2DDC:  BTFSC  16.7
2DDE:  BSF    FF2.7
2DE0:  BRA    2DC6
2DE2:  CLRF   16
2DE4:  BTFSC  FF2.7
2DE6:  BSF    16.7
2DE8:  BCF    FF2.7
2DEA:  MOVFF  6C,A9
2DEE:  CALL   0246
2DF2:  BTFSC  16.7
2DF4:  BSF    FF2.7
....................                              } 
....................                               
....................                          
....................                                                }                                              
....................                    else  { 
2DF6:  BRA    2E9C
2DF8:  CLRF   16
2DFA:  BTFSC  FF2.7
2DFC:  BSF    16.7
2DFE:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<time2){ 
2E00:  MOVFF  6D,A8
2E04:  MOVFF  6C,A7
2E08:  CLRF   xAA
2E0A:  MOVFF  1D,A9
2E0E:  CALL   026C
2E12:  BTFSC  16.7
2E14:  BSF    FF2.7
2E16:  MOVFF  02,9A
2E1A:  MOVFF  01,99
2E1E:  MOVF   02,W
2E20:  SUBWF  69,W
2E22:  BNC   2E9C
2E24:  BNZ   2E2C
2E26:  MOVF   68,W
2E28:  SUBWF  x99,W
2E2A:  BC    2E9C
....................                                rb2=1; 
2E2C:  BSF    F81.2
....................                                delay_ms(quantum); 
2E2E:  MOVFF  6D,99
2E32:  INCF   x99,F
2E34:  DECF   x99,F
2E36:  BTFSC  FD8.2
2E38:  BRA    2E50
2E3A:  CLRF   16
2E3C:  BTFSC  FF2.7
2E3E:  BSF    16.7
2E40:  BCF    FF2.7
2E42:  MOVLW  FF
2E44:  MOVWF  xA9
2E46:  CALL   0246
2E4A:  BTFSC  16.7
2E4C:  BSF    FF2.7
2E4E:  BRA    2E34
2E50:  CLRF   16
2E52:  BTFSC  FF2.7
2E54:  BSF    16.7
2E56:  BCF    FF2.7
2E58:  MOVFF  6C,A9
2E5C:  CALL   0246
2E60:  BTFSC  16.7
2E62:  BSF    FF2.7
....................                                rb2=0; 
2E64:  BCF    F81.2
....................                                delay_ms(quantum); 
2E66:  MOVFF  6D,99
2E6A:  INCF   x99,F
2E6C:  DECF   x99,F
2E6E:  BTFSC  FD8.2
2E70:  BRA    2E88
2E72:  CLRF   16
2E74:  BTFSC  FF2.7
2E76:  BSF    16.7
2E78:  BCF    FF2.7
2E7A:  MOVLW  FF
2E7C:  MOVWF  xA9
2E7E:  CALL   0246
2E82:  BTFSC  16.7
2E84:  BSF    FF2.7
2E86:  BRA    2E6C
2E88:  CLRF   16
2E8A:  BTFSC  FF2.7
2E8C:  BSF    16.7
2E8E:  BCF    FF2.7
2E90:  MOVFF  6C,A9
2E94:  CALL   0246
2E98:  BTFSC  16.7
2E9A:  BSF    FF2.7
....................                                                     }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1();                 
2E9C:  MOVF   1C,W
2E9E:  SUBLW  0A
2EA0:  BNZ   2EAC
2EA2:  MOVF   1F,W
2EA4:  SUBLW  09
2EA6:  BNC   2EAC
2EA8:  CALL   0FE0
....................                  if(contador2==16 ) do_proceso2(); 
2EAC:  MOVF   1D,W
2EAE:  SUBLW  10
2EB0:  BNZ   2EB6
2EB2:  CALL   1038
....................                  if(contador3==20 )do_proceso3(); 
2EB6:  MOVF   1E,W
2EB8:  SUBLW  14
2EBA:  BNZ   2EC0
2EBC:  CALL   1090
....................  
....................                   contador1++; 
2EC0:  INCF   1C,F
....................                   contador3++; 
2EC2:  INCF   1E,F
....................                  
....................               } // 
2EC4:  INCF   1D,F
2EC6:  BRA    2C90
....................           
....................           
....................                  } 
....................          }   
....................           
....................           
....................      }   
....................      //       
....................          else{ 
2EC8:  GOTO   3B8C
....................           
....................           if(tecla_pulsada=='2'){ 
2ECC:  MOVF   1A,W
2ECE:  SUBLW  32
2ED0:  BTFSS  FD8.2
2ED2:  GOTO   3B8C
....................                if(copia3<=4){// 
2ED6:  MOVF   21,W
2ED8:  SUBLW  04
2EDA:  BTFSS  FD8.0
2EDC:  BRA    358E
....................                for (contador3=1;contador3<=20;contador3++){ 
2EDE:  MOVLW  01
2EE0:  MOVWF  1E
2EE2:  MOVF   1E,W
2EE4:  SUBLW  14
2EE6:  BTFSS  FD8.0
2EE8:  BRA    3064
....................                     copia3=contador3; 
2EEA:  MOVFF  1E,21
2EEE:  CLRF   16
2EF0:  BTFSC  FF2.7
2EF2:  BSF    16.7
2EF4:  BCF    FF2.7
....................                     if(quantum*contador2<time2){ 
2EF6:  MOVFF  6D,A8
2EFA:  MOVFF  6C,A7
2EFE:  CLRF   xAA
2F00:  MOVFF  1D,A9
2F04:  CALL   026C
2F08:  BTFSC  16.7
2F0A:  BSF    FF2.7
2F0C:  MOVFF  02,9A
2F10:  MOVFF  01,99
2F14:  MOVF   02,W
2F16:  SUBWF  69,W
2F18:  BNC   2F98
2F1A:  BNZ   2F22
2F1C:  MOVF   68,W
2F1E:  SUBWF  x99,W
2F20:  BC    2F98
....................                       
....................                       rb3=1; 
2F22:  BSF    F81.3
....................                       rb2=1; 
2F24:  BSF    F81.2
....................                       delay_ms(quantum); 
2F26:  MOVFF  6D,99
2F2A:  INCF   x99,F
2F2C:  DECF   x99,F
2F2E:  BTFSC  FD8.2
2F30:  BRA    2F48
2F32:  CLRF   16
2F34:  BTFSC  FF2.7
2F36:  BSF    16.7
2F38:  BCF    FF2.7
2F3A:  MOVLW  FF
2F3C:  MOVWF  xA9
2F3E:  CALL   0246
2F42:  BTFSC  16.7
2F44:  BSF    FF2.7
2F46:  BRA    2F2C
2F48:  CLRF   16
2F4A:  BTFSC  FF2.7
2F4C:  BSF    16.7
2F4E:  BCF    FF2.7
2F50:  MOVFF  6C,A9
2F54:  CALL   0246
2F58:  BTFSC  16.7
2F5A:  BSF    FF2.7
....................                       rb3=0; 
2F5C:  BCF    F81.3
....................                       rb2=0; 
2F5E:  BCF    F81.2
....................                       
....................                       delay_ms(quantum); 
2F60:  MOVFF  6D,99
2F64:  INCF   x99,F
2F66:  DECF   x99,F
2F68:  BTFSC  FD8.2
2F6A:  BRA    2F82
2F6C:  CLRF   16
2F6E:  BTFSC  FF2.7
2F70:  BSF    16.7
2F72:  BCF    FF2.7
2F74:  MOVLW  FF
2F76:  MOVWF  xA9
2F78:  CALL   0246
2F7C:  BTFSC  16.7
2F7E:  BSF    FF2.7
2F80:  BRA    2F66
2F82:  CLRF   16
2F84:  BTFSC  FF2.7
2F86:  BSF    16.7
2F88:  BCF    FF2.7
2F8A:  MOVFF  6C,A9
2F8E:  CALL   0246
2F92:  BTFSC  16.7
2F94:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
2F96:  BRA    303C
2F98:  CLRF   16
2F9A:  BTFSC  FF2.7
2F9C:  BSF    16.7
2F9E:  BCF    FF2.7
....................                     
....................                           if(quantum*contador3<=time3){ 
2FA0:  MOVFF  6D,A8
2FA4:  MOVFF  6C,A7
2FA8:  CLRF   xAA
2FAA:  MOVFF  1E,A9
2FAE:  CALL   026C
2FB2:  BTFSC  16.7
2FB4:  BSF    FF2.7
2FB6:  MOVFF  02,9A
2FBA:  MOVFF  01,99
2FBE:  MOVF   02,W
2FC0:  SUBWF  6B,W
2FC2:  BNC   303C
2FC4:  BNZ   2FCC
2FC6:  MOVF   x99,W
2FC8:  SUBWF  6A,W
2FCA:  BNC   303C
....................                                 
....................                                rb3=1; 
2FCC:  BSF    F81.3
....................                                delay_ms(quantum); 
2FCE:  MOVFF  6D,99
2FD2:  INCF   x99,F
2FD4:  DECF   x99,F
2FD6:  BTFSC  FD8.2
2FD8:  BRA    2FF0
2FDA:  CLRF   16
2FDC:  BTFSC  FF2.7
2FDE:  BSF    16.7
2FE0:  BCF    FF2.7
2FE2:  MOVLW  FF
2FE4:  MOVWF  xA9
2FE6:  CALL   0246
2FEA:  BTFSC  16.7
2FEC:  BSF    FF2.7
2FEE:  BRA    2FD4
2FF0:  CLRF   16
2FF2:  BTFSC  FF2.7
2FF4:  BSF    16.7
2FF6:  BCF    FF2.7
2FF8:  MOVFF  6C,A9
2FFC:  CALL   0246
3000:  BTFSC  16.7
3002:  BSF    FF2.7
....................                                rb3=0; 
3004:  BCF    F81.3
....................                                delay_ms(quantum); 
3006:  MOVFF  6D,99
300A:  INCF   x99,F
300C:  DECF   x99,F
300E:  BTFSC  FD8.2
3010:  BRA    3028
3012:  CLRF   16
3014:  BTFSC  FF2.7
3016:  BSF    16.7
3018:  BCF    FF2.7
301A:  MOVLW  FF
301C:  MOVWF  xA9
301E:  CALL   0246
3022:  BTFSC  16.7
3024:  BSF    FF2.7
3026:  BRA    300C
3028:  CLRF   16
302A:  BTFSC  FF2.7
302C:  BSF    16.7
302E:  BCF    FF2.7
3030:  MOVFF  6C,A9
3034:  CALL   0246
3038:  BTFSC  16.7
303A:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
303C:  MOVF   1D,W
303E:  SUBLW  10
3040:  BNZ   304C
3042:  MOVF   20,W
3044:  SUBLW  0F
3046:  BNC   304C
3048:  CALL   1038
....................                  if(contador3==20 )do_proceso3(); 
304C:  MOVF   1E,W
304E:  SUBLW  14
3050:  BNZ   3056
3052:  CALL   1090
....................                   
....................                  if(tecla_pulsada=='1'){ 
3056:  MOVF   1A,W
3058:  SUBLW  31
305A:  BNZ   305E
....................                       break; 
305C:  BRA    3064
....................                   } 
....................                   contador2++; 
305E:  INCF   1D,F
....................  
....................                  } 
3060:  INCF   1E,F
3062:  BRA    2EE2
....................                  if(tecla_pulsada=='1'){ 
3064:  MOVF   1A,W
3066:  SUBLW  31
3068:  BTFSS  FD8.2
306A:  BRA    358C
....................                          if(copia3<=10){ 
306C:  MOVF   21,W
306E:  SUBLW  0A
3070:  BTFSS  FD8.0
3072:  BRA    3356
....................                          for (contador3=copia3;contador3<=20;contador3++){ 
3074:  MOVFF  21,1E
3078:  MOVF   1E,W
307A:  SUBLW  14
307C:  BTFSS  FD8.0
307E:  BRA    3354
....................                               copia3=contador3; 
3080:  MOVFF  1E,21
3084:  CLRF   16
3086:  BTFSC  FF2.7
3088:  BSF    16.7
308A:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
308C:  MOVFF  6D,A8
3090:  MOVFF  6C,A7
3094:  CLRF   xAA
3096:  MOVFF  1C,A9
309A:  CALL   026C
309E:  BTFSC  16.7
30A0:  BSF    FF2.7
30A2:  MOVFF  02,9A
30A6:  MOVFF  01,99
30AA:  MOVF   02,W
30AC:  SUBWF  67,W
30AE:  BTFSS  FD8.0
30B0:  BRA    31E0
30B2:  BNZ   30BC
30B4:  MOVF   x99,W
30B6:  SUBWF  66,W
30B8:  BTFSS  FD8.0
30BA:  BRA    31E0
30BC:  CLRF   16
30BE:  BTFSC  FF2.7
30C0:  BSF    16.7
30C2:  BCF    FF2.7
....................                     if(quantum*contador2<=time2){ 
30C4:  MOVFF  6D,A8
30C8:  MOVFF  6C,A7
30CC:  CLRF   xAA
30CE:  MOVFF  1D,A9
30D2:  CALL   026C
30D6:  BTFSC  16.7
30D8:  BSF    FF2.7
30DA:  MOVFF  02,9A
30DE:  MOVFF  01,99
30E2:  MOVF   02,W
30E4:  SUBWF  69,W
30E6:  BNC   316A
30E8:  BNZ   30F0
30EA:  MOVF   x99,W
30EC:  SUBWF  68,W
30EE:  BNC   316A
....................                              rb2=1; 
30F0:  BSF    F81.2
....................                              rb3=1; 
30F2:  BSF    F81.3
....................                              rb1=1; 
30F4:  BSF    F81.1
....................                              delay_ms(quantum); 
30F6:  MOVFF  6D,99
30FA:  INCF   x99,F
30FC:  DECF   x99,F
30FE:  BTFSC  FD8.2
3100:  BRA    3118
3102:  CLRF   16
3104:  BTFSC  FF2.7
3106:  BSF    16.7
3108:  BCF    FF2.7
310A:  MOVLW  FF
310C:  MOVWF  xA9
310E:  CALL   0246
3112:  BTFSC  16.7
3114:  BSF    FF2.7
3116:  BRA    30FC
3118:  CLRF   16
311A:  BTFSC  FF2.7
311C:  BSF    16.7
311E:  BCF    FF2.7
3120:  MOVFF  6C,A9
3124:  CALL   0246
3128:  BTFSC  16.7
312A:  BSF    FF2.7
....................                              rb2=0; 
312C:  BCF    F81.2
....................                              rb3=0; 
312E:  BCF    F81.3
....................                              rb1=0; 
3130:  BCF    F81.1
....................                              delay_ms(quantum); 
3132:  MOVFF  6D,99
3136:  INCF   x99,F
3138:  DECF   x99,F
313A:  BTFSC  FD8.2
313C:  BRA    3154
313E:  CLRF   16
3140:  BTFSC  FF2.7
3142:  BSF    16.7
3144:  BCF    FF2.7
3146:  MOVLW  FF
3148:  MOVWF  xA9
314A:  CALL   0246
314E:  BTFSC  16.7
3150:  BSF    FF2.7
3152:  BRA    3138
3154:  CLRF   16
3156:  BTFSC  FF2.7
3158:  BSF    16.7
315A:  BCF    FF2.7
315C:  MOVFF  6C,A9
3160:  CALL   0246
3164:  BTFSC  16.7
3166:  BSF    FF2.7
....................                     } 
....................                     else{   
3168:  BRA    31DE
....................                              rb3=1; 
316A:  BSF    F81.3
....................                              rb1=1; 
316C:  BSF    F81.1
....................                              delay_ms(quantum); 
316E:  MOVFF  6D,99
3172:  INCF   x99,F
3174:  DECF   x99,F
3176:  BTFSC  FD8.2
3178:  BRA    3190
317A:  CLRF   16
317C:  BTFSC  FF2.7
317E:  BSF    16.7
3180:  BCF    FF2.7
3182:  MOVLW  FF
3184:  MOVWF  xA9
3186:  CALL   0246
318A:  BTFSC  16.7
318C:  BSF    FF2.7
318E:  BRA    3174
3190:  CLRF   16
3192:  BTFSC  FF2.7
3194:  BSF    16.7
3196:  BCF    FF2.7
3198:  MOVFF  6C,A9
319C:  CALL   0246
31A0:  BTFSC  16.7
31A2:  BSF    FF2.7
....................                              rb3=0; 
31A4:  BCF    F81.3
....................                              rb1=0; 
31A6:  BCF    F81.1
....................                              delay_ms(quantum); 
31A8:  MOVFF  6D,99
31AC:  INCF   x99,F
31AE:  DECF   x99,F
31B0:  BTFSC  FD8.2
31B2:  BRA    31CA
31B4:  CLRF   16
31B6:  BTFSC  FF2.7
31B8:  BSF    16.7
31BA:  BCF    FF2.7
31BC:  MOVLW  FF
31BE:  MOVWF  xA9
31C0:  CALL   0246
31C4:  BTFSC  16.7
31C6:  BSF    FF2.7
31C8:  BRA    31AE
31CA:  CLRF   16
31CC:  BTFSC  FF2.7
31CE:  BSF    16.7
31D0:  BCF    FF2.7
31D2:  MOVFF  6C,A9
31D6:  CALL   0246
31DA:  BTFSC  16.7
31DC:  BSF    FF2.7
....................                     } 
....................                                                } 
....................                                                 
....................                    else  { 
31DE:  BRA    332E
31E0:  CLRF   16
31E2:  BTFSC  FF2.7
31E4:  BSF    16.7
31E6:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<=time2){ 
31E8:  MOVFF  6D,A8
31EC:  MOVFF  6C,A7
31F0:  CLRF   xAA
31F2:  MOVFF  1D,A9
31F6:  CALL   026C
31FA:  BTFSC  16.7
31FC:  BSF    FF2.7
31FE:  MOVFF  02,9A
3202:  MOVFF  01,99
3206:  MOVF   02,W
3208:  SUBWF  69,W
320A:  BNC   328A
320C:  BNZ   3214
320E:  MOVF   x99,W
3210:  SUBWF  68,W
3212:  BNC   328A
....................                                rb2=1; 
3214:  BSF    F81.2
....................                                rb3=1; 
3216:  BSF    F81.3
....................                                delay_ms(quantum); 
3218:  MOVFF  6D,99
321C:  INCF   x99,F
321E:  DECF   x99,F
3220:  BTFSC  FD8.2
3222:  BRA    323A
3224:  CLRF   16
3226:  BTFSC  FF2.7
3228:  BSF    16.7
322A:  BCF    FF2.7
322C:  MOVLW  FF
322E:  MOVWF  xA9
3230:  CALL   0246
3234:  BTFSC  16.7
3236:  BSF    FF2.7
3238:  BRA    321E
323A:  CLRF   16
323C:  BTFSC  FF2.7
323E:  BSF    16.7
3240:  BCF    FF2.7
3242:  MOVFF  6C,A9
3246:  CALL   0246
324A:  BTFSC  16.7
324C:  BSF    FF2.7
....................                                rb2=0; 
324E:  BCF    F81.2
....................                                rb3=0; 
3250:  BCF    F81.3
....................                                delay_ms(quantum); 
3252:  MOVFF  6D,99
3256:  INCF   x99,F
3258:  DECF   x99,F
325A:  BTFSC  FD8.2
325C:  BRA    3274
325E:  CLRF   16
3260:  BTFSC  FF2.7
3262:  BSF    16.7
3264:  BCF    FF2.7
3266:  MOVLW  FF
3268:  MOVWF  xA9
326A:  CALL   0246
326E:  BTFSC  16.7
3270:  BSF    FF2.7
3272:  BRA    3258
3274:  CLRF   16
3276:  BTFSC  FF2.7
3278:  BSF    16.7
327A:  BCF    FF2.7
327C:  MOVFF  6C,A9
3280:  CALL   0246
3284:  BTFSC  16.7
3286:  BSF    FF2.7
....................                                                      }  
....................                              else{ 
3288:  BRA    332E
328A:  CLRF   16
328C:  BTFSC  FF2.7
328E:  BSF    16.7
3290:  BCF    FF2.7
....................                                         if(quantum*contador3<=time3){ 
3292:  MOVFF  6D,A8
3296:  MOVFF  6C,A7
329A:  CLRF   xAA
329C:  MOVFF  1E,A9
32A0:  CALL   026C
32A4:  BTFSC  16.7
32A6:  BSF    FF2.7
32A8:  MOVFF  02,9A
32AC:  MOVFF  01,99
32B0:  MOVF   02,W
32B2:  SUBWF  6B,W
32B4:  BNC   332E
32B6:  BNZ   32BE
32B8:  MOVF   x99,W
32BA:  SUBWF  6A,W
32BC:  BNC   332E
....................                                rb3=1; 
32BE:  BSF    F81.3
....................                                delay_ms(quantum); 
32C0:  MOVFF  6D,99
32C4:  INCF   x99,F
32C6:  DECF   x99,F
32C8:  BTFSC  FD8.2
32CA:  BRA    32E2
32CC:  CLRF   16
32CE:  BTFSC  FF2.7
32D0:  BSF    16.7
32D2:  BCF    FF2.7
32D4:  MOVLW  FF
32D6:  MOVWF  xA9
32D8:  CALL   0246
32DC:  BTFSC  16.7
32DE:  BSF    FF2.7
32E0:  BRA    32C6
32E2:  CLRF   16
32E4:  BTFSC  FF2.7
32E6:  BSF    16.7
32E8:  BCF    FF2.7
32EA:  MOVFF  6C,A9
32EE:  CALL   0246
32F2:  BTFSC  16.7
32F4:  BSF    FF2.7
....................                                rb3=0; 
32F6:  BCF    F81.3
....................                                
....................                                delay_ms(quantum); 
32F8:  MOVFF  6D,99
32FC:  INCF   x99,F
32FE:  DECF   x99,F
3300:  BTFSC  FD8.2
3302:  BRA    331A
3304:  CLRF   16
3306:  BTFSC  FF2.7
3308:  BSF    16.7
330A:  BCF    FF2.7
330C:  MOVLW  FF
330E:  MOVWF  xA9
3310:  CALL   0246
3314:  BTFSC  16.7
3316:  BSF    FF2.7
3318:  BRA    32FE
331A:  CLRF   16
331C:  BTFSC  FF2.7
331E:  BSF    16.7
3320:  BCF    FF2.7
3322:  MOVFF  6C,A9
3326:  CALL   0246
332A:  BTFSC  16.7
332C:  BSF    FF2.7
....................                                                      }                
....................                                                       
....................                                                      } 
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
332E:  MOVF   1C,W
3330:  SUBLW  0A
3332:  BNZ   3338
3334:  CALL   0FE0
....................                  if(contador3==20 )do_proceso3(); 
3338:  MOVF   1E,W
333A:  SUBLW  14
333C:  BNZ   3342
333E:  CALL   1090
....................                  if(contador2==16 )do_proceso2(); 
3342:  MOVF   1D,W
3344:  SUBLW  10
3346:  BNZ   334C
3348:  CALL   1038
....................                   contador1++; 
334C:  INCF   1C,F
....................                   contador2++; 
334E:  INCF   1D,F
....................  
....................                          }///// 
3350:  INCF   1E,F
3352:  BRA    3078
....................                      } 
....................                  /// 
....................                  else  {/////////////// 
3354:  BRA    358C
....................                         for (contador1=copia1;contador1<=10;contador1++){ 
3356:  MOVFF  1F,1C
335A:  MOVF   1C,W
335C:  SUBLW  0A
335E:  BTFSS  FD8.0
3360:  BRA    358C
....................                       copia1=contador1; 
3362:  MOVFF  1C,1F
3366:  CLRF   16
3368:  BTFSC  FF2.7
336A:  BSF    16.7
336C:  BCF    FF2.7
....................                     if(quantum*contador2<=time2){ 
336E:  MOVFF  6D,A8
3372:  MOVFF  6C,A7
3376:  CLRF   xAA
3378:  MOVFF  1D,A9
337C:  CALL   026C
3380:  BTFSC  16.7
3382:  BSF    FF2.7
3384:  MOVFF  02,9A
3388:  MOVFF  01,99
338C:  MOVF   02,W
338E:  SUBWF  69,W
3390:  BTFSS  FD8.0
3392:  BRA    34C2
3394:  BNZ   339E
3396:  MOVF   x99,W
3398:  SUBWF  68,W
339A:  BTFSS  FD8.0
339C:  BRA    34C2
339E:  CLRF   16
33A0:  BTFSC  FF2.7
33A2:  BSF    16.7
33A4:  BCF    FF2.7
....................                     if(quantum*contador3<=time3){ 
33A6:  MOVFF  6D,A8
33AA:  MOVFF  6C,A7
33AE:  CLRF   xAA
33B0:  MOVFF  1E,A9
33B4:  CALL   026C
33B8:  BTFSC  16.7
33BA:  BSF    FF2.7
33BC:  MOVFF  02,9A
33C0:  MOVFF  01,99
33C4:  MOVF   02,W
33C6:  SUBWF  6B,W
33C8:  BNC   344C
33CA:  BNZ   33D2
33CC:  MOVF   x99,W
33CE:  SUBWF  6A,W
33D0:  BNC   344C
....................                              rb2=1; 
33D2:  BSF    F81.2
....................                              rb3=1; 
33D4:  BSF    F81.3
....................                              rb1=1; 
33D6:  BSF    F81.1
....................                              delay_ms(quantum); 
33D8:  MOVFF  6D,99
33DC:  INCF   x99,F
33DE:  DECF   x99,F
33E0:  BTFSC  FD8.2
33E2:  BRA    33FA
33E4:  CLRF   16
33E6:  BTFSC  FF2.7
33E8:  BSF    16.7
33EA:  BCF    FF2.7
33EC:  MOVLW  FF
33EE:  MOVWF  xA9
33F0:  CALL   0246
33F4:  BTFSC  16.7
33F6:  BSF    FF2.7
33F8:  BRA    33DE
33FA:  CLRF   16
33FC:  BTFSC  FF2.7
33FE:  BSF    16.7
3400:  BCF    FF2.7
3402:  MOVFF  6C,A9
3406:  CALL   0246
340A:  BTFSC  16.7
340C:  BSF    FF2.7
....................                              rb2=0; 
340E:  BCF    F81.2
....................                              rb3=0; 
3410:  BCF    F81.3
....................                              rb1=0; 
3412:  BCF    F81.1
....................                              delay_ms(quantum); 
3414:  MOVFF  6D,99
3418:  INCF   x99,F
341A:  DECF   x99,F
341C:  BTFSC  FD8.2
341E:  BRA    3436
3420:  CLRF   16
3422:  BTFSC  FF2.7
3424:  BSF    16.7
3426:  BCF    FF2.7
3428:  MOVLW  FF
342A:  MOVWF  xA9
342C:  CALL   0246
3430:  BTFSC  16.7
3432:  BSF    FF2.7
3434:  BRA    341A
3436:  CLRF   16
3438:  BTFSC  FF2.7
343A:  BSF    16.7
343C:  BCF    FF2.7
343E:  MOVFF  6C,A9
3442:  CALL   0246
3446:  BTFSC  16.7
3448:  BSF    FF2.7
....................                     } 
....................                     else{    
344A:  BRA    34C0
....................                              rb2=1; 
344C:  BSF    F81.2
....................                              rb1=1; 
344E:  BSF    F81.1
....................                              delay_ms(quantum); 
3450:  MOVFF  6D,99
3454:  INCF   x99,F
3456:  DECF   x99,F
3458:  BTFSC  FD8.2
345A:  BRA    3472
345C:  CLRF   16
345E:  BTFSC  FF2.7
3460:  BSF    16.7
3462:  BCF    FF2.7
3464:  MOVLW  FF
3466:  MOVWF  xA9
3468:  CALL   0246
346C:  BTFSC  16.7
346E:  BSF    FF2.7
3470:  BRA    3456
3472:  CLRF   16
3474:  BTFSC  FF2.7
3476:  BSF    16.7
3478:  BCF    FF2.7
347A:  MOVFF  6C,A9
347E:  CALL   0246
3482:  BTFSC  16.7
3484:  BSF    FF2.7
....................                              rb2=0; 
3486:  BCF    F81.2
....................                              rb1=0; 
3488:  BCF    F81.1
....................                              delay_ms(quantum); 
348A:  MOVFF  6D,99
348E:  INCF   x99,F
3490:  DECF   x99,F
3492:  BTFSC  FD8.2
3494:  BRA    34AC
3496:  CLRF   16
3498:  BTFSC  FF2.7
349A:  BSF    16.7
349C:  BCF    FF2.7
349E:  MOVLW  FF
34A0:  MOVWF  xA9
34A2:  CALL   0246
34A6:  BTFSC  16.7
34A8:  BSF    FF2.7
34AA:  BRA    3490
34AC:  CLRF   16
34AE:  BTFSC  FF2.7
34B0:  BSF    16.7
34B2:  BCF    FF2.7
34B4:  MOVFF  6C,A9
34B8:  CALL   0246
34BC:  BTFSC  16.7
34BE:  BSF    FF2.7
....................                     } 
....................                                                } 
....................                                                 
....................                    else  {       if(quantum*contador1<=time1){  
34C0:  BRA    3566
34C2:  CLRF   16
34C4:  BTFSC  FF2.7
34C6:  BSF    16.7
34C8:  BCF    FF2.7
34CA:  MOVFF  6D,A8
34CE:  MOVFF  6C,A7
34D2:  CLRF   xAA
34D4:  MOVFF  1C,A9
34D8:  CALL   026C
34DC:  BTFSC  16.7
34DE:  BSF    FF2.7
34E0:  MOVFF  02,9A
34E4:  MOVFF  01,99
34E8:  MOVF   02,W
34EA:  SUBWF  67,W
34EC:  BNC   3566
34EE:  BNZ   34F6
34F0:  MOVF   x99,W
34F2:  SUBWF  66,W
34F4:  BNC   3566
....................                                rb1=1; 
34F6:  BSF    F81.1
....................                                delay_ms(quantum); 
34F8:  MOVFF  6D,99
34FC:  INCF   x99,F
34FE:  DECF   x99,F
3500:  BTFSC  FD8.2
3502:  BRA    351A
3504:  CLRF   16
3506:  BTFSC  FF2.7
3508:  BSF    16.7
350A:  BCF    FF2.7
350C:  MOVLW  FF
350E:  MOVWF  xA9
3510:  CALL   0246
3514:  BTFSC  16.7
3516:  BSF    FF2.7
3518:  BRA    34FE
351A:  CLRF   16
351C:  BTFSC  FF2.7
351E:  BSF    16.7
3520:  BCF    FF2.7
3522:  MOVFF  6C,A9
3526:  CALL   0246
352A:  BTFSC  16.7
352C:  BSF    FF2.7
....................                                rb1=0;                            
352E:  BCF    F81.1
....................                                delay_ms(quantum);  }     
3530:  MOVFF  6D,99
3534:  INCF   x99,F
3536:  DECF   x99,F
3538:  BTFSC  FD8.2
353A:  BRA    3552
353C:  CLRF   16
353E:  BTFSC  FF2.7
3540:  BSF    16.7
3542:  BCF    FF2.7
3544:  MOVLW  FF
3546:  MOVWF  xA9
3548:  CALL   0246
354C:  BTFSC  16.7
354E:  BSF    FF2.7
3550:  BRA    3536
3552:  CLRF   16
3554:  BTFSC  FF2.7
3556:  BSF    16.7
3558:  BCF    FF2.7
355A:  MOVFF  6C,A9
355E:  CALL   0246
3562:  BTFSC  16.7
3564:  BSF    FF2.7
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
3566:  MOVF   1C,W
3568:  SUBLW  0A
356A:  BNZ   3570
356C:  CALL   0FE0
....................                  if(contador3==20 )do_proceso3(); 
3570:  MOVF   1E,W
3572:  SUBLW  14
3574:  BNZ   357A
3576:  CALL   1090
....................                  if(contador2==16 )do_proceso2(); 
357A:  MOVF   1D,W
357C:  SUBLW  10
357E:  BNZ   3584
3580:  CALL   1038
....................                   contador3++; 
3584:  INCF   1E,F
....................                   contador2++; 
3586:  INCF   1D,F
....................  
....................                          }///// 
3588:  INCF   1C,F
358A:  BRA    335A
....................                   
....................                   
....................                  } 
....................                           
....................                          
....................                   
....................                                        } 
....................                } ///// 
....................                 
....................                /// 
....................                else{////////////////////////////kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk 
358C:  BRA    3B8C
....................                     for (contador2=1;contador2<=16;contador2++){ 
358E:  MOVLW  01
3590:  MOVWF  1D
3592:  MOVF   1D,W
3594:  SUBLW  10
3596:  BTFSS  FD8.0
3598:  BRA    370E
....................                     copia2=contador2; 
359A:  MOVFF  1D,20
359E:  CLRF   16
35A0:  BTFSC  FF2.7
35A2:  BSF    16.7
35A4:  BCF    FF2.7
....................                     if(quantum*contador3<time3){ 
35A6:  MOVFF  6D,A8
35AA:  MOVFF  6C,A7
35AE:  CLRF   xAA
35B0:  MOVFF  1E,A9
35B4:  CALL   026C
35B8:  BTFSC  16.7
35BA:  BSF    FF2.7
35BC:  MOVFF  02,9A
35C0:  MOVFF  01,99
35C4:  MOVF   02,W
35C6:  SUBWF  6B,W
35C8:  BNC   3648
35CA:  BNZ   35D2
35CC:  MOVF   6A,W
35CE:  SUBWF  x99,W
35D0:  BC    3648
....................                       
....................                       rb3=1; 
35D2:  BSF    F81.3
....................                       rb2=1; 
35D4:  BSF    F81.2
....................                       delay_ms(quantum); 
35D6:  MOVFF  6D,99
35DA:  INCF   x99,F
35DC:  DECF   x99,F
35DE:  BTFSC  FD8.2
35E0:  BRA    35F8
35E2:  CLRF   16
35E4:  BTFSC  FF2.7
35E6:  BSF    16.7
35E8:  BCF    FF2.7
35EA:  MOVLW  FF
35EC:  MOVWF  xA9
35EE:  CALL   0246
35F2:  BTFSC  16.7
35F4:  BSF    FF2.7
35F6:  BRA    35DC
35F8:  CLRF   16
35FA:  BTFSC  FF2.7
35FC:  BSF    16.7
35FE:  BCF    FF2.7
3600:  MOVFF  6C,A9
3604:  CALL   0246
3608:  BTFSC  16.7
360A:  BSF    FF2.7
....................                       rb3=0; 
360C:  BCF    F81.3
....................                       rb2=0; 
360E:  BCF    F81.2
....................                       
....................                       delay_ms(quantum); 
3610:  MOVFF  6D,99
3614:  INCF   x99,F
3616:  DECF   x99,F
3618:  BTFSC  FD8.2
361A:  BRA    3632
361C:  CLRF   16
361E:  BTFSC  FF2.7
3620:  BSF    16.7
3622:  BCF    FF2.7
3624:  MOVLW  FF
3626:  MOVWF  xA9
3628:  CALL   0246
362C:  BTFSC  16.7
362E:  BSF    FF2.7
3630:  BRA    3616
3632:  CLRF   16
3634:  BTFSC  FF2.7
3636:  BSF    16.7
3638:  BCF    FF2.7
363A:  MOVFF  6C,A9
363E:  CALL   0246
3642:  BTFSC  16.7
3644:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
3646:  BRA    36EC
3648:  CLRF   16
364A:  BTFSC  FF2.7
364C:  BSF    16.7
364E:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<=time2){ 
3650:  MOVFF  6D,A8
3654:  MOVFF  6C,A7
3658:  CLRF   xAA
365A:  MOVFF  1D,A9
365E:  CALL   026C
3662:  BTFSC  16.7
3664:  BSF    FF2.7
3666:  MOVFF  02,9A
366A:  MOVFF  01,99
366E:  MOVF   02,W
3670:  SUBWF  69,W
3672:  BNC   36EC
3674:  BNZ   367C
3676:  MOVF   x99,W
3678:  SUBWF  68,W
367A:  BNC   36EC
....................                                 
....................                                rb2=1; 
367C:  BSF    F81.2
....................                                delay_ms(quantum); 
367E:  MOVFF  6D,99
3682:  INCF   x99,F
3684:  DECF   x99,F
3686:  BTFSC  FD8.2
3688:  BRA    36A0
368A:  CLRF   16
368C:  BTFSC  FF2.7
368E:  BSF    16.7
3690:  BCF    FF2.7
3692:  MOVLW  FF
3694:  MOVWF  xA9
3696:  CALL   0246
369A:  BTFSC  16.7
369C:  BSF    FF2.7
369E:  BRA    3684
36A0:  CLRF   16
36A2:  BTFSC  FF2.7
36A4:  BSF    16.7
36A6:  BCF    FF2.7
36A8:  MOVFF  6C,A9
36AC:  CALL   0246
36B0:  BTFSC  16.7
36B2:  BSF    FF2.7
....................                                rb2=0; 
36B4:  BCF    F81.2
....................                                delay_ms(quantum); 
36B6:  MOVFF  6D,99
36BA:  INCF   x99,F
36BC:  DECF   x99,F
36BE:  BTFSC  FD8.2
36C0:  BRA    36D8
36C2:  CLRF   16
36C4:  BTFSC  FF2.7
36C6:  BSF    16.7
36C8:  BCF    FF2.7
36CA:  MOVLW  FF
36CC:  MOVWF  xA9
36CE:  CALL   0246
36D2:  BTFSC  16.7
36D4:  BSF    FF2.7
36D6:  BRA    36BC
36D8:  CLRF   16
36DA:  BTFSC  FF2.7
36DC:  BSF    16.7
36DE:  BCF    FF2.7
36E0:  MOVFF  6C,A9
36E4:  CALL   0246
36E8:  BTFSC  16.7
36EA:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador2==16 ) do_proceso2(); 
36EC:  MOVF   1D,W
36EE:  SUBLW  10
36F0:  BNZ   36F6
36F2:  CALL   1038
....................                  if(contador3==20 )do_proceso3(); 
36F6:  MOVF   1E,W
36F8:  SUBLW  14
36FA:  BNZ   3700
36FC:  CALL   1090
....................                   
....................                  if(tecla_pulsada=='1'){ 
3700:  MOVF   1A,W
3702:  SUBLW  31
3704:  BNZ   3708
....................                       break; 
3706:  BRA    370E
....................                   } 
....................                   contador3++; 
3708:  INCF   1E,F
....................  
....................                  } 
370A:  INCF   1D,F
370C:  BRA    3592
....................                  if(tecla_pulsada=='1'){ 
370E:  MOVF   1A,W
3710:  SUBLW  31
3712:  BTFSS  FD8.2
3714:  BRA    3B8C
....................                          if(copia3<=10){ 
3716:  MOVF   21,W
3718:  SUBLW  0A
371A:  BTFSS  FD8.0
371C:  BRA    3956
....................                          for (contador2=copia2;contador2<=16;contador2++){ 
371E:  MOVFF  20,1D
3722:  MOVF   1D,W
3724:  SUBLW  10
3726:  BTFSS  FD8.0
3728:  BRA    3954
....................                               copia2=contador2; 
372A:  MOVFF  1D,20
372E:  CLRF   16
3730:  BTFSC  FF2.7
3732:  BSF    16.7
3734:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
3736:  MOVFF  6D,A8
373A:  MOVFF  6C,A7
373E:  CLRF   xAA
3740:  MOVFF  1C,A9
3744:  CALL   026C
3748:  BTFSC  16.7
374A:  BSF    FF2.7
374C:  MOVFF  02,9A
3750:  MOVFF  01,99
3754:  MOVF   02,W
3756:  SUBWF  67,W
3758:  BTFSS  FD8.0
375A:  BRA    388A
375C:  BNZ   3766
375E:  MOVF   x99,W
3760:  SUBWF  66,W
3762:  BTFSS  FD8.0
3764:  BRA    388A
3766:  CLRF   16
3768:  BTFSC  FF2.7
376A:  BSF    16.7
376C:  BCF    FF2.7
....................                     if(quantum*contador3<=time3){ 
376E:  MOVFF  6D,A8
3772:  MOVFF  6C,A7
3776:  CLRF   xAA
3778:  MOVFF  1E,A9
377C:  CALL   026C
3780:  BTFSC  16.7
3782:  BSF    FF2.7
3784:  MOVFF  02,9A
3788:  MOVFF  01,99
378C:  MOVF   02,W
378E:  SUBWF  6B,W
3790:  BNC   3814
3792:  BNZ   379A
3794:  MOVF   x99,W
3796:  SUBWF  6A,W
3798:  BNC   3814
....................                              rb2=1; 
379A:  BSF    F81.2
....................                              rb3=1; 
379C:  BSF    F81.3
....................                              rb1=1; 
379E:  BSF    F81.1
....................                              delay_ms(quantum); 
37A0:  MOVFF  6D,99
37A4:  INCF   x99,F
37A6:  DECF   x99,F
37A8:  BTFSC  FD8.2
37AA:  BRA    37C2
37AC:  CLRF   16
37AE:  BTFSC  FF2.7
37B0:  BSF    16.7
37B2:  BCF    FF2.7
37B4:  MOVLW  FF
37B6:  MOVWF  xA9
37B8:  CALL   0246
37BC:  BTFSC  16.7
37BE:  BSF    FF2.7
37C0:  BRA    37A6
37C2:  CLRF   16
37C4:  BTFSC  FF2.7
37C6:  BSF    16.7
37C8:  BCF    FF2.7
37CA:  MOVFF  6C,A9
37CE:  CALL   0246
37D2:  BTFSC  16.7
37D4:  BSF    FF2.7
....................                              rb2=0; 
37D6:  BCF    F81.2
....................                              rb3=0; 
37D8:  BCF    F81.3
....................                              rb1=0; 
37DA:  BCF    F81.1
....................                              delay_ms(quantum); 
37DC:  MOVFF  6D,99
37E0:  INCF   x99,F
37E2:  DECF   x99,F
37E4:  BTFSC  FD8.2
37E6:  BRA    37FE
37E8:  CLRF   16
37EA:  BTFSC  FF2.7
37EC:  BSF    16.7
37EE:  BCF    FF2.7
37F0:  MOVLW  FF
37F2:  MOVWF  xA9
37F4:  CALL   0246
37F8:  BTFSC  16.7
37FA:  BSF    FF2.7
37FC:  BRA    37E2
37FE:  CLRF   16
3800:  BTFSC  FF2.7
3802:  BSF    16.7
3804:  BCF    FF2.7
3806:  MOVFF  6C,A9
380A:  CALL   0246
380E:  BTFSC  16.7
3810:  BSF    FF2.7
....................                     } 
....................                     else{   
3812:  BRA    3888
....................                              rb2=1; 
3814:  BSF    F81.2
....................                              rb1=1; 
3816:  BSF    F81.1
....................                              delay_ms(quantum); 
3818:  MOVFF  6D,99
381C:  INCF   x99,F
381E:  DECF   x99,F
3820:  BTFSC  FD8.2
3822:  BRA    383A
3824:  CLRF   16
3826:  BTFSC  FF2.7
3828:  BSF    16.7
382A:  BCF    FF2.7
382C:  MOVLW  FF
382E:  MOVWF  xA9
3830:  CALL   0246
3834:  BTFSC  16.7
3836:  BSF    FF2.7
3838:  BRA    381E
383A:  CLRF   16
383C:  BTFSC  FF2.7
383E:  BSF    16.7
3840:  BCF    FF2.7
3842:  MOVFF  6C,A9
3846:  CALL   0246
384A:  BTFSC  16.7
384C:  BSF    FF2.7
....................                              rb2=0; 
384E:  BCF    F81.2
....................                              rb1=0; 
3850:  BCF    F81.1
....................                              delay_ms(quantum); 
3852:  MOVFF  6D,99
3856:  INCF   x99,F
3858:  DECF   x99,F
385A:  BTFSC  FD8.2
385C:  BRA    3874
385E:  CLRF   16
3860:  BTFSC  FF2.7
3862:  BSF    16.7
3864:  BCF    FF2.7
3866:  MOVLW  FF
3868:  MOVWF  xA9
386A:  CALL   0246
386E:  BTFSC  16.7
3870:  BSF    FF2.7
3872:  BRA    3858
3874:  CLRF   16
3876:  BTFSC  FF2.7
3878:  BSF    16.7
387A:  BCF    FF2.7
387C:  MOVFF  6C,A9
3880:  CALL   0246
3884:  BTFSC  16.7
3886:  BSF    FF2.7
....................                     } 
....................                                                } 
....................                                                 
....................                    else  { 
3888:  BRA    392E
388A:  CLRF   16
388C:  BTFSC  FF2.7
388E:  BSF    16.7
3890:  BCF    FF2.7
....................                               if(quantum*contador2<=time2){ 
3892:  MOVFF  6D,A8
3896:  MOVFF  6C,A7
389A:  CLRF   xAA
389C:  MOVFF  1D,A9
38A0:  CALL   026C
38A4:  BTFSC  16.7
38A6:  BSF    FF2.7
38A8:  MOVFF  02,9A
38AC:  MOVFF  01,99
38B0:  MOVF   02,W
38B2:  SUBWF  69,W
38B4:  BNC   392E
38B6:  BNZ   38BE
38B8:  MOVF   x99,W
38BA:  SUBWF  68,W
38BC:  BNC   392E
....................                                rb2=1; 
38BE:  BSF    F81.2
....................                                delay_ms(quantum); 
38C0:  MOVFF  6D,99
38C4:  INCF   x99,F
38C6:  DECF   x99,F
38C8:  BTFSC  FD8.2
38CA:  BRA    38E2
38CC:  CLRF   16
38CE:  BTFSC  FF2.7
38D0:  BSF    16.7
38D2:  BCF    FF2.7
38D4:  MOVLW  FF
38D6:  MOVWF  xA9
38D8:  CALL   0246
38DC:  BTFSC  16.7
38DE:  BSF    FF2.7
38E0:  BRA    38C6
38E2:  CLRF   16
38E4:  BTFSC  FF2.7
38E6:  BSF    16.7
38E8:  BCF    FF2.7
38EA:  MOVFF  6C,A9
38EE:  CALL   0246
38F2:  BTFSC  16.7
38F4:  BSF    FF2.7
....................                                rb2=0; 
38F6:  BCF    F81.2
....................                                delay_ms(quantum); 
38F8:  MOVFF  6D,99
38FC:  INCF   x99,F
38FE:  DECF   x99,F
3900:  BTFSC  FD8.2
3902:  BRA    391A
3904:  CLRF   16
3906:  BTFSC  FF2.7
3908:  BSF    16.7
390A:  BCF    FF2.7
390C:  MOVLW  FF
390E:  MOVWF  xA9
3910:  CALL   0246
3914:  BTFSC  16.7
3916:  BSF    FF2.7
3918:  BRA    38FE
391A:  CLRF   16
391C:  BTFSC  FF2.7
391E:  BSF    16.7
3920:  BCF    FF2.7
3922:  MOVFF  6C,A9
3926:  CALL   0246
392A:  BTFSC  16.7
392C:  BSF    FF2.7
....................                                                      }                
....................                                                       
....................                                                    
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
392E:  MOVF   1C,W
3930:  SUBLW  0A
3932:  BNZ   3938
3934:  CALL   0FE0
....................                  if(contador3==20 )do_proceso3(); 
3938:  MOVF   1E,W
393A:  SUBLW  14
393C:  BNZ   3942
393E:  CALL   1090
....................                  if(contador2==16 )do_proceso2(); 
3942:  MOVF   1D,W
3944:  SUBLW  10
3946:  BNZ   394C
3948:  CALL   1038
....................                   contador3++; 
394C:  INCF   1E,F
....................                   contador1++; 
394E:  INCF   1C,F
....................  
....................                          }///// 
3950:  INCF   1D,F
3952:  BRA    3722
....................                      } 
....................                  /// 
....................                  else  { 
3954:  BRA    3B8C
....................                         for (contador2=copia2;contador2<=16;contador2++){ 
3956:  MOVFF  20,1D
395A:  MOVF   1D,W
395C:  SUBLW  10
395E:  BTFSS  FD8.0
3960:  BRA    3B8C
....................                       copia2=contador2; 
3962:  MOVFF  1D,20
3966:  CLRF   16
3968:  BTFSC  FF2.7
396A:  BSF    16.7
396C:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
396E:  MOVFF  6D,A8
3972:  MOVFF  6C,A7
3976:  CLRF   xAA
3978:  MOVFF  1C,A9
397C:  CALL   026C
3980:  BTFSC  16.7
3982:  BSF    FF2.7
3984:  MOVFF  02,9A
3988:  MOVFF  01,99
398C:  MOVF   02,W
398E:  SUBWF  67,W
3990:  BTFSS  FD8.0
3992:  BRA    3AC2
3994:  BNZ   399E
3996:  MOVF   x99,W
3998:  SUBWF  66,W
399A:  BTFSS  FD8.0
399C:  BRA    3AC2
399E:  CLRF   16
39A0:  BTFSC  FF2.7
39A2:  BSF    16.7
39A4:  BCF    FF2.7
....................                     if(quantum*contador3<=time3){ 
39A6:  MOVFF  6D,A8
39AA:  MOVFF  6C,A7
39AE:  CLRF   xAA
39B0:  MOVFF  1E,A9
39B4:  CALL   026C
39B8:  BTFSC  16.7
39BA:  BSF    FF2.7
39BC:  MOVFF  02,9A
39C0:  MOVFF  01,99
39C4:  MOVF   02,W
39C6:  SUBWF  6B,W
39C8:  BNC   3A4C
39CA:  BNZ   39D2
39CC:  MOVF   x99,W
39CE:  SUBWF  6A,W
39D0:  BNC   3A4C
....................                              rb2=1; 
39D2:  BSF    F81.2
....................                              rb3=1; 
39D4:  BSF    F81.3
....................                              rb1=1; 
39D6:  BSF    F81.1
....................                              delay_ms(quantum); 
39D8:  MOVFF  6D,99
39DC:  INCF   x99,F
39DE:  DECF   x99,F
39E0:  BTFSC  FD8.2
39E2:  BRA    39FA
39E4:  CLRF   16
39E6:  BTFSC  FF2.7
39E8:  BSF    16.7
39EA:  BCF    FF2.7
39EC:  MOVLW  FF
39EE:  MOVWF  xA9
39F0:  CALL   0246
39F4:  BTFSC  16.7
39F6:  BSF    FF2.7
39F8:  BRA    39DE
39FA:  CLRF   16
39FC:  BTFSC  FF2.7
39FE:  BSF    16.7
3A00:  BCF    FF2.7
3A02:  MOVFF  6C,A9
3A06:  CALL   0246
3A0A:  BTFSC  16.7
3A0C:  BSF    FF2.7
....................                              rb2=0; 
3A0E:  BCF    F81.2
....................                              rb3=0; 
3A10:  BCF    F81.3
....................                              rb1=0; 
3A12:  BCF    F81.1
....................                              delay_ms(quantum); 
3A14:  MOVFF  6D,99
3A18:  INCF   x99,F
3A1A:  DECF   x99,F
3A1C:  BTFSC  FD8.2
3A1E:  BRA    3A36
3A20:  CLRF   16
3A22:  BTFSC  FF2.7
3A24:  BSF    16.7
3A26:  BCF    FF2.7
3A28:  MOVLW  FF
3A2A:  MOVWF  xA9
3A2C:  CALL   0246
3A30:  BTFSC  16.7
3A32:  BSF    FF2.7
3A34:  BRA    3A1A
3A36:  CLRF   16
3A38:  BTFSC  FF2.7
3A3A:  BSF    16.7
3A3C:  BCF    FF2.7
3A3E:  MOVFF  6C,A9
3A42:  CALL   0246
3A46:  BTFSC  16.7
3A48:  BSF    FF2.7
....................                     } 
....................                     else{    
3A4A:  BRA    3AC0
....................                              rb2=1; 
3A4C:  BSF    F81.2
....................                              rb1=1; 
3A4E:  BSF    F81.1
....................                              delay_ms(quantum); 
3A50:  MOVFF  6D,99
3A54:  INCF   x99,F
3A56:  DECF   x99,F
3A58:  BTFSC  FD8.2
3A5A:  BRA    3A72
3A5C:  CLRF   16
3A5E:  BTFSC  FF2.7
3A60:  BSF    16.7
3A62:  BCF    FF2.7
3A64:  MOVLW  FF
3A66:  MOVWF  xA9
3A68:  CALL   0246
3A6C:  BTFSC  16.7
3A6E:  BSF    FF2.7
3A70:  BRA    3A56
3A72:  CLRF   16
3A74:  BTFSC  FF2.7
3A76:  BSF    16.7
3A78:  BCF    FF2.7
3A7A:  MOVFF  6C,A9
3A7E:  CALL   0246
3A82:  BTFSC  16.7
3A84:  BSF    FF2.7
....................                              rb2=0; 
3A86:  BCF    F81.2
....................                              rb1=0; 
3A88:  BCF    F81.1
....................                              delay_ms(quantum); 
3A8A:  MOVFF  6D,99
3A8E:  INCF   x99,F
3A90:  DECF   x99,F
3A92:  BTFSC  FD8.2
3A94:  BRA    3AAC
3A96:  CLRF   16
3A98:  BTFSC  FF2.7
3A9A:  BSF    16.7
3A9C:  BCF    FF2.7
3A9E:  MOVLW  FF
3AA0:  MOVWF  xA9
3AA2:  CALL   0246
3AA6:  BTFSC  16.7
3AA8:  BSF    FF2.7
3AAA:  BRA    3A90
3AAC:  CLRF   16
3AAE:  BTFSC  FF2.7
3AB0:  BSF    16.7
3AB2:  BCF    FF2.7
3AB4:  MOVFF  6C,A9
3AB8:  CALL   0246
3ABC:  BTFSC  16.7
3ABE:  BSF    FF2.7
....................                     } 
....................                                                } 
....................                                                 
....................                    else  {        
3AC0:  BRA    3B66
3AC2:  CLRF   16
3AC4:  BTFSC  FF2.7
3AC6:  BSF    16.7
3AC8:  BCF    FF2.7
....................                    if(quantum*contador2<=time2){ 
3ACA:  MOVFF  6D,A8
3ACE:  MOVFF  6C,A7
3AD2:  CLRF   xAA
3AD4:  MOVFF  1D,A9
3AD8:  CALL   026C
3ADC:  BTFSC  16.7
3ADE:  BSF    FF2.7
3AE0:  MOVFF  02,9A
3AE4:  MOVFF  01,99
3AE8:  MOVF   02,W
3AEA:  SUBWF  69,W
3AEC:  BNC   3B66
3AEE:  BNZ   3AF6
3AF0:  MOVF   x99,W
3AF2:  SUBWF  68,W
3AF4:  BNC   3B66
....................                                rb2=1; 
3AF6:  BSF    F81.2
....................                                delay_ms(quantum); 
3AF8:  MOVFF  6D,99
3AFC:  INCF   x99,F
3AFE:  DECF   x99,F
3B00:  BTFSC  FD8.2
3B02:  BRA    3B1A
3B04:  CLRF   16
3B06:  BTFSC  FF2.7
3B08:  BSF    16.7
3B0A:  BCF    FF2.7
3B0C:  MOVLW  FF
3B0E:  MOVWF  xA9
3B10:  CALL   0246
3B14:  BTFSC  16.7
3B16:  BSF    FF2.7
3B18:  BRA    3AFE
3B1A:  CLRF   16
3B1C:  BTFSC  FF2.7
3B1E:  BSF    16.7
3B20:  BCF    FF2.7
3B22:  MOVFF  6C,A9
3B26:  CALL   0246
3B2A:  BTFSC  16.7
3B2C:  BSF    FF2.7
....................                                rb2=0;                            
3B2E:  BCF    F81.2
....................                                delay_ms(quantum);  
3B30:  MOVFF  6D,99
3B34:  INCF   x99,F
3B36:  DECF   x99,F
3B38:  BTFSC  FD8.2
3B3A:  BRA    3B52
3B3C:  CLRF   16
3B3E:  BTFSC  FF2.7
3B40:  BSF    16.7
3B42:  BCF    FF2.7
3B44:  MOVLW  FF
3B46:  MOVWF  xA9
3B48:  CALL   0246
3B4C:  BTFSC  16.7
3B4E:  BSF    FF2.7
3B50:  BRA    3B36
3B52:  CLRF   16
3B54:  BTFSC  FF2.7
3B56:  BSF    16.7
3B58:  BCF    FF2.7
3B5A:  MOVFF  6C,A9
3B5E:  CALL   0246
3B62:  BTFSC  16.7
3B64:  BSF    FF2.7
....................                                 
....................                                } 
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
3B66:  MOVF   1C,W
3B68:  SUBLW  0A
3B6A:  BNZ   3B70
3B6C:  CALL   0FE0
....................                  if(contador3==20 )do_proceso3(); 
3B70:  MOVF   1E,W
3B72:  SUBLW  14
3B74:  BNZ   3B7A
3B76:  CALL   1090
....................                  if(contador2==16 )do_proceso2(); 
3B7A:  MOVF   1D,W
3B7C:  SUBLW  10
3B7E:  BNZ   3B84
3B80:  CALL   1038
....................                   contador1++; 
3B84:  INCF   1C,F
....................                   contador3++; 
3B86:  INCF   1E,F
....................  
....................                          }///// 
3B88:  INCF   1D,F
3B8A:  BRA    395A
....................                   
....................                   
....................                                    } 
....................                           
....................                          
....................                   
....................                       } 
....................                 
....................                   } 
....................               } 
....................        }    
....................    } 
3B8C:  GOTO   3CF4 (RETURN)
.................... /////////////////////////////////////// 
.................... void main(){ 
*
3BA2:  CLRF   FF8
3BA4:  BCF    FD0.7
3BA6:  BSF    07.7
3BA8:  CLRF   FEA
3BAA:  CLRF   FE9
3BAC:  MOVLW  81
3BAE:  MOVWF  FAF
3BB0:  MOVLW  A6
3BB2:  MOVWF  FAC
3BB4:  MOVLW  90
3BB6:  MOVWF  FAB
3BB8:  CLRF   1C
3BBA:  CLRF   1D
3BBC:  CLRF   1E
3BBE:  CLRF   46
3BC0:  CLRF   47
3BC2:  CLRF   48
3BC4:  MOVLW  09
3BC6:  MOVWF  67
3BC8:  MOVLW  C4
3BCA:  MOVWF  66
3BCC:  MOVLW  0F
3BCE:  MOVWF  69
3BD0:  MOVLW  A0
3BD2:  MOVWF  68
3BD4:  MOVLW  13
3BD6:  MOVWF  6B
3BD8:  MOVLW  88
3BDA:  MOVWF  6A
3BDC:  CLRF   6D
3BDE:  MOVLW  FA
3BE0:  MOVWF  6C
3BE2:  BSF    FC1.0
3BE4:  BSF    FC1.1
3BE6:  BSF    FC1.2
3BE8:  BCF    FC1.3
.................... setup_timer_0(rtcc_internal | rtcc_div_16);//quantun de 250 ms 
3BEA:  MOVLW  83
3BEC:  MOVWF  FD5
.................... set_timer0(0x01); 
3BEE:  CLRF   FD7
3BF0:  MOVLW  01
3BF2:  MOVWF  FD6
.................... enable_interrupts(global); 
3BF4:  MOVLW  C0
3BF6:  IORWF  FF2,F
.................... tris_b=0; 
3BF8:  CLRF   F93
.................... port_b=0; 
3BFA:  CLRF   F81
.................... // 
.................... mensaje_recibido=0; 
3BFC:  CLRF   1B
.................... lcd_init(); 
3BFE:  GOTO   0F36
.................... lcd_putc("hola"); 
3C02:  MOVLW  14
3C04:  MOVWF  FF6
3C06:  MOVLW  0F
3C08:  MOVWF  FF7
3C0A:  CLRF   16
3C0C:  BTFSC  FF2.7
3C0E:  BSF    16.7
3C10:  BCF    FF2.7
3C12:  CALL   0A74
3C16:  BTFSC  16.7
3C18:  BSF    FF2.7
3C1A:  CLRF   16
3C1C:  BTFSC  FF2.7
3C1E:  BSF    16.7
3C20:  BCF    FF2.7
.................... delay_ms(100); 
3C22:  MOVLW  64
3C24:  MOVWF  xA9
3C26:  CALL   0246
3C2A:  BTFSC  16.7
3C2C:  BSF    FF2.7
.................... lcd_putc("\f"); 
3C2E:  MOVLW  1A
3C30:  MOVWF  FF6
3C32:  MOVLW  0F
3C34:  MOVWF  FF7
3C36:  CLRF   16
3C38:  BTFSC  FF2.7
3C3A:  BSF    16.7
3C3C:  BCF    FF2.7
3C3E:  CALL   0A74
3C42:  BTFSC  16.7
3C44:  BSF    FF2.7
.................... lcd_putc("comprabando"); 
3C46:  MOVLW  1C
3C48:  MOVWF  FF6
3C4A:  MOVLW  0F
3C4C:  MOVWF  FF7
3C4E:  CLRF   16
3C50:  BTFSC  FF2.7
3C52:  BSF    16.7
3C54:  BCF    FF2.7
3C56:  CALL   0A74
3C5A:  BTFSC  16.7
3C5C:  BSF    FF2.7
3C5E:  CLRF   16
3C60:  BTFSC  FF2.7
3C62:  BSF    16.7
3C64:  BCF    FF2.7
.................... lcd_gotoxy(2,2); 
3C66:  MOVLW  02
3C68:  MOVWF  xA9
3C6A:  MOVWF  xAA
3C6C:  CALL   0A0C
3C70:  BTFSC  16.7
3C72:  BSF    FF2.7
.................... lcd_putc("proceso..."); 
3C74:  MOVLW  28
3C76:  MOVWF  FF6
3C78:  MOVLW  0F
3C7A:  MOVWF  FF7
3C7C:  CLRF   16
3C7E:  BTFSC  FF2.7
3C80:  BSF    16.7
3C82:  BCF    FF2.7
3C84:  CALL   0A74
3C88:  BTFSC  16.7
3C8A:  BSF    FF2.7
3C8C:  CLRF   16
3C8E:  BTFSC  FF2.7
3C90:  BSF    16.7
3C92:  BCF    FF2.7
.................... delay_ms(100); 
3C94:  MOVLW  64
3C96:  MOVWF  xA9
3C98:  CALL   0246
3C9C:  BTFSC  16.7
3C9E:  BSF    FF2.7
.................... rb6=0; 
3CA0:  BCF    F81.6
.................... pcb[0].id=0; 
3CA2:  CLRF   70
.................... pcb[1].id=1; 
3CA4:  MOVLW  01
3CA6:  MOVWF  76
.................... pcb[2].id=2; 
3CA8:  MOVLW  02
3CAA:  MOVWF  7C
.................... contador1=0; 
3CAC:  CLRF   1C
.................... contador2=0; 
3CAE:  CLRF   1D
.................... contador3=0; 
3CB0:  CLRF   1E
.................... enable_interrupts(int_rda); 
3CB2:  BSF    F9D.5
.................... enable_interrupts(int_timer0); 
3CB4:  BSF    FF2.5
....................    while(true){             
....................          if(mensaje_recibido==1){ 
3CB6:  DECFSZ 1B,W
3CB8:  BRA    3D1A
....................                   lcd_putc("\f"); 
3CBA:  MOVLW  34
3CBC:  MOVWF  FF6
3CBE:  MOVLW  0F
3CC0:  MOVWF  FF7
3CC2:  CLRF   16
3CC4:  BTFSC  FF2.7
3CC6:  BSF    16.7
3CC8:  BCF    FF2.7
3CCA:  CALL   0A74
3CCE:  BTFSC  16.7
3CD0:  BSF    FF2.7
....................                    
....................                if(tecla_pulsada=='1'){ 
3CD2:  MOVF   1A,W
3CD4:  SUBLW  31
3CD6:  BNZ   3CDE
....................                do_proceso11(); 
3CD8:  GOTO   10E8
....................                   } 
....................                else { 
3CDC:  BRA    3CF4
....................                 
....................                   if(tecla_pulsada=='2')do_proceso22(); 
3CDE:  MOVF   1A,W
3CE0:  SUBLW  32
3CE2:  BNZ   3CEA
3CE4:  GOTO   1B9E
....................                     
....................                    else{ 
3CE8:  BRA    3CF4
....................                     if(tecla_pulsada=='3') do_proceso33();  
3CEA:  MOVF   1A,W
3CEC:  SUBLW  33
3CEE:  BNZ   3CF4
3CF0:  GOTO   2650
....................                   } 
....................                } 
....................                  
....................                 if(tecla_pulsada=='a'){ 
3CF4:  MOVF   1A,W
3CF6:  SUBLW  61
3CF8:  BNZ   3D00
....................                 contador1=0; 
3CFA:  CLRF   1C
....................                 copia1=0; 
3CFC:  CLRF   1F
....................                 descargar_proceso1(); 
3CFE:  BRA    3B90
....................                   } 
....................                 if(tecla_pulsada=='b'){ 
3D00:  MOVF   1A,W
3D02:  SUBLW  62
3D04:  BNZ   3D0C
....................                 contador2=0; 
3D06:  CLRF   1D
....................                 copia2=0; 
3D08:  CLRF   20
....................                 descargar_proceso2(); 
3D0A:  BRA    3B96
....................                   } 
....................                 if(tecla_pulsada=='c'){ 
3D0C:  MOVF   1A,W
3D0E:  SUBLW  63
3D10:  BNZ   3D18
....................                 contador3=0; 
3D12:  CLRF   1E
....................                 copia3=0; 
3D14:  CLRF   21
....................                 descargar_proceso3(); 
3D16:  BRA    3B9C
....................                   } 
....................                   mensaje_recibido=0; 
3D18:  CLRF   1B
....................                   } 
....................                 
....................              } 
3D1A:  BRA    3CB6
....................         } 
....................  
3D1C:  SLEEP 

Configuration Fuses:
   Word  1: 2100   XT NOOSCSEN
   Word  2: 0E0E   BROWNOUT WDT128 NOWDT BORV20 PUT
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NODEBUG NOLVP
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTB NOWRTC
   Word  7: 400F   NOEBTR NOEBTRB
