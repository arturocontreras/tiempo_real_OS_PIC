CCS PCH C Compiler, Version 4.104, 5967               05-nov-12 21:32

               Filename: C:\Documents and Settings\USER\Escritorio\tiempor real,presentacion333\tiempor real,presentacion333\tiempo real2\codigoc1\avance33.lst

               ROM used: 15508 bytes (47%)
                         Largest free fragment is 17256
               RAM used: 150 (10%) at main() level
                         176 (11%) worst case
               Stack:    15 worst case (8 in main + 7 for interrupts)

*
0000:  GOTO   3B1C
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  FF2.5
004A:  GOTO   0054
004E:  BTFSC  FF2.2
0050:  GOTO   0A90
0054:  BTFSS  F9D.5
0056:  GOTO   0060
005A:  BTFSC  F9E.5
005C:  GOTO   0212
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVF   04,W
0098:  MOVFF  06,FE0
009C:  MOVFF  05,FD8
00A0:  RETFIE 0
.................... #include <18f452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
.................... #fuses HS,NOPROTECT,NOWDT 
.................... #use delay(clock=20000000) 
*
0242:  CLRF   FEA
0244:  MOVLW  A6
0246:  MOVWF  FE9
0248:  MOVF   FEF,W
024A:  BZ    0266
024C:  MOVLW  06
024E:  MOVWF  01
0250:  CLRF   00
0252:  DECFSZ 00,F
0254:  BRA    0252
0256:  DECFSZ 01,F
0258:  BRA    0250
025A:  MOVLW  7B
025C:  MOVWF  00
025E:  DECFSZ 00,F
0260:  BRA    025E
0262:  DECFSZ FEF,F
0264:  BRA    024C
0266:  RETLW  00
.................... #use rs232(baud=9600,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
.................... #define LCD_ENABLE_PIN  PIN_D2                                   //// 
.................... #define LCD_RS_PIN      PIN_D0                                    //// 
.................... #define LCD_RW_PIN      PIN_D1                                    //// 
.................... #define LCD_DATA4       PIN_D4                                    //// 
.................... #define LCD_DATA5       PIN_D5                                    //// 
.................... #define LCD_DATA6       PIN_D6                                    //// 
.................... #define LCD_DATA7       PIN_D7                                    //// 
.................... #include <LCD.c>  
.................... /////////////////////////////////////////////////////////////////////////////// 
.................... ////                             LCD.C                                     //// 
.................... ////                 Driver for common LCD modules                         //// 
.................... ////                                                                       //// 
.................... ////  lcd_init()   Must be called before any other function.               //// 
.................... ////                                                                       //// 
.................... ////  lcd_putc(c)  Will display c on the next position of the LCD.         //// 
.................... ////                     The following have special meaning:               //// 
.................... ////                      \f  Clear display                                //// 
.................... ////                      \n  Go to start of second line                   //// 
.................... ////                      \b  Move back one position                       //// 
.................... ////                                                                       //// 
.................... ////  lcd_gotoxy(x,y) Set write position on LCD (upper left is 1,1)        //// 
.................... ////                                                                       //// 
.................... ////  lcd_getc(x,y)   Returns character at position x,y on LCD             //// 
.................... ////                                                                       //// 
.................... ////  CONFIGURATION                                                        //// 
.................... ////  The LCD can be configured in one of two ways: a.) port access or     //// 
.................... ////  b.) pin access.  Port access requires the entire 7 bit interface     //// 
.................... ////  connected to one GPIO port, and the data bits (D4:D7 of the LCD)     //// 
.................... ////  connected to sequential pins on the GPIO.  Pin access                //// 
.................... ////  has no requirements, all 7 bits of the control interface can         //// 
.................... ////  can be connected to any GPIO using several ports.                    //// 
.................... ////                                                                       //// 
.................... ////  To use port access, #define LCD_DATA_PORT to the SFR location of     //// 
.................... ////  of the GPIO port that holds the interface, -AND- edit LCD_PIN_MAP    //// 
.................... ////  of this file to configure the pin order.  If you are using a         //// 
.................... ////  baseline PIC (PCB), then LCD_OUTPUT_MAP and LCD_INPUT_MAP also must  //// 
.................... ////  be defined.                                                          //// 
.................... ////                                                                       //// 
.................... ////  Example of port access:                                              //// 
.................... ////     #define LCD_DATA_PORT getenv("SFR:PORTD")                         //// 
.................... ////                                                                       //// 
.................... ////  To use pin access, the following pins must be defined:               //// 
.................... ////     LCD_ENABLE_PIN                                                    //// 
.................... ////     LCD_RS_PIN                                                        //// 
.................... ////     LCD_RW_PIN                                                        //// 
.................... ////     LCD_DATA4                                                         //// 
.................... ////     LCD_DATA5                                                         //// 
.................... ////     LCD_DATA6                                                         //// 
.................... ////     LCD_DATA7                                                         //// 
.................... ////                                                                       //// 
.................... ////  Example of pin access:                                               //// 
.................... ////     #define LCD_ENABLE_PIN  PIN_D0                                    //// 
.................... ////     #define LCD_RS_PIN      PIN_D1                                    //// 
.................... ////     #define LCD_RW_PIN      PIN_D2                                    //// 
.................... ////     #define LCD_DATA4       PIN_D4                                    //// 
.................... ////     #define LCD_DATA5       PIN_D5                                    //// 
.................... ////     #define LCD_DATA6       PIN_D6                                    //// 
.................... ////     #define LCD_DATA7       PIN_D7                                    //// 
.................... ////                                                                       //// 
.................... /////////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996,2009 Custom Computer Services           //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
....................  
.................... // define the pinout. 
.................... // only required if port access is being used. 
.................... typedef struct   
.................... {                            // This structure is overlayed 
....................    BOOLEAN enable;           // on to an I/O port to gain 
....................    BOOLEAN rs;               // access to the LCD pins. 
....................    BOOLEAN rw;               // The bits are allocated from 
....................    BOOLEAN unused;           // low order up.  ENABLE will 
....................    int     data : 4;         // be LSB pin of that port. 
....................   #if defined(__PCD__)       // The port used will be LCD_DATA_PORT. 
....................    int    reserved: 8; 
....................   #endif 
.................... } LCD_PIN_MAP; 
....................  
.................... // this is to improve compatability with previous LCD drivers that accepted 
.................... // a define labeled 'use_portb_lcd' that configured the LCD onto port B. 
.................... #if ((defined(use_portb_lcd)) && (use_portb_lcd==TRUE)) 
....................  #define LCD_DATA_PORT getenv("SFR:PORTB") 
.................... #endif 
....................  
.................... #if defined(__PCB__) 
....................    // these definitions only need to be modified for baseline PICs. 
....................    // all other PICs use LCD_PIN_MAP or individual LCD_xxx pin definitions. 
.................... /*                                    EN, RS,   RW,   UNUSED,  DATA  */ 
....................  const LCD_PIN_MAP LCD_OUTPUT_MAP =  {0,  0,    0,    0,       0}; 
....................  const LCD_PIN_MAP LCD_INPUT_MAP =   {0,  0,    0,    0,       0xF}; 
.................... #endif 
....................  
.................... ////////////////////// END CONFIGURATION /////////////////////////////////// 
....................  
.................... #ifndef LCD_ENABLE_PIN 
....................    #define lcd_output_enable(x) lcdlat.enable=x 
....................    #define lcd_enable_tris()   lcdtris.enable=0 
.................... #else 
....................    #define lcd_output_enable(x) output_bit(LCD_ENABLE_PIN, x) 
....................    #define lcd_enable_tris()  output_drive(LCD_ENABLE_PIN) 
.................... #endif 
....................  
.................... #ifndef LCD_RS_PIN 
....................    #define lcd_output_rs(x) lcdlat.rs=x 
....................    #define lcd_rs_tris()   lcdtris.rs=0 
.................... #else 
....................    #define lcd_output_rs(x) output_bit(LCD_RS_PIN, x) 
....................    #define lcd_rs_tris()  output_drive(LCD_RS_PIN) 
.................... #endif 
....................  
.................... #ifndef LCD_RW_PIN 
....................    #define lcd_output_rw(x) lcdlat.rw=x 
....................    #define lcd_rw_tris()   lcdtris.rw=0 
.................... #else 
....................    #define lcd_output_rw(x) output_bit(LCD_RW_PIN, x) 
....................    #define lcd_rw_tris()  output_drive(LCD_RW_PIN) 
.................... #endif 
....................  
.................... // original version of this library incorrectly labeled LCD_DATA0 as LCD_DATA4, 
.................... // LCD_DATA1 as LCD_DATA5, and so on.  this block of code makes the driver 
.................... // compatible with any code written for the original library 
.................... #if (defined(LCD_DATA0) && defined(LCD_DATA1) && defined(LCD_DATA2) && defined(LCD_DATA3) && !defined(LCD_DATA4) && !defined(LCD_DATA5) && !defined(LCD_DATA6) && !defined(LCD_DATA7)) 
....................    #define  LCD_DATA4    LCD_DATA0 
....................    #define  LCD_DATA5    LCD_DATA1 
....................    #define  LCD_DATA6    LCD_DATA2 
....................    #define  LCD_DATA7    LCD_DATA3 
.................... #endif 
....................  
.................... #ifndef LCD_DATA4 
.................... #ifndef LCD_DATA_PORT 
....................    #if defined(__PCB__) 
....................       #define LCD_DATA_PORT      0x06     //portb 
....................       #define set_tris_lcd(x)   set_tris_b(x) 
....................    #else 
....................      #if defined(PIN_D0) 
....................       #define LCD_DATA_PORT      getenv("SFR:PORTD")     //portd 
....................      #else 
....................       #define LCD_DATA_PORT      getenv("SFR:PORTB")     //portb 
....................      #endif 
....................    #endif    
.................... #endif 
....................  
.................... #if defined(__PCB__) 
....................    LCD_PIN_MAP lcd, lcdlat; 
....................    #byte lcd = LCD_DATA_PORT 
....................    #byte lcdlat = LCD_DATA_PORT 
.................... #elif defined(__PCM__) 
....................    LCD_PIN_MAP lcd, lcdlat, lcdtris; 
....................    #byte lcd = LCD_DATA_PORT 
....................    #byte lcdlat = LCD_DATA_PORT 
....................    #byte lcdtris = LCD_DATA_PORT+0x80 
.................... #elif defined(__PCH__) 
....................    LCD_PIN_MAP lcd, lcdlat, lcdtris; 
....................    #byte lcd = LCD_DATA_PORT 
....................    #byte lcdlat = LCD_DATA_PORT+9 
....................    #byte lcdtris = LCD_DATA_PORT+0x12 
.................... #elif defined(__PCD__) 
....................    LCD_PIN_MAP lcd, lcdlat, lcdtris; 
....................    #word lcd = LCD_DATA_PORT 
....................    #word lcdlat = LCD_DATA_PORT+2 
....................    #word lcdtris = LCD_DATA_PORT-0x02 
.................... #endif 
.................... #endif   //LCD_DATA4 not defined 
....................  
.................... #ifndef LCD_TYPE 
....................    #define LCD_TYPE 2           // 0=5x7, 1=5x10, 2=2 lines 
.................... #endif 
....................  
.................... #ifndef LCD_LINE_TWO 
....................    #define LCD_LINE_TWO 0x40    // LCD RAM address for the second line 
.................... #endif 
....................  
.................... BYTE const LCD_INIT_STRING[4] = {0x20 | (LCD_TYPE << 2), 0xc, 1, 6}; 
....................                              // These bytes need to be sent to the LCD 
....................                              // to start it up. 
....................  
.................... BYTE lcd_read_nibble(void); 
....................  
.................... BYTE lcd_read_byte(void) 
.................... { 
....................    BYTE low,high; 
....................  
....................  #if defined(__PCB__) 
....................    set_tris_lcd(LCD_INPUT_MAP); 
....................  #else 
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
....................    output_float(LCD_DATA4); 
*
0938:  BSF    F95.4
....................    output_float(LCD_DATA5); 
093A:  BSF    F95.5
....................    output_float(LCD_DATA6); 
093C:  BSF    F95.6
....................    output_float(LCD_DATA7); 
093E:  BSF    F95.7
....................   #else 
....................    lcdtris.data = 0xF; 
....................   #endif 
....................  #endif 
....................          
....................    lcd_output_rw(1); 
0940:  BSF    F8C.1
0942:  BCF    F95.1
....................    delay_cycles(1); 
0944:  NOP   
....................    lcd_output_enable(1); 
0946:  BSF    F8C.2
0948:  BCF    F95.2
....................    delay_cycles(1); 
094A:  NOP   
....................    high = lcd_read_nibble(); 
094C:  RCALL  08E6
094E:  MOVFF  01,AD
....................        
....................    lcd_output_enable(0); 
0952:  BCF    F8C.2
0954:  BCF    F95.2
....................    delay_cycles(1); 
0956:  NOP   
....................    lcd_output_enable(1); 
0958:  BSF    F8C.2
095A:  BCF    F95.2
....................    delay_us(1); 
095C:  BRA    095E
095E:  BRA    0960
0960:  NOP   
....................    low = lcd_read_nibble(); 
0962:  RCALL  08E6
0964:  MOVFF  01,AC
....................        
....................    lcd_output_enable(0); 
0968:  BCF    F8C.2
096A:  BCF    F95.2
....................  
....................  #if defined(__PCB__) 
....................    set_tris_lcd(LCD_INPUT_MAP); 
....................  #else 
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
....................    output_drive(LCD_DATA4); 
096C:  BCF    F95.4
....................    output_drive(LCD_DATA5); 
096E:  BCF    F95.5
....................    output_drive(LCD_DATA6); 
0970:  BCF    F95.6
....................    output_drive(LCD_DATA7); 
0972:  BCF    F95.7
....................   #else 
....................    lcdtris.data = 0x0; 
....................   #endif 
....................  #endif 
....................  
....................    return( (high<<4) | low); 
0974:  SWAPF  xAD,W
0976:  MOVWF  00
0978:  MOVLW  F0
097A:  ANDWF  00,F
097C:  MOVF   00,W
097E:  IORWF  xAC,W
0980:  MOVWF  01
.................... } 
0982:  RETLW  00
....................  
.................... BYTE lcd_read_nibble(void) 
.................... { 
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
*
08E6:  CLRF   xAE
....................    BYTE n = 0x00; 
....................  
....................    /* Read the data port */ 
....................    n |= input(LCD_DATA4); 
08E8:  BSF    F95.4
08EA:  MOVLW  00
08EC:  BTFSC  F83.4
08EE:  MOVLW  01
08F0:  IORWF  xAE,F
....................    n |= input(LCD_DATA5) << 1; 
08F2:  BSF    F95.5
08F4:  MOVLW  00
08F6:  BTFSC  F83.5
08F8:  MOVLW  01
08FA:  MOVWF  00
08FC:  BCF    FD8.0
08FE:  RLCF   00,F
0900:  MOVF   00,W
0902:  IORWF  xAE,F
....................    n |= input(LCD_DATA6) << 2; 
0904:  BSF    F95.6
0906:  MOVLW  00
0908:  BTFSC  F83.6
090A:  MOVLW  01
090C:  MOVWF  00
090E:  RLCF   00,F
0910:  RLCF   00,F
0912:  MOVLW  FC
0914:  ANDWF  00,F
0916:  MOVF   00,W
0918:  IORWF  xAE,F
....................    n |= input(LCD_DATA7) << 3; 
091A:  BSF    F95.7
091C:  MOVLW  00
091E:  BTFSC  F83.7
0920:  MOVLW  01
0922:  MOVWF  00
0924:  RLCF   00,F
0926:  RLCF   00,F
0928:  RLCF   00,F
092A:  MOVLW  F8
092C:  ANDWF  00,F
092E:  MOVF   00,W
0930:  IORWF  xAE,F
....................     
....................    return(n); 
0932:  MOVFF  AE,01
....................   #else 
....................    return(lcd.data); 
....................   #endif 
.................... } 
0936:  RETLW  00
....................  
.................... void lcd_send_nibble(BYTE n) 
.................... { 
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
....................    /* Write to the data port */ 
....................    output_bit(LCD_DATA4, bit_test(n, 0)); 
*
0984:  BTFSC  xAD.0
0986:  BRA    098C
0988:  BCF    F8C.4
098A:  BRA    098E
098C:  BSF    F8C.4
098E:  BCF    F95.4
....................    output_bit(LCD_DATA5, bit_test(n, 1)); 
0990:  BTFSC  xAD.1
0992:  BRA    0998
0994:  BCF    F8C.5
0996:  BRA    099A
0998:  BSF    F8C.5
099A:  BCF    F95.5
....................    output_bit(LCD_DATA6, bit_test(n, 2)); 
099C:  BTFSC  xAD.2
099E:  BRA    09A4
09A0:  BCF    F8C.6
09A2:  BRA    09A6
09A4:  BSF    F8C.6
09A6:  BCF    F95.6
....................    output_bit(LCD_DATA7, bit_test(n, 3)); 
09A8:  BTFSC  xAD.3
09AA:  BRA    09B0
09AC:  BCF    F8C.7
09AE:  BRA    09B2
09B0:  BSF    F8C.7
09B2:  BCF    F95.7
....................   #else       
....................    lcdlat.data = n; 
....................   #endif 
....................        
....................    delay_cycles(1); 
09B4:  NOP   
....................    lcd_output_enable(1); 
09B6:  BSF    F8C.2
09B8:  BCF    F95.2
....................    delay_us(2); 
09BA:  MOVLW  03
09BC:  MOVWF  00
09BE:  DECFSZ 00,F
09C0:  BRA    09BE
....................    lcd_output_enable(0); 
09C2:  BCF    F8C.2
09C4:  BCF    F95.2
.................... } 
09C6:  RETLW  00
....................  
.................... void lcd_send_byte(BYTE address, BYTE n) 
.................... { 
....................    lcd_output_rs(0); 
09C8:  BCF    F8C.0
09CA:  BCF    F95.0
....................    while ( bit_test(lcd_read_byte(),7) ) ; 
09CC:  RCALL  0938
09CE:  MOVFF  01,AC
09D2:  BTFSC  01.7
09D4:  BRA    09CC
....................    lcd_output_rs(address); 
09D6:  MOVF   xAA,F
09D8:  BNZ   09DE
09DA:  BCF    F8C.0
09DC:  BRA    09E0
09DE:  BSF    F8C.0
09E0:  BCF    F95.0
....................    delay_cycles(1); 
09E2:  NOP   
....................    lcd_output_rw(0); 
09E4:  BCF    F8C.1
09E6:  BCF    F95.1
....................    delay_cycles(1); 
09E8:  NOP   
....................    lcd_output_enable(0); 
09EA:  BCF    F8C.2
09EC:  BCF    F95.2
....................    lcd_send_nibble(n >> 4); 
09EE:  SWAPF  xAB,W
09F0:  MOVWF  xAC
09F2:  MOVLW  0F
09F4:  ANDWF  xAC,F
09F6:  MOVFF  AC,AD
09FA:  RCALL  0984
....................    lcd_send_nibble(n & 0xf); 
09FC:  MOVF   xAB,W
09FE:  ANDLW  0F
0A00:  MOVWF  xAC
0A02:  MOVWF  xAD
0A04:  RCALL  0984
.................... } 
0A06:  RETLW  00
....................  
.................... void lcd_init(void)  
.................... { 
....................    BYTE i; 
....................  
....................  #if defined(__PCB__) 
....................    set_tris_lcd(LCD_OUTPUT_MAP); 
....................  #else 
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
....................    output_drive(LCD_DATA4); 
*
0EB0:  BCF    F95.4
....................    output_drive(LCD_DATA5); 
0EB2:  BCF    F95.5
....................    output_drive(LCD_DATA6); 
0EB4:  BCF    F95.6
....................    output_drive(LCD_DATA7); 
0EB6:  BCF    F95.7
....................   #else 
....................    lcdtris.data = 0x0; 
....................   #endif 
....................    lcd_enable_tris(); 
0EB8:  BCF    F95.2
....................    lcd_rs_tris(); 
0EBA:  BCF    F95.0
....................    lcd_rw_tris(); 
0EBC:  BCF    F95.1
....................  #endif 
....................  
....................    lcd_output_rs(0); 
0EBE:  BCF    F8C.0
0EC0:  BCF    F95.0
....................    lcd_output_rw(0); 
0EC2:  BCF    F8C.1
0EC4:  BCF    F95.1
....................    lcd_output_enable(0); 
0EC6:  BCF    F8C.2
0EC8:  BCF    F95.2
0ECA:  CLRF   16
0ECC:  BTFSC  FF2.7
0ECE:  BSF    16.7
0ED0:  BCF    FF2.7
....................      
....................    delay_ms(15); 
0ED2:  MOVLW  0F
0ED4:  MOVWF  xA6
0ED6:  CALL   0242
0EDA:  BTFSC  16.7
0EDC:  BSF    FF2.7
....................    for(i=1;i<=3;++i) 
0EDE:  MOVLW  01
0EE0:  MOVWF  x96
0EE2:  MOVF   x96,W
0EE4:  SUBLW  03
0EE6:  BNC   0F12
0EE8:  CLRF   16
0EEA:  BTFSC  FF2.7
0EEC:  BSF    16.7
0EEE:  BCF    FF2.7
....................    { 
....................        lcd_send_nibble(3); 
0EF0:  MOVLW  03
0EF2:  MOVWF  xAD
0EF4:  RCALL  0984
0EF6:  BTFSC  16.7
0EF8:  BSF    FF2.7
0EFA:  CLRF   16
0EFC:  BTFSC  FF2.7
0EFE:  BSF    16.7
0F00:  BCF    FF2.7
....................        delay_ms(5); 
0F02:  MOVLW  05
0F04:  MOVWF  xA6
0F06:  CALL   0242
0F0A:  BTFSC  16.7
0F0C:  BSF    FF2.7
....................    } 
0F0E:  INCF   x96,F
0F10:  BRA    0EE2
0F12:  CLRF   16
0F14:  BTFSC  FF2.7
0F16:  BSF    16.7
0F18:  BCF    FF2.7
....................      
....................    lcd_send_nibble(2); 
0F1A:  MOVLW  02
0F1C:  MOVWF  xAD
0F1E:  RCALL  0984
0F20:  BTFSC  16.7
0F22:  BSF    FF2.7
....................    for(i=0;i<=3;++i) 
0F24:  CLRF   x96
0F26:  MOVF   x96,W
0F28:  SUBLW  03
0F2A:  BNC   0F56
....................       lcd_send_byte(0,LCD_INIT_STRING[i]); 
0F2C:  CLRF   03
0F2E:  MOVF   x96,W
0F30:  MOVFF  FF2,97
0F34:  BCF    FF2.7
0F36:  CALL   00A2
0F3A:  BTFSC  x97.7
0F3C:  BSF    FF2.7
0F3E:  MOVWF  x97
0F40:  CLRF   16
0F42:  BTFSC  FF2.7
0F44:  BSF    16.7
0F46:  BCF    FF2.7
0F48:  CLRF   xAA
0F4A:  MOVWF  xAB
0F4C:  RCALL  09C8
0F4E:  BTFSC  16.7
0F50:  BSF    FF2.7
0F52:  INCF   x96,F
0F54:  BRA    0F26
.................... } 
0F56:  GOTO   3B7C (RETURN)
....................  
.................... void lcd_gotoxy(BYTE x, BYTE y) 
.................... { 
....................    BYTE address; 
....................  
....................    if(y!=1) 
*
0A08:  DECFSZ xA7,W
0A0A:  BRA    0A0E
0A0C:  BRA    0A14
....................       address=LCD_LINE_TWO; 
0A0E:  MOVLW  40
0A10:  MOVWF  xA8
....................    else 
0A12:  BRA    0A16
....................       address=0; 
0A14:  CLRF   xA8
....................       
....................    address+=x-1; 
0A16:  MOVLW  01
0A18:  SUBWF  xA6,W
0A1A:  ADDWF  xA8,F
....................    lcd_send_byte(0,0x80|address); 
0A1C:  MOVF   xA8,W
0A1E:  IORLW  80
0A20:  MOVWF  xA9
0A22:  CLRF   xAA
0A24:  MOVWF  xAB
0A26:  RCALL  09C8
.................... } 
0A28:  RETLW  00
....................  
.................... void lcd_putc(char c) 
.................... { 
....................    switch (c) 
....................    { 
0A2A:  MOVF   xA5,W
0A2C:  XORLW  0C
0A2E:  BZ    0A3A
0A30:  XORLW  06
0A32:  BZ    0A4C
0A34:  XORLW  02
0A36:  BZ    0A58
0A38:  BRA    0A62
....................       case '\f'   :  lcd_send_byte(0,1); 
0A3A:  CLRF   xAA
0A3C:  MOVLW  01
0A3E:  MOVWF  xAB
0A40:  RCALL  09C8
....................                      delay_ms(2); 
0A42:  MOVLW  02
0A44:  MOVWF  xA6
0A46:  CALL   0242
....................                      break; 
0A4A:  BRA    0A6E
....................                       
....................       case '\n'   : lcd_gotoxy(1,2);        break; 
0A4C:  MOVLW  01
0A4E:  MOVWF  xA6
0A50:  MOVLW  02
0A52:  MOVWF  xA7
0A54:  RCALL  0A08
0A56:  BRA    0A6E
....................       
....................       case '\b'   : lcd_send_byte(0,0x10);  break; 
0A58:  CLRF   xAA
0A5A:  MOVLW  10
0A5C:  MOVWF  xAB
0A5E:  RCALL  09C8
0A60:  BRA    0A6E
....................       
....................       default     : lcd_send_byte(1,c);     break; 
0A62:  MOVLW  01
0A64:  MOVWF  xAA
0A66:  MOVFF  A5,AB
0A6A:  RCALL  09C8
0A6C:  BRA    0A6E
....................    } 
.................... } 
0A6E:  RETLW  00
....................   
.................... char lcd_getc(BYTE x, BYTE y) 
.................... { 
....................    char value; 
....................  
....................    lcd_gotoxy(x,y); 
....................    while ( bit_test(lcd_read_byte(),7) ); // wait until busy flag is low 
....................    lcd_output_rs(1); 
....................    value = lcd_read_byte(); 
....................    lcd_output_rs(0); 
....................     
....................    return(value); 
.................... } 
....................  
.................... //definiendo puertos 
.................... #byte tris_a =0xf92 
.................... #byte port_a =0xf80 
.................... #byte tris_b =0xf93 
.................... #byte port_b =0xf81 
.................... #byte tris_c =0xf94 
.................... #byte port_c =0xf82 
.................... #byte tris_d =0xf95 
.................... #byte port_d =0xf83 
.................... #byte tris_e =0xf96 
.................... #byte port_e =0xf84 
.................... //definiendo bits 
.................... #bit rb0=port_b.0 //quantum 
.................... #bit rb1=port_b.1 //proceso1 
.................... #bit rb2=port_b.2 //proceso2 
.................... #bit rb3=port_b.3 //proceso3 
.................... #bit rb5=port_b.5 //sistema operativo 
.................... #bit rb6=port_b.6 //indicador si funciona el quantum 
.................... //definiendo variables 
.................... char tecla_pulsada; 
.................... int mensaje_recibido; 
.................... int contador1=0; 
.................... int contador2=0; 
.................... int contador3=0; 
.................... int copia1; 
.................... int copia2; 
.................... int copia3; 
.................... //estados 
.................... char est1[12]; 
.................... char est2[12]; 
.................... char est3[12]; 
.................... //flags 
.................... int flag_ver=0; 
.................... int flag_procesador=0; 
.................... int flag_so=0; 
.................... //acumuladores 
.................... long int acc1; 
.................... long int acc2; 
.................... long int acc3; 
.................... //colas 
.................... int cola1; 
.................... int cola2; 
.................... int cola3; 
.................... char col_fijo[20]; 
.................... //tiempos de duracion de cada proceso 
.................... long int time1=2500;//10 
.................... long int time2=4000;//16 
.................... long int time3=5000;//20 
.................... long int quantum=250;/// 250 ms 
.................... //estructura del bloque de control de procesos(PCB) 
....................  typedef struct  { 
....................  int id; 
....................  int estado; 
....................  int dir_inicio; 
....................  int id_corriente;//el valor del PC 
....................  long int tiempo; 
....................  }bloque ; 
....................  long int acumulador; 
....................  bloque pcb[3]; 
....................  int cola [3];//cola de procesos 
....................  char col[20]; 
.................... //funcion para ver procesos 
....................  void ver_estado_proceso (int a){ 
....................  //0=vacio 
....................  //1=ejecutandose 
....................  //2=cargado 
....................      if(a==0){ 
*
0286:  MOVF   xA3,F
0288:  BTFSS  FD8.2
028A:  BRA    03A4
....................     if(contador1*quantum==0) 
028C:  CLRF   xA5
028E:  MOVFF  19,A4
0292:  MOVFF  6A,A7
0296:  MOVFF  69,A6
029A:  RCALL  0268
029C:  MOVFF  02,A5
02A0:  MOVFF  01,A4
02A4:  MOVF   xA4,F
02A6:  BNZ   02CC
02A8:  MOVF   xA5,F
02AA:  BNZ   02CC
....................      est1= "vacio" ; 
02AC:  CLRF   FEA
02AE:  MOVLW  1F
02B0:  MOVWF  FE9
02B2:  MOVFF  FF2,A4
02B6:  BCF    FF2.7
02B8:  MOVLW  00
02BA:  RCALL  00C0
02BC:  TBLRD*-
02BE:  TBLRD*+
02C0:  MOVF   FF5,W
02C2:  MOVWF  FEE
02C4:  IORLW  00
02C6:  BNZ   02BE
02C8:  BTFSC  xA4.7
02CA:  BSF    FF2.7
....................      acc1=0; 
02CC:  CLRF   47
02CE:  CLRF   46
....................      cola1=0; 
02D0:  CLRF   4C
....................     if(contador1*quantum>0 && contador1*quantum<time1){ 
02D2:  CLRF   xA5
02D4:  MOVFF  19,A4
02D8:  MOVFF  6A,A7
02DC:  MOVFF  69,A6
02E0:  RCALL  0268
02E2:  MOVFF  02,A5
02E6:  MOVFF  01,A4
02EA:  MOVF   xA4,F
02EC:  BNZ   02F2
02EE:  MOVF   xA5,F
02F0:  BZ    0354
02F2:  CLRF   xA5
02F4:  MOVFF  19,A4
02F8:  MOVFF  6A,A7
02FC:  MOVFF  69,A6
0300:  RCALL  0268
0302:  MOVFF  02,A5
0306:  MOVFF  01,A4
030A:  MOVF   02,W
030C:  SUBWF  64,W
030E:  BNC   0354
0310:  BNZ   0318
0312:  MOVF   63,W
0314:  SUBWF  xA4,W
0316:  BC    0354
....................      est1="ejecutando"; 
0318:  CLRF   FEA
031A:  MOVLW  1F
031C:  MOVWF  FE9
031E:  MOVFF  FF2,A4
0322:  BCF    FF2.7
0324:  MOVLW  00
0326:  RCALL  00D6
0328:  TBLRD*-
032A:  TBLRD*+
032C:  MOVF   FF5,W
032E:  MOVWF  FEE
0330:  IORLW  00
0332:  BNZ   032A
0334:  BTFSC  xA4.7
0336:  BSF    FF2.7
....................      acc1=contador1*quantum; 
0338:  CLRF   xA5
033A:  MOVFF  19,A4
033E:  MOVFF  6A,A7
0342:  MOVFF  69,A6
0346:  RCALL  0268
0348:  MOVFF  02,47
034C:  MOVFF  01,46
....................      cola1=1; 
0350:  MOVLW  01
0352:  MOVWF  4C
....................     } 
....................     if(contador1*quantum>=time1){ 
0354:  CLRF   xA5
0356:  MOVFF  19,A4
035A:  MOVFF  6A,A7
035E:  MOVFF  69,A6
0362:  RCALL  0268
0364:  MOVFF  02,A5
0368:  MOVFF  01,A4
036C:  MOVF   64,W
036E:  SUBWF  02,W
0370:  BNC   03A4
0372:  BNZ   037A
0374:  MOVF   63,W
0376:  SUBWF  xA4,W
0378:  BNC   03A4
....................      est1="cargado"; 
037A:  CLRF   FEA
037C:  MOVLW  1F
037E:  MOVWF  FE9
0380:  MOVFF  FF2,A4
0384:  BCF    FF2.7
0386:  MOVLW  00
0388:  RCALL  00F2
038A:  TBLRD*-
038C:  TBLRD*+
038E:  MOVF   FF5,W
0390:  MOVWF  FEE
0392:  IORLW  00
0394:  BNZ   038C
0396:  BTFSC  xA4.7
0398:  BSF    FF2.7
....................      acc1=time1; 
039A:  MOVFF  64,47
039E:  MOVFF  63,46
....................      cola1=0; 
03A2:  CLRF   4C
....................     } 
....................      } 
....................      if(a==1){ 
03A4:  DECFSZ xA3,W
03A6:  BRA    04C0
....................     if(contador2*quantum==0) 
03A8:  CLRF   xA5
03AA:  MOVFF  1A,A4
03AE:  MOVFF  6A,A7
03B2:  MOVFF  69,A6
03B6:  RCALL  0268
03B8:  MOVFF  02,A5
03BC:  MOVFF  01,A4
03C0:  MOVF   xA4,F
03C2:  BNZ   03E8
03C4:  MOVF   xA5,F
03C6:  BNZ   03E8
....................      est2= "vacio" ; 
03C8:  CLRF   FEA
03CA:  MOVLW  2B
03CC:  MOVWF  FE9
03CE:  MOVFF  FF2,A4
03D2:  BCF    FF2.7
03D4:  MOVLW  00
03D6:  RCALL  00C0
03D8:  TBLRD*-
03DA:  TBLRD*+
03DC:  MOVF   FF5,W
03DE:  MOVWF  FEE
03E0:  IORLW  00
03E2:  BNZ   03DA
03E4:  BTFSC  xA4.7
03E6:  BSF    FF2.7
....................      acc2=0; 
03E8:  CLRF   49
03EA:  CLRF   48
....................      cola2=0; 
03EC:  CLRF   4D
....................     if(contador2*quantum>0 && contador2*quantum<time2){ 
03EE:  CLRF   xA5
03F0:  MOVFF  1A,A4
03F4:  MOVFF  6A,A7
03F8:  MOVFF  69,A6
03FC:  RCALL  0268
03FE:  MOVFF  02,A5
0402:  MOVFF  01,A4
0406:  MOVF   xA4,F
0408:  BNZ   040E
040A:  MOVF   xA5,F
040C:  BZ    0470
040E:  CLRF   xA5
0410:  MOVFF  1A,A4
0414:  MOVFF  6A,A7
0418:  MOVFF  69,A6
041C:  RCALL  0268
041E:  MOVFF  02,A5
0422:  MOVFF  01,A4
0426:  MOVF   02,W
0428:  SUBWF  66,W
042A:  BNC   0470
042C:  BNZ   0434
042E:  MOVF   65,W
0430:  SUBWF  xA4,W
0432:  BC    0470
....................      est2="ejecutando"; 
0434:  CLRF   FEA
0436:  MOVLW  2B
0438:  MOVWF  FE9
043A:  MOVFF  FF2,A4
043E:  BCF    FF2.7
0440:  MOVLW  00
0442:  RCALL  00D6
0444:  TBLRD*-
0446:  TBLRD*+
0448:  MOVF   FF5,W
044A:  MOVWF  FEE
044C:  IORLW  00
044E:  BNZ   0446
0450:  BTFSC  xA4.7
0452:  BSF    FF2.7
....................      acc2=contador2*quantum; 
0454:  CLRF   xA5
0456:  MOVFF  1A,A4
045A:  MOVFF  6A,A7
045E:  MOVFF  69,A6
0462:  RCALL  0268
0464:  MOVFF  02,49
0468:  MOVFF  01,48
....................      cola2=1; 
046C:  MOVLW  01
046E:  MOVWF  4D
....................     } 
....................     if(contador2*quantum>=time2){ 
0470:  CLRF   xA5
0472:  MOVFF  1A,A4
0476:  MOVFF  6A,A7
047A:  MOVFF  69,A6
047E:  RCALL  0268
0480:  MOVFF  02,A5
0484:  MOVFF  01,A4
0488:  MOVF   66,W
048A:  SUBWF  02,W
048C:  BNC   04C0
048E:  BNZ   0496
0490:  MOVF   65,W
0492:  SUBWF  xA4,W
0494:  BNC   04C0
....................      est2="cargado"; 
0496:  CLRF   FEA
0498:  MOVLW  2B
049A:  MOVWF  FE9
049C:  MOVFF  FF2,A4
04A0:  BCF    FF2.7
04A2:  MOVLW  00
04A4:  RCALL  00F2
04A6:  TBLRD*-
04A8:  TBLRD*+
04AA:  MOVF   FF5,W
04AC:  MOVWF  FEE
04AE:  IORLW  00
04B0:  BNZ   04A8
04B2:  BTFSC  xA4.7
04B4:  BSF    FF2.7
....................      acc2=time2; 
04B6:  MOVFF  66,49
04BA:  MOVFF  65,48
....................      cola2=0; 
04BE:  CLRF   4D
....................     } 
....................      } 
....................      if(a==2){ 
04C0:  MOVF   xA3,W
04C2:  SUBLW  02
04C4:  BTFSS  FD8.2
04C6:  BRA    05E0
....................     if(contador3*quantum==0) 
04C8:  CLRF   xA5
04CA:  MOVFF  1B,A4
04CE:  MOVFF  6A,A7
04D2:  MOVFF  69,A6
04D6:  RCALL  0268
04D8:  MOVFF  02,A5
04DC:  MOVFF  01,A4
04E0:  MOVF   xA4,F
04E2:  BNZ   0508
04E4:  MOVF   xA5,F
04E6:  BNZ   0508
....................      est3= "vacio" ; 
04E8:  CLRF   FEA
04EA:  MOVLW  37
04EC:  MOVWF  FE9
04EE:  MOVFF  FF2,A4
04F2:  BCF    FF2.7
04F4:  MOVLW  00
04F6:  RCALL  00C0
04F8:  TBLRD*-
04FA:  TBLRD*+
04FC:  MOVF   FF5,W
04FE:  MOVWF  FEE
0500:  IORLW  00
0502:  BNZ   04FA
0504:  BTFSC  xA4.7
0506:  BSF    FF2.7
....................      acc3=0; 
0508:  CLRF   4B
050A:  CLRF   4A
....................      cola3=0; 
050C:  CLRF   4E
....................     if(contador3*quantum>0 && contador3*quantum<time3){ 
050E:  CLRF   xA5
0510:  MOVFF  1B,A4
0514:  MOVFF  6A,A7
0518:  MOVFF  69,A6
051C:  RCALL  0268
051E:  MOVFF  02,A5
0522:  MOVFF  01,A4
0526:  MOVF   xA4,F
0528:  BNZ   052E
052A:  MOVF   xA5,F
052C:  BZ    0590
052E:  CLRF   xA5
0530:  MOVFF  1B,A4
0534:  MOVFF  6A,A7
0538:  MOVFF  69,A6
053C:  RCALL  0268
053E:  MOVFF  02,A5
0542:  MOVFF  01,A4
0546:  MOVF   02,W
0548:  SUBWF  68,W
054A:  BNC   0590
054C:  BNZ   0554
054E:  MOVF   67,W
0550:  SUBWF  xA4,W
0552:  BC    0590
....................      est3="ejecutando"; 
0554:  CLRF   FEA
0556:  MOVLW  37
0558:  MOVWF  FE9
055A:  MOVFF  FF2,A4
055E:  BCF    FF2.7
0560:  MOVLW  00
0562:  RCALL  00D6
0564:  TBLRD*-
0566:  TBLRD*+
0568:  MOVF   FF5,W
056A:  MOVWF  FEE
056C:  IORLW  00
056E:  BNZ   0566
0570:  BTFSC  xA4.7
0572:  BSF    FF2.7
....................      acc3=contador3*quantum; 
0574:  CLRF   xA5
0576:  MOVFF  1B,A4
057A:  MOVFF  6A,A7
057E:  MOVFF  69,A6
0582:  RCALL  0268
0584:  MOVFF  02,4B
0588:  MOVFF  01,4A
....................      cola3=1; 
058C:  MOVLW  01
058E:  MOVWF  4E
....................     } 
....................     if(contador3*quantum>=time3){ 
0590:  CLRF   xA5
0592:  MOVFF  1B,A4
0596:  MOVFF  6A,A7
059A:  MOVFF  69,A6
059E:  RCALL  0268
05A0:  MOVFF  02,A5
05A4:  MOVFF  01,A4
05A8:  MOVF   68,W
05AA:  SUBWF  02,W
05AC:  BNC   05E0
05AE:  BNZ   05B6
05B0:  MOVF   67,W
05B2:  SUBWF  xA4,W
05B4:  BNC   05E0
....................      est3="cargado"; 
05B6:  CLRF   FEA
05B8:  MOVLW  37
05BA:  MOVWF  FE9
05BC:  MOVFF  FF2,A4
05C0:  BCF    FF2.7
05C2:  MOVLW  00
05C4:  RCALL  00F2
05C6:  TBLRD*-
05C8:  TBLRD*+
05CA:  MOVF   FF5,W
05CC:  MOVWF  FEE
05CE:  IORLW  00
05D0:  BNZ   05C8
05D2:  BTFSC  xA4.7
05D4:  BSF    FF2.7
....................      acc3=time3; 
05D6:  MOVFF  68,4B
05DA:  MOVFF  67,4A
....................      cola3=0; 
05DE:  CLRF   4E
....................     } 
....................      } 
....................      
....................  } 
05E0:  RETLW  00
....................   void ver_cola(int a ,int b,int c){ 
....................      if(a==0 && b==0 && c==0){ 
*
0782:  MOVF   xA3,F
0784:  BNZ   07AE
0786:  MOVF   xA4,F
0788:  BNZ   07AE
078A:  MOVF   xA5,F
078C:  BNZ   07AE
....................        col_fijo="no hay procesos"; 
078E:  CLRF   FEA
0790:  MOVLW  4F
0792:  MOVWF  FE9
0794:  MOVFF  FF2,A6
0798:  BCF    FF2.7
079A:  MOVLW  00
079C:  RCALL  010A
079E:  TBLRD*-
07A0:  TBLRD*+
07A2:  MOVF   FF5,W
07A4:  MOVWF  FEE
07A6:  IORLW  00
07A8:  BNZ   07A0
07AA:  BTFSC  xA6.7
07AC:  BSF    FF2.7
....................         } 
....................      if(a==1 && b==0 && c==0){ 
07AE:  DECFSZ xA3,W
07B0:  BRA    07DA
07B2:  MOVF   xA4,F
07B4:  BNZ   07DA
07B6:  MOVF   xA5,F
07B8:  BNZ   07DA
....................        col_fijo="solo el proceso 1";  
07BA:  CLRF   FEA
07BC:  MOVLW  4F
07BE:  MOVWF  FE9
07C0:  MOVFF  FF2,A6
07C4:  BCF    FF2.7
07C6:  MOVLW  00
07C8:  RCALL  012A
07CA:  TBLRD*-
07CC:  TBLRD*+
07CE:  MOVF   FF5,W
07D0:  MOVWF  FEE
07D2:  IORLW  00
07D4:  BNZ   07CC
07D6:  BTFSC  xA6.7
07D8:  BSF    FF2.7
....................      } 
....................      if(a==1 && b==1 && c==0){ 
07DA:  DECFSZ xA3,W
07DC:  BRA    0806
07DE:  DECFSZ xA4,W
07E0:  BRA    0806
07E2:  MOVF   xA5,F
07E4:  BNZ   0806
....................        col_fijo="procesos 1 y 2"; 
07E6:  CLRF   FEA
07E8:  MOVLW  4F
07EA:  MOVWF  FE9
07EC:  MOVFF  FF2,A6
07F0:  BCF    FF2.7
07F2:  MOVLW  00
07F4:  RCALL  014C
07F6:  TBLRD*-
07F8:  TBLRD*+
07FA:  MOVF   FF5,W
07FC:  MOVWF  FEE
07FE:  IORLW  00
0800:  BNZ   07F8
0802:  BTFSC  xA6.7
0804:  BSF    FF2.7
....................      } 
....................      if(a==1 && b==0 && c==1){ 
0806:  DECFSZ xA3,W
0808:  BRA    0832
080A:  MOVF   xA4,F
080C:  BNZ   0832
080E:  DECFSZ xA5,W
0810:  BRA    0832
....................        col_fijo="procesos 1 y 3"; 
0812:  CLRF   FEA
0814:  MOVLW  4F
0816:  MOVWF  FE9
0818:  MOVFF  FF2,A6
081C:  BCF    FF2.7
081E:  MOVLW  00
0820:  RCALL  016C
0822:  TBLRD*-
0824:  TBLRD*+
0826:  MOVF   FF5,W
0828:  MOVWF  FEE
082A:  IORLW  00
082C:  BNZ   0824
082E:  BTFSC  xA6.7
0830:  BSF    FF2.7
....................      } 
....................       if(a==0 && b==1 && c==0){ 
0832:  MOVF   xA3,F
0834:  BNZ   085E
0836:  DECFSZ xA4,W
0838:  BRA    085E
083A:  MOVF   xA5,F
083C:  BNZ   085E
....................        col_fijo="solo el proceso 2"; 
083E:  CLRF   FEA
0840:  MOVLW  4F
0842:  MOVWF  FE9
0844:  MOVFF  FF2,A6
0848:  BCF    FF2.7
084A:  MOVLW  00
084C:  RCALL  018C
084E:  TBLRD*-
0850:  TBLRD*+
0852:  MOVF   FF5,W
0854:  MOVWF  FEE
0856:  IORLW  00
0858:  BNZ   0850
085A:  BTFSC  xA6.7
085C:  BSF    FF2.7
....................      } 
....................      if(a==0 && b==0 && c==1){ 
085E:  MOVF   xA3,F
0860:  BNZ   088A
0862:  MOVF   xA4,F
0864:  BNZ   088A
0866:  DECFSZ xA5,W
0868:  BRA    088A
....................        col_fijo="solo el proceso 3"; 
086A:  CLRF   FEA
086C:  MOVLW  4F
086E:  MOVWF  FE9
0870:  MOVFF  FF2,A6
0874:  BCF    FF2.7
0876:  MOVLW  00
0878:  RCALL  01AE
087A:  TBLRD*-
087C:  TBLRD*+
087E:  MOVF   FF5,W
0880:  MOVWF  FEE
0882:  IORLW  00
0884:  BNZ   087C
0886:  BTFSC  xA6.7
0888:  BSF    FF2.7
....................      } 
....................      if(a==0 && b==1 && c==1){ 
088A:  MOVF   xA3,F
088C:  BNZ   08B6
088E:  DECFSZ xA4,W
0890:  BRA    08B6
0892:  DECFSZ xA5,W
0894:  BRA    08B6
....................        col_fijo="procesos 2 y 3"; 
0896:  CLRF   FEA
0898:  MOVLW  4F
089A:  MOVWF  FE9
089C:  MOVFF  FF2,A6
08A0:  BCF    FF2.7
08A2:  MOVLW  00
08A4:  RCALL  01D0
08A6:  TBLRD*-
08A8:  TBLRD*+
08AA:  MOVF   FF5,W
08AC:  MOVWF  FEE
08AE:  IORLW  00
08B0:  BNZ   08A8
08B2:  BTFSC  xA6.7
08B4:  BSF    FF2.7
....................      }  
....................      if(a==1 && b==1 && c==1){ 
08B6:  DECFSZ xA3,W
08B8:  BRA    08E2
08BA:  DECFSZ xA4,W
08BC:  BRA    08E2
08BE:  DECFSZ xA5,W
08C0:  BRA    08E2
....................        col_fijo="procesos 1,2 y 3"; 
08C2:  CLRF   FEA
08C4:  MOVLW  4F
08C6:  MOVWF  FE9
08C8:  MOVFF  FF2,A6
08CC:  BCF    FF2.7
08CE:  MOVLW  00
08D0:  RCALL  01F0
08D2:  TBLRD*-
08D4:  TBLRD*+
08D6:  MOVF   FF5,W
08D8:  MOVWF  FEE
08DA:  IORLW  00
08DC:  BNZ   08D4
08DE:  BTFSC  xA6.7
08E0:  BSF    FF2.7
....................      } 
....................      
....................   } 
08E2:  GOTO   0CC8 (RETURN)
.................... //interrupciones 
.................... #int_rda  
.................... void RDA_isr(){ 
.................... tecla_pulsada=getc(); 
*
0212:  BTFSS  F9E.5
0214:  BRA    0212
0216:  MOVFF  FAE,17
.................... mensaje_recibido=1; 
021A:  MOVLW  01
021C:  MOVWF  18
.................... if(tecla_pulsada=='v')flag_ver=1; 
021E:  MOVF   17,W
0220:  SUBLW  76
0222:  BNZ   0228
0224:  MOVLW  01
0226:  MOVWF  43
.................... if(tecla_pulsada=='p')flag_procesador=1; 
0228:  MOVF   17,W
022A:  SUBLW  70
022C:  BNZ   0232
022E:  MOVLW  01
0230:  MOVWF  44
.................... if(tecla_pulsada=='s')flag_so=1; 
0232:  MOVF   17,W
0234:  SUBLW  73
0236:  BNZ   023C
0238:  MOVLW  01
023A:  MOVWF  45
.................... //!port_b=0; 
.................... } 
.................... //funcion interrupcion serial 
023C:  BCF    F9E.5
023E:  GOTO   0060
.................... #int_timer0 
.................... //interrupcion del timer0,para hallar el quantum 
.................... //funcion quantum  
.................... void timer0_isr(){ 
.................... delay_ms(quantum-4); 
*
0A90:  MOVLW  04
0A92:  SUBWF  69,W
0A94:  MOVWF  xA3
0A96:  MOVLW  00
0A98:  SUBWFB 6A,W
0A9A:  MOVWF  xA4
0A9C:  MOVWF  xA5
0A9E:  INCF   xA5,F
0AA0:  DECF   xA5,F
0AA2:  BTFSC  FD8.2
0AA4:  BRA    0AB0
0AA6:  MOVLW  FF
0AA8:  MOVWF  xA6
0AAA:  CALL   0242
0AAE:  BRA    0AA0
0AB0:  MOVFF  A3,A6
0AB4:  CALL   0242
....................    rb6=!rb6; 
0AB8:  BTG    F81.6
....................    rb0=!rb0; 
0ABA:  BTG    F81.0
....................    if(tecla_pulsada=='v'&& flag_ver==1){ 
0ABC:  MOVF   17,W
0ABE:  SUBLW  76
0AC0:  BTFSS  FD8.2
0AC2:  BRA    0CE2
0AC4:  DECFSZ 43,W
0AC6:  BRA    0CE2
.................... //!  est1=ver_estado_proceso(pcb[0].id); 
.................... ver_estado_proceso(pcb[0].id); 
0AC8:  MOVFF  6D,A3
0ACC:  CALL   0286
....................   ver_estado_proceso(pcb[1].id); 
0AD0:  MOVFF  73,A3
0AD4:  CALL   0286
....................  ver_estado_proceso(pcb[2].id); 
0AD8:  MOVFF  79,A3
0ADC:  CALL   0286
....................   pcb[0].tiempo=acc1; 
0AE0:  MOVFF  47,72
0AE4:  MOVFF  46,71
....................   pcb[1].tiempo=acc2; 
0AE8:  MOVFF  49,78
0AEC:  MOVFF  48,77
....................   pcb[2].tiempo=acc3; 
0AF0:  MOVFF  4B,7E
0AF4:  MOVFF  4A,7D
....................   acumulador=acc1+acc2+acc3; 
0AF8:  MOVF   48,W
0AFA:  ADDWF  46,W
0AFC:  MOVWF  xA3
0AFE:  MOVF   49,W
0B00:  ADDWFC 47,W
0B02:  MOVWF  xA4
0B04:  MOVF   4A,W
0B06:  ADDWF  xA3,W
0B08:  MOVWF  6B
0B0A:  MOVF   4B,W
0B0C:  ADDWFC xA4,W
0B0E:  MOVWF  6C
....................   puts("ver procesos"); 
0B10:  MOVLW  36
0B12:  MOVWF  FF6
0B14:  MOVLW  0D
0B16:  MOVWF  FF7
0B18:  RCALL  05E2
0B1A:  MOVLW  0D
0B1C:  BTFSS  F9E.4
0B1E:  BRA    0B1C
0B20:  MOVWF  FAD
0B22:  MOVLW  0A
0B24:  BTFSS  F9E.4
0B26:  BRA    0B24
0B28:  MOVWF  FAD
....................   puts("id     dir-inicio        tiempo         estado"); 
0B2A:  MOVLW  44
0B2C:  MOVWF  FF6
0B2E:  MOVLW  0D
0B30:  MOVWF  FF7
0B32:  RCALL  05E2
0B34:  MOVLW  0D
0B36:  BTFSS  F9E.4
0B38:  BRA    0B36
0B3A:  MOVWF  FAD
0B3C:  MOVLW  0A
0B3E:  BTFSS  F9E.4
0B40:  BRA    0B3E
0B42:  MOVWF  FAD
....................   printf("%1u           %Lu            %Lu            ",pcb[0].id,100,pcb[0].tiempo); 
0B44:  MOVFF  6D,A3
0B48:  MOVLW  18
0B4A:  MOVWF  xA4
0B4C:  RCALL  062C
0B4E:  MOVLW  77
0B50:  MOVWF  FF6
0B52:  MOVLW  0D
0B54:  MOVWF  FF7
0B56:  MOVLW  0B
0B58:  MOVWF  xA3
0B5A:  RCALL  0698
0B5C:  MOVLW  10
0B5E:  MOVWF  FE9
0B60:  CLRF   xA4
0B62:  MOVLW  64
0B64:  MOVWF  xA3
0B66:  RCALL  06B8
0B68:  MOVLW  85
0B6A:  MOVWF  FF6
0B6C:  MOVLW  0D
0B6E:  MOVWF  FF7
0B70:  MOVLW  0C
0B72:  MOVWF  xA3
0B74:  RCALL  0698
0B76:  MOVLW  10
0B78:  MOVWF  FE9
0B7A:  MOVFF  72,A4
0B7E:  MOVFF  71,A3
0B82:  RCALL  06B8
0B84:  MOVLW  94
0B86:  MOVWF  FF6
0B88:  MOVLW  0D
0B8A:  MOVWF  FF7
0B8C:  MOVLW  0C
0B8E:  MOVWF  xA3
0B90:  RCALL  0698
....................   puts(est1); 
0B92:  CLRF   FEA
0B94:  MOVLW  1F
0B96:  MOVWF  FE9
0B98:  RCALL  075C
0B9A:  MOVLW  0D
0B9C:  BTFSS  F9E.4
0B9E:  BRA    0B9C
0BA0:  MOVWF  FAD
0BA2:  MOVLW  0A
0BA4:  BTFSS  F9E.4
0BA6:  BRA    0BA4
0BA8:  MOVWF  FAD
....................    
....................   printf("%1u           %Lu            %Lu            ",pcb[1].id,200,pcb[1].tiempo); 
0BAA:  MOVFF  73,A3
0BAE:  MOVLW  18
0BB0:  MOVWF  xA4
0BB2:  RCALL  062C
0BB4:  MOVLW  A5
0BB6:  MOVWF  FF6
0BB8:  MOVLW  0D
0BBA:  MOVWF  FF7
0BBC:  MOVLW  0B
0BBE:  MOVWF  xA3
0BC0:  RCALL  0698
0BC2:  MOVLW  10
0BC4:  MOVWF  FE9
0BC6:  CLRF   xA4
0BC8:  MOVLW  C8
0BCA:  MOVWF  xA3
0BCC:  RCALL  06B8
0BCE:  MOVLW  B3
0BD0:  MOVWF  FF6
0BD2:  MOVLW  0D
0BD4:  MOVWF  FF7
0BD6:  MOVLW  0C
0BD8:  MOVWF  xA3
0BDA:  RCALL  0698
0BDC:  MOVLW  10
0BDE:  MOVWF  FE9
0BE0:  MOVFF  78,A4
0BE4:  MOVFF  77,A3
0BE8:  RCALL  06B8
0BEA:  MOVLW  C2
0BEC:  MOVWF  FF6
0BEE:  MOVLW  0D
0BF0:  MOVWF  FF7
0BF2:  MOVLW  0C
0BF4:  MOVWF  xA3
0BF6:  RCALL  0698
....................   puts(est2); 
0BF8:  CLRF   FEA
0BFA:  MOVLW  2B
0BFC:  MOVWF  FE9
0BFE:  RCALL  075C
0C00:  MOVLW  0D
0C02:  BTFSS  F9E.4
0C04:  BRA    0C02
0C06:  MOVWF  FAD
0C08:  MOVLW  0A
0C0A:  BTFSS  F9E.4
0C0C:  BRA    0C0A
0C0E:  MOVWF  FAD
....................    
....................   printf("%1u           %Lu            %Lu            ",pcb[2].id,300,pcb[2].tiempo); 
0C10:  MOVFF  79,A3
0C14:  MOVLW  18
0C16:  MOVWF  xA4
0C18:  RCALL  062C
0C1A:  MOVLW  D3
0C1C:  MOVWF  FF6
0C1E:  MOVLW  0D
0C20:  MOVWF  FF7
0C22:  MOVLW  0B
0C24:  MOVWF  xA3
0C26:  RCALL  0698
0C28:  MOVLW  10
0C2A:  MOVWF  FE9
0C2C:  MOVLW  01
0C2E:  MOVWF  xA4
0C30:  MOVLW  2C
0C32:  MOVWF  xA3
0C34:  RCALL  06B8
0C36:  MOVLW  E1
0C38:  MOVWF  FF6
0C3A:  MOVLW  0D
0C3C:  MOVWF  FF7
0C3E:  MOVLW  0C
0C40:  MOVWF  xA3
0C42:  RCALL  0698
0C44:  MOVLW  10
0C46:  MOVWF  FE9
0C48:  MOVFF  7E,A4
0C4C:  MOVFF  7D,A3
0C50:  RCALL  06B8
0C52:  MOVLW  F0
0C54:  MOVWF  FF6
0C56:  MOVLW  0D
0C58:  MOVWF  FF7
0C5A:  MOVLW  0C
0C5C:  MOVWF  xA3
0C5E:  RCALL  0698
....................   puts(est3); 
0C60:  CLRF   FEA
0C62:  MOVLW  37
0C64:  MOVWF  FE9
0C66:  RCALL  075C
0C68:  MOVLW  0D
0C6A:  BTFSS  F9E.4
0C6C:  BRA    0C6A
0C6E:  MOVWF  FAD
0C70:  MOVLW  0A
0C72:  BTFSS  F9E.4
0C74:  BRA    0C72
0C76:  MOVWF  FAD
....................    
....................   //el acumulador 
....................    
....................   printf("acumulador = %Lu",acumulador); 
0C78:  MOVLW  FE
0C7A:  MOVWF  FF6
0C7C:  MOVLW  0D
0C7E:  MOVWF  FF7
0C80:  MOVLW  0D
0C82:  MOVWF  xA3
0C84:  RCALL  0698
0C86:  MOVLW  10
0C88:  MOVWF  FE9
0C8A:  MOVFF  6C,A4
0C8E:  MOVFF  6B,A3
0C92:  RCALL  06B8
....................   //la cola 
....................   printf("  "); 
0C94:  MOVLW  20
0C96:  BTFSS  F9E.4
0C98:  BRA    0C96
0C9A:  MOVWF  FAD
0C9C:  MOVLW  20
0C9E:  BTFSS  F9E.4
0CA0:  BRA    0C9E
0CA2:  MOVWF  FAD
....................    
....................   printf(" ----  ver cola :  "); 
0CA4:  MOVLW  10
0CA6:  MOVWF  FF6
0CA8:  MOVLW  0E
0CAA:  MOVWF  FF7
0CAC:  RCALL  05E2
....................   cola[0]=cola1; 
0CAE:  MOVFF  4C,7F
....................   cola[1]=cola2; 
0CB2:  MOVFF  4D,80
....................   cola[2]=cola3; 
0CB6:  MOVFF  4E,81
....................  ver_cola(cola[0],cola[1],cola[2]); 
0CBA:  MOVFF  7F,A3
0CBE:  MOVFF  80,A4
0CC2:  MOVFF  81,A5
0CC6:  BRA    0782
....................   puts(col_fijo); 
0CC8:  CLRF   FEA
0CCA:  MOVLW  4F
0CCC:  MOVWF  FE9
0CCE:  RCALL  075C
0CD0:  MOVLW  0D
0CD2:  BTFSS  F9E.4
0CD4:  BRA    0CD2
0CD6:  MOVWF  FAD
0CD8:  MOVLW  0A
0CDA:  BTFSS  F9E.4
0CDC:  BRA    0CDA
0CDE:  MOVWF  FAD
....................   // 
....................   flag_ver=0;} 
0CE0:  CLRF   43
....................   if(tecla_pulsada=='p'&& flag_procesador==1){ 
0CE2:  MOVF   17,W
0CE4:  SUBLW  70
0CE6:  BNZ   0CEE
0CE8:  DECFSZ 44,W
0CEA:  BRA    0CEE
....................   flag_procesador=0;} 
0CEC:  CLRF   44
....................   if(tecla_pulsada=='s' && flag_so==1){ 
0CEE:  MOVF   17,W
0CF0:  SUBLW  73
0CF2:  BNZ   0D2A
0CF4:  DECFSZ 45,W
0CF6:  BRA    0D2A
....................   lcd_putc("\f"); 
0CF8:  MOVLW  24
0CFA:  MOVWF  FF6
0CFC:  MOVLW  0E
0CFE:  MOVWF  FF7
0D00:  RCALL  0A70
....................   lcd_putc("sist.oper. XAK");  
0D02:  MOVLW  26
0D04:  MOVWF  FF6
0D06:  MOVLW  0E
0D08:  MOVWF  FF7
0D0A:  RCALL  0A70
....................   puts("sistema operativo XAK"); 
0D0C:  MOVLW  36
0D0E:  MOVWF  FF6
0D10:  MOVLW  0E
0D12:  MOVWF  FF7
0D14:  RCALL  05E2
0D16:  MOVLW  0D
0D18:  BTFSS  F9E.4
0D1A:  BRA    0D18
0D1C:  MOVWF  FAD
0D1E:  MOVLW  0A
0D20:  BTFSS  F9E.4
0D22:  BRA    0D20
0D24:  MOVWF  FAD
....................    rb5=1; 
0D26:  BSF    F81.5
....................     
....................    flag_so=0;} 
0D28:  CLRF   45
.................... //!   if(tecla_pulsada=='h'&& flag_help==1){ 
.................... //!   flag_help=0;} 
....................    set_timer0(0x01); 
0D2A:  CLRF   FD7
0D2C:  MOVLW  01
0D2E:  MOVWF  FD6
.................... } 
....................   
.................... //funciones de los procesos 
....................  
.................... //proceso1: 
0D30:  BCF    FF2.2
0D32:  GOTO   0060
.................... void do_proceso1(){ 
.................... lcd_putc("\f"); 
*
0F5A:  MOVLW  4C
0F5C:  MOVWF  FF6
0F5E:  MOVLW  0E
0F60:  MOVWF  FF7
0F62:  CLRF   16
0F64:  BTFSC  FF2.7
0F66:  BSF    16.7
0F68:  BCF    FF2.7
0F6A:  RCALL  0A70
0F6C:  BTFSC  16.7
0F6E:  BSF    FF2.7
.................... lcd_putc("proceso 1"); 
0F70:  MOVLW  4E
0F72:  MOVWF  FF6
0F74:  MOVLW  0E
0F76:  MOVWF  FF7
0F78:  CLRF   16
0F7A:  BTFSC  FF2.7
0F7C:  BSF    16.7
0F7E:  BCF    FF2.7
0F80:  RCALL  0A70
0F82:  BTFSC  16.7
0F84:  BSF    FF2.7
.................... puts("proceso 1"); 
0F86:  MOVLW  58
0F88:  MOVWF  FF6
0F8A:  MOVLW  0E
0F8C:  MOVWF  FF7
0F8E:  CLRF   16
0F90:  BTFSC  FF2.7
0F92:  BSF    16.7
0F94:  BCF    FF2.7
0F96:  CALL   05E2
0F9A:  BTFSC  16.7
0F9C:  BSF    FF2.7
0F9E:  MOVLW  0D
0FA0:  BTFSS  F9E.4
0FA2:  BRA    0FA0
0FA4:  MOVWF  FAD
0FA6:  MOVLW  0A
0FA8:  BTFSS  F9E.4
0FAA:  BRA    0FA8
0FAC:  MOVWF  FAD
.................... rb1=1; 
0FAE:  BSF    F81.1
.................... } 
0FB0:  RETLW  00
.................... //proceso2: 
.................... void do_proceso2(){ 
.................... lcd_putc("\f"); 
0FB2:  MOVLW  62
0FB4:  MOVWF  FF6
0FB6:  MOVLW  0E
0FB8:  MOVWF  FF7
0FBA:  CLRF   16
0FBC:  BTFSC  FF2.7
0FBE:  BSF    16.7
0FC0:  BCF    FF2.7
0FC2:  RCALL  0A70
0FC4:  BTFSC  16.7
0FC6:  BSF    FF2.7
.................... lcd_putc("proceso 2"); 
0FC8:  MOVLW  64
0FCA:  MOVWF  FF6
0FCC:  MOVLW  0E
0FCE:  MOVWF  FF7
0FD0:  CLRF   16
0FD2:  BTFSC  FF2.7
0FD4:  BSF    16.7
0FD6:  BCF    FF2.7
0FD8:  RCALL  0A70
0FDA:  BTFSC  16.7
0FDC:  BSF    FF2.7
.................... puts("proceso 2"); 
0FDE:  MOVLW  6E
0FE0:  MOVWF  FF6
0FE2:  MOVLW  0E
0FE4:  MOVWF  FF7
0FE6:  CLRF   16
0FE8:  BTFSC  FF2.7
0FEA:  BSF    16.7
0FEC:  BCF    FF2.7
0FEE:  CALL   05E2
0FF2:  BTFSC  16.7
0FF4:  BSF    FF2.7
0FF6:  MOVLW  0D
0FF8:  BTFSS  F9E.4
0FFA:  BRA    0FF8
0FFC:  MOVWF  FAD
0FFE:  MOVLW  0A
1000:  BTFSS  F9E.4
1002:  BRA    1000
1004:  MOVWF  FAD
.................... rb2=1; 
1006:  BSF    F81.2
.................... } 
1008:  RETLW  00
.................... //proceso3: 
.................... void do_proceso3(){ 
.................... lcd_putc("\f"); 
100A:  MOVLW  78
100C:  MOVWF  FF6
100E:  MOVLW  0E
1010:  MOVWF  FF7
1012:  CLRF   16
1014:  BTFSC  FF2.7
1016:  BSF    16.7
1018:  BCF    FF2.7
101A:  RCALL  0A70
101C:  BTFSC  16.7
101E:  BSF    FF2.7
.................... lcd_putc("proceso 3"); 
1020:  MOVLW  7A
1022:  MOVWF  FF6
1024:  MOVLW  0E
1026:  MOVWF  FF7
1028:  CLRF   16
102A:  BTFSC  FF2.7
102C:  BSF    16.7
102E:  BCF    FF2.7
1030:  RCALL  0A70
1032:  BTFSC  16.7
1034:  BSF    FF2.7
.................... puts("proceso 3"); 
1036:  MOVLW  84
1038:  MOVWF  FF6
103A:  MOVLW  0E
103C:  MOVWF  FF7
103E:  CLRF   16
1040:  BTFSC  FF2.7
1042:  BSF    16.7
1044:  BCF    FF2.7
1046:  CALL   05E2
104A:  BTFSC  16.7
104C:  BSF    FF2.7
104E:  MOVLW  0D
1050:  BTFSS  F9E.4
1052:  BRA    1050
1054:  MOVWF  FAD
1056:  MOVLW  0A
1058:  BTFSS  F9E.4
105A:  BRA    1058
105C:  MOVWF  FAD
.................... rb3=1; 
105E:  BSF    F81.3
.................... } 
1060:  RETLW  00
.................... //descarga de procesos 
....................  
.................... void descargar_proceso1(){ 
.................... rb1=0; 
*
3B0A:  BCF    F81.1
.................... } 
3B0C:  GOTO   3C7A (RETURN)
....................  
.................... void descargar_proceso2(){ 
.................... rb2=0; 
3B10:  BCF    F81.2
.................... } 
3B12:  GOTO   3C86 (RETURN)
....................  
.................... void descargar_proceso3(){ 
.................... rb3=0; 
3B16:  BCF    F81.3
.................... } 
3B18:  GOTO   3C92 (RETURN)
....................  
.................... //proceso11: 
.................... void do_proceso11(){ 
.................... for (contador1=1;contador1<=10;contador1++){ 
*
1062:  MOVLW  01
1064:  MOVWF  19
1066:  MOVF   19,W
1068:  SUBLW  0A
106A:  BNC   1134
....................               
....................              copia1=contador1; 
106C:  MOVFF  19,1C
1070:  CLRF   16
1072:  BTFSC  FF2.7
1074:  BSF    16.7
1076:  BCF    FF2.7
....................              if(quantum*contador1<time1){ 
1078:  MOVFF  6A,A5
107C:  MOVFF  69,A4
1080:  CLRF   xA7
1082:  MOVFF  19,A6
1086:  CALL   0268
108A:  BTFSC  16.7
108C:  BSF    FF2.7
108E:  MOVFF  02,97
1092:  MOVFF  01,96
1096:  MOVF   02,W
1098:  SUBWF  64,W
109A:  BNC   1116
109C:  BNZ   10A4
109E:  MOVF   63,W
10A0:  SUBWF  x96,W
10A2:  BC    1116
....................                 rb1=1; 
10A4:  BSF    F81.1
....................                 delay_ms(quantum); 
10A6:  MOVFF  6A,96
10AA:  INCF   x96,F
10AC:  DECF   x96,F
10AE:  BTFSC  FD8.2
10B0:  BRA    10C8
10B2:  CLRF   16
10B4:  BTFSC  FF2.7
10B6:  BSF    16.7
10B8:  BCF    FF2.7
10BA:  MOVLW  FF
10BC:  MOVWF  xA6
10BE:  CALL   0242
10C2:  BTFSC  16.7
10C4:  BSF    FF2.7
10C6:  BRA    10AC
10C8:  CLRF   16
10CA:  BTFSC  FF2.7
10CC:  BSF    16.7
10CE:  BCF    FF2.7
10D0:  MOVFF  69,A6
10D4:  CALL   0242
10D8:  BTFSC  16.7
10DA:  BSF    FF2.7
....................                 rb1=0; 
10DC:  BCF    F81.1
....................                 delay_ms(quantum); 
10DE:  MOVFF  6A,96
10E2:  INCF   x96,F
10E4:  DECF   x96,F
10E6:  BTFSC  FD8.2
10E8:  BRA    1100
10EA:  CLRF   16
10EC:  BTFSC  FF2.7
10EE:  BSF    16.7
10F0:  BCF    FF2.7
10F2:  MOVLW  FF
10F4:  MOVWF  xA6
10F6:  CALL   0242
10FA:  BTFSC  16.7
10FC:  BSF    FF2.7
10FE:  BRA    10E4
1100:  CLRF   16
1102:  BTFSC  FF2.7
1104:  BSF    16.7
1106:  BCF    FF2.7
1108:  MOVFF  69,A6
110C:  CALL   0242
1110:  BTFSC  16.7
1112:  BSF    FF2.7
....................                                         } 
....................              else { 
1114:  BRA    1118
....................                     do_proceso1(); 
1116:  RCALL  0F5A
....................                   }   
....................              if(tecla_pulsada=='2'){ 
1118:  MOVF   17,W
111A:  SUBLW  32
111C:  BNZ   1120
....................                  
....................                    break; 
111E:  BRA    1134
....................                   } 
....................              if(tecla_pulsada=='3'){ 
1120:  MOVF   17,W
1122:  SUBLW  33
1124:  BNZ   1128
....................                    break; 
1126:  BRA    1134
....................                   } 
....................              if(tecla_pulsada=='a'){ 
1128:  MOVF   17,W
112A:  SUBLW  61
112C:  BNZ   1130
....................                    break; 
112E:  BRA    1134
....................                   } 
....................          } 
1130:  INCF   19,F
1132:  BRA    1066
....................   
....................      if(tecla_pulsada=='2'){ 
1134:  MOVF   17,W
1136:  SUBLW  32
1138:  BTFSS  FD8.2
113A:  BRA    1502
....................                for (contador2=1;contador2<=16;contador2++){ 
113C:  MOVLW  01
113E:  MOVWF  1A
1140:  MOVF   1A,W
1142:  SUBLW  10
1144:  BTFSS  FD8.0
1146:  BRA    12C0
....................                     copia2=contador2; 
1148:  MOVFF  1A,1D
114C:  CLRF   16
114E:  BTFSC  FF2.7
1150:  BSF    16.7
1152:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
1154:  MOVFF  6A,A5
1158:  MOVFF  69,A4
115C:  CLRF   xA7
115E:  MOVFF  19,A6
1162:  CALL   0268
1166:  BTFSC  16.7
1168:  BSF    FF2.7
116A:  MOVFF  02,97
116E:  MOVFF  01,96
1172:  MOVF   02,W
1174:  SUBWF  64,W
1176:  BNC   11F6
1178:  BNZ   1180
117A:  MOVF   x96,W
117C:  SUBWF  63,W
117E:  BNC   11F6
....................                       rb2=1; 
1180:  BSF    F81.2
....................                       rb1=1; 
1182:  BSF    F81.1
....................                       delay_ms(quantum); 
1184:  MOVFF  6A,96
1188:  INCF   x96,F
118A:  DECF   x96,F
118C:  BTFSC  FD8.2
118E:  BRA    11A6
1190:  CLRF   16
1192:  BTFSC  FF2.7
1194:  BSF    16.7
1196:  BCF    FF2.7
1198:  MOVLW  FF
119A:  MOVWF  xA6
119C:  CALL   0242
11A0:  BTFSC  16.7
11A2:  BSF    FF2.7
11A4:  BRA    118A
11A6:  CLRF   16
11A8:  BTFSC  FF2.7
11AA:  BSF    16.7
11AC:  BCF    FF2.7
11AE:  MOVFF  69,A6
11B2:  CALL   0242
11B6:  BTFSC  16.7
11B8:  BSF    FF2.7
....................                       rb1=0; 
11BA:  BCF    F81.1
....................                       rb2=0; 
11BC:  BCF    F81.2
....................                       delay_ms(quantum); 
11BE:  MOVFF  6A,96
11C2:  INCF   x96,F
11C4:  DECF   x96,F
11C6:  BTFSC  FD8.2
11C8:  BRA    11E0
11CA:  CLRF   16
11CC:  BTFSC  FF2.7
11CE:  BSF    16.7
11D0:  BCF    FF2.7
11D2:  MOVLW  FF
11D4:  MOVWF  xA6
11D6:  CALL   0242
11DA:  BTFSC  16.7
11DC:  BSF    FF2.7
11DE:  BRA    11C4
11E0:  CLRF   16
11E2:  BTFSC  FF2.7
11E4:  BSF    16.7
11E6:  BCF    FF2.7
11E8:  MOVFF  69,A6
11EC:  CALL   0242
11F0:  BTFSC  16.7
11F2:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
11F4:  BRA    129A
11F6:  CLRF   16
11F8:  BTFSC  FF2.7
11FA:  BSF    16.7
11FC:  BCF    FF2.7
....................  
....................                           if(quantum*contador2<time2){ 
11FE:  MOVFF  6A,A5
1202:  MOVFF  69,A4
1206:  CLRF   xA7
1208:  MOVFF  1A,A6
120C:  CALL   0268
1210:  BTFSC  16.7
1212:  BSF    FF2.7
1214:  MOVFF  02,97
1218:  MOVFF  01,96
121C:  MOVF   02,W
121E:  SUBWF  66,W
1220:  BNC   129A
1222:  BNZ   122A
1224:  MOVF   65,W
1226:  SUBWF  x96,W
1228:  BC    129A
....................                                rb2=1; 
122A:  BSF    F81.2
....................                                delay_ms(quantum); 
122C:  MOVFF  6A,96
1230:  INCF   x96,F
1232:  DECF   x96,F
1234:  BTFSC  FD8.2
1236:  BRA    124E
1238:  CLRF   16
123A:  BTFSC  FF2.7
123C:  BSF    16.7
123E:  BCF    FF2.7
1240:  MOVLW  FF
1242:  MOVWF  xA6
1244:  CALL   0242
1248:  BTFSC  16.7
124A:  BSF    FF2.7
124C:  BRA    1232
124E:  CLRF   16
1250:  BTFSC  FF2.7
1252:  BSF    16.7
1254:  BCF    FF2.7
1256:  MOVFF  69,A6
125A:  CALL   0242
125E:  BTFSC  16.7
1260:  BSF    FF2.7
....................                                rb2=0; 
1262:  BCF    F81.2
....................                                delay_ms(quantum); 
1264:  MOVFF  6A,96
1268:  INCF   x96,F
126A:  DECF   x96,F
126C:  BTFSC  FD8.2
126E:  BRA    1286
1270:  CLRF   16
1272:  BTFSC  FF2.7
1274:  BSF    16.7
1276:  BCF    FF2.7
1278:  MOVLW  FF
127A:  MOVWF  xA6
127C:  CALL   0242
1280:  BTFSC  16.7
1282:  BSF    FF2.7
1284:  BRA    126A
1286:  CLRF   16
1288:  BTFSC  FF2.7
128A:  BSF    16.7
128C:  BCF    FF2.7
128E:  MOVFF  69,A6
1292:  CALL   0242
1296:  BTFSC  16.7
1298:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
129A:  MOVF   19,W
129C:  SUBLW  0A
129E:  BNZ   12AA
12A0:  MOVF   1C,W
12A2:  SUBLW  09
12A4:  BNC   12AA
12A6:  RCALL  0F5A
....................                  else{ if(contador2==16) do_proceso2();} 
12A8:  BRA    12B2
12AA:  MOVF   1A,W
12AC:  SUBLW  10
12AE:  BNZ   12B2
12B0:  RCALL  0FB2
....................           
....................                  if(tecla_pulsada=='3'){ 
12B2:  MOVF   17,W
12B4:  SUBLW  33
12B6:  BNZ   12BA
....................                       break; 
12B8:  BRA    12C0
....................                   } 
....................                
....................                   contador1++; 
12BA:  INCF   19,F
....................                    
....................               } 
12BC:  INCF   1A,F
12BE:  BRA    1140
....................  
....................               if(tecla_pulsada=='3'){ 
12C0:  MOVF   17,W
12C2:  SUBLW  33
12C4:  BTFSS  FD8.2
12C6:  BRA    1500
....................                       for (contador3=1;contador3<=20;contador3++){ 
12C8:  MOVLW  01
12CA:  MOVWF  1B
12CC:  MOVF   1B,W
12CE:  SUBLW  14
12D0:  BTFSS  FD8.0
12D2:  BRA    1500
....................                            copia3=contador3; 
12D4:  MOVFF  1B,1E
12D8:  CLRF   16
12DA:  BTFSC  FF2.7
12DC:  BSF    16.7
12DE:  BCF    FF2.7
....................                            if(quantum*contador1<time1){ 
12E0:  MOVFF  6A,A5
12E4:  MOVFF  69,A4
12E8:  CLRF   xA7
12EA:  MOVFF  19,A6
12EE:  CALL   0268
12F2:  BTFSC  16.7
12F4:  BSF    FF2.7
12F6:  MOVFF  02,97
12FA:  MOVFF  01,96
12FE:  MOVF   02,W
1300:  SUBWF  64,W
1302:  BNC   1386
1304:  BNZ   130C
1306:  MOVF   63,W
1308:  SUBWF  x96,W
130A:  BC    1386
....................                             rb3=1; 
130C:  BSF    F81.3
....................                             rb2=1; 
130E:  BSF    F81.2
....................                             rb1=1; 
1310:  BSF    F81.1
....................                             delay_ms(quantum); 
1312:  MOVFF  6A,96
1316:  INCF   x96,F
1318:  DECF   x96,F
131A:  BTFSC  FD8.2
131C:  BRA    1334
131E:  CLRF   16
1320:  BTFSC  FF2.7
1322:  BSF    16.7
1324:  BCF    FF2.7
1326:  MOVLW  FF
1328:  MOVWF  xA6
132A:  CALL   0242
132E:  BTFSC  16.7
1330:  BSF    FF2.7
1332:  BRA    1318
1334:  CLRF   16
1336:  BTFSC  FF2.7
1338:  BSF    16.7
133A:  BCF    FF2.7
133C:  MOVFF  69,A6
1340:  CALL   0242
1344:  BTFSC  16.7
1346:  BSF    FF2.7
....................                             rb3=0; 
1348:  BCF    F81.3
....................                             rb1=0; 
134A:  BCF    F81.1
....................                             rb2=0; 
134C:  BCF    F81.2
....................                             delay_ms(quantum); 
134E:  MOVFF  6A,96
1352:  INCF   x96,F
1354:  DECF   x96,F
1356:  BTFSC  FD8.2
1358:  BRA    1370
135A:  CLRF   16
135C:  BTFSC  FF2.7
135E:  BSF    16.7
1360:  BCF    FF2.7
1362:  MOVLW  FF
1364:  MOVWF  xA6
1366:  CALL   0242
136A:  BTFSC  16.7
136C:  BSF    FF2.7
136E:  BRA    1354
1370:  CLRF   16
1372:  BTFSC  FF2.7
1374:  BSF    16.7
1376:  BCF    FF2.7
1378:  MOVFF  69,A6
137C:  CALL   0242
1380:  BTFSC  16.7
1382:  BSF    FF2.7
....................                                                }                                              
....................                    else  { 
1384:  BRA    14D4
1386:  CLRF   16
1388:  BTFSC  FF2.7
138A:  BSF    16.7
138C:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<time2){ 
138E:  MOVFF  6A,A5
1392:  MOVFF  69,A4
1396:  CLRF   xA7
1398:  MOVFF  1A,A6
139C:  CALL   0268
13A0:  BTFSC  16.7
13A2:  BSF    FF2.7
13A4:  MOVFF  02,97
13A8:  MOVFF  01,96
13AC:  MOVF   02,W
13AE:  SUBWF  66,W
13B0:  BNC   1430
13B2:  BNZ   13BA
13B4:  MOVF   65,W
13B6:  SUBWF  x96,W
13B8:  BC    1430
....................                                rb3=1; 
13BA:  BSF    F81.3
....................                                rb2=1; 
13BC:  BSF    F81.2
....................                                delay_ms(quantum); 
13BE:  MOVFF  6A,96
13C2:  INCF   x96,F
13C4:  DECF   x96,F
13C6:  BTFSC  FD8.2
13C8:  BRA    13E0
13CA:  CLRF   16
13CC:  BTFSC  FF2.7
13CE:  BSF    16.7
13D0:  BCF    FF2.7
13D2:  MOVLW  FF
13D4:  MOVWF  xA6
13D6:  CALL   0242
13DA:  BTFSC  16.7
13DC:  BSF    FF2.7
13DE:  BRA    13C4
13E0:  CLRF   16
13E2:  BTFSC  FF2.7
13E4:  BSF    16.7
13E6:  BCF    FF2.7
13E8:  MOVFF  69,A6
13EC:  CALL   0242
13F0:  BTFSC  16.7
13F2:  BSF    FF2.7
....................                                rb3=0; 
13F4:  BCF    F81.3
....................                                rb2=0; 
13F6:  BCF    F81.2
....................                                delay_ms(quantum); 
13F8:  MOVFF  6A,96
13FC:  INCF   x96,F
13FE:  DECF   x96,F
1400:  BTFSC  FD8.2
1402:  BRA    141A
1404:  CLRF   16
1406:  BTFSC  FF2.7
1408:  BSF    16.7
140A:  BCF    FF2.7
140C:  MOVLW  FF
140E:  MOVWF  xA6
1410:  CALL   0242
1414:  BTFSC  16.7
1416:  BSF    FF2.7
1418:  BRA    13FE
141A:  CLRF   16
141C:  BTFSC  FF2.7
141E:  BSF    16.7
1420:  BCF    FF2.7
1422:  MOVFF  69,A6
1426:  CALL   0242
142A:  BTFSC  16.7
142C:  BSF    FF2.7
....................                                                     }  
....................                      else { 
142E:  BRA    14D4
1430:  CLRF   16
1432:  BTFSC  FF2.7
1434:  BSF    16.7
1436:  BCF    FF2.7
....................                          if(quantum*contador3<time3){ 
1438:  MOVFF  6A,A5
143C:  MOVFF  69,A4
1440:  CLRF   xA7
1442:  MOVFF  1B,A6
1446:  CALL   0268
144A:  BTFSC  16.7
144C:  BSF    FF2.7
144E:  MOVFF  02,97
1452:  MOVFF  01,96
1456:  MOVF   02,W
1458:  SUBWF  68,W
145A:  BNC   14D4
145C:  BNZ   1464
145E:  MOVF   67,W
1460:  SUBWF  x96,W
1462:  BC    14D4
....................                                rb3=1; 
1464:  BSF    F81.3
....................                                delay_ms(quantum); 
1466:  MOVFF  6A,96
146A:  INCF   x96,F
146C:  DECF   x96,F
146E:  BTFSC  FD8.2
1470:  BRA    1488
1472:  CLRF   16
1474:  BTFSC  FF2.7
1476:  BSF    16.7
1478:  BCF    FF2.7
147A:  MOVLW  FF
147C:  MOVWF  xA6
147E:  CALL   0242
1482:  BTFSC  16.7
1484:  BSF    FF2.7
1486:  BRA    146C
1488:  CLRF   16
148A:  BTFSC  FF2.7
148C:  BSF    16.7
148E:  BCF    FF2.7
1490:  MOVFF  69,A6
1494:  CALL   0242
1498:  BTFSC  16.7
149A:  BSF    FF2.7
....................                                rb3=0; 
149C:  BCF    F81.3
....................                                delay_ms(quantum); 
149E:  MOVFF  6A,96
14A2:  INCF   x96,F
14A4:  DECF   x96,F
14A6:  BTFSC  FD8.2
14A8:  BRA    14C0
14AA:  CLRF   16
14AC:  BTFSC  FF2.7
14AE:  BSF    16.7
14B0:  BCF    FF2.7
14B2:  MOVLW  FF
14B4:  MOVWF  xA6
14B6:  CALL   0242
14BA:  BTFSC  16.7
14BC:  BSF    FF2.7
14BE:  BRA    14A4
14C0:  CLRF   16
14C2:  BTFSC  FF2.7
14C4:  BSF    16.7
14C6:  BCF    FF2.7
14C8:  MOVFF  69,A6
14CC:  CALL   0242
14D0:  BTFSC  16.7
14D2:  BSF    FF2.7
....................                                                      }  
....................                              } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1();                 
14D4:  MOVF   19,W
14D6:  SUBLW  0A
14D8:  BNZ   14E2
14DA:  MOVF   1C,W
14DC:  SUBLW  09
14DE:  BNC   14E2
14E0:  RCALL  0F5A
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
14E2:  MOVF   1A,W
14E4:  SUBLW  10
14E6:  BNZ   14F0
14E8:  MOVF   1D,W
14EA:  SUBLW  0F
14EC:  BNC   14F0
14EE:  RCALL  0FB2
....................                  if(contador3==20 )do_proceso3(); 
14F0:  MOVF   1B,W
14F2:  SUBLW  14
14F4:  BNZ   14F8
14F6:  RCALL  100A
....................  
....................                   contador1++; 
14F8:  INCF   19,F
....................                   contador2++; 
14FA:  INCF   1A,F
....................                  
....................               } 
14FC:  INCF   1B,F
14FE:  BRA    12CC
....................                     
....................                    
....................    } 
....................          
....................                
.................... } 
....................           else { 
1500:  BRA    1B14
....................           if(tecla_pulsada=='3'){ 
1502:  MOVF   17,W
1504:  SUBLW  33
1506:  BTFSS  FD8.2
1508:  BRA    1B14
....................                for (contador3=1;contador3<=20;contador3++){ 
150A:  MOVLW  01
150C:  MOVWF  1B
150E:  MOVF   1B,W
1510:  SUBLW  14
1512:  BTFSS  FD8.0
1514:  BRA    168C
....................                     copia3=contador3; 
1516:  MOVFF  1B,1E
151A:  CLRF   16
151C:  BTFSC  FF2.7
151E:  BSF    16.7
1520:  BCF    FF2.7
....................                     if(quantum*contador1<time1){ 
1522:  MOVFF  6A,A5
1526:  MOVFF  69,A4
152A:  CLRF   xA7
152C:  MOVFF  19,A6
1530:  CALL   0268
1534:  BTFSC  16.7
1536:  BSF    FF2.7
1538:  MOVFF  02,97
153C:  MOVFF  01,96
1540:  MOVF   02,W
1542:  SUBWF  64,W
1544:  BNC   15C4
1546:  BNZ   154E
1548:  MOVF   63,W
154A:  SUBWF  x96,W
154C:  BC    15C4
....................                       rb3=1; 
154E:  BSF    F81.3
....................                       rb1=1; 
1550:  BSF    F81.1
....................                       delay_ms(quantum); 
1552:  MOVFF  6A,96
1556:  INCF   x96,F
1558:  DECF   x96,F
155A:  BTFSC  FD8.2
155C:  BRA    1574
155E:  CLRF   16
1560:  BTFSC  FF2.7
1562:  BSF    16.7
1564:  BCF    FF2.7
1566:  MOVLW  FF
1568:  MOVWF  xA6
156A:  CALL   0242
156E:  BTFSC  16.7
1570:  BSF    FF2.7
1572:  BRA    1558
1574:  CLRF   16
1576:  BTFSC  FF2.7
1578:  BSF    16.7
157A:  BCF    FF2.7
157C:  MOVFF  69,A6
1580:  CALL   0242
1584:  BTFSC  16.7
1586:  BSF    FF2.7
....................                       rb3=0; 
1588:  BCF    F81.3
....................                       rb1=0; 
158A:  BCF    F81.1
....................                       delay_ms(quantum); 
158C:  MOVFF  6A,96
1590:  INCF   x96,F
1592:  DECF   x96,F
1594:  BTFSC  FD8.2
1596:  BRA    15AE
1598:  CLRF   16
159A:  BTFSC  FF2.7
159C:  BSF    16.7
159E:  BCF    FF2.7
15A0:  MOVLW  FF
15A2:  MOVWF  xA6
15A4:  CALL   0242
15A8:  BTFSC  16.7
15AA:  BSF    FF2.7
15AC:  BRA    1592
15AE:  CLRF   16
15B0:  BTFSC  FF2.7
15B2:  BSF    16.7
15B4:  BCF    FF2.7
15B6:  MOVFF  69,A6
15BA:  CALL   0242
15BE:  BTFSC  16.7
15C0:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
15C2:  BRA    1668
15C4:  CLRF   16
15C6:  BTFSC  FF2.7
15C8:  BSF    16.7
15CA:  BCF    FF2.7
....................                     
....................                           if(quantum*contador3<=time3){ 
15CC:  MOVFF  6A,A5
15D0:  MOVFF  69,A4
15D4:  CLRF   xA7
15D6:  MOVFF  1B,A6
15DA:  CALL   0268
15DE:  BTFSC  16.7
15E0:  BSF    FF2.7
15E2:  MOVFF  02,97
15E6:  MOVFF  01,96
15EA:  MOVF   02,W
15EC:  SUBWF  68,W
15EE:  BNC   1668
15F0:  BNZ   15F8
15F2:  MOVF   x96,W
15F4:  SUBWF  67,W
15F6:  BNC   1668
....................                                rb3=1; 
15F8:  BSF    F81.3
....................                                delay_ms(quantum); 
15FA:  MOVFF  6A,96
15FE:  INCF   x96,F
1600:  DECF   x96,F
1602:  BTFSC  FD8.2
1604:  BRA    161C
1606:  CLRF   16
1608:  BTFSC  FF2.7
160A:  BSF    16.7
160C:  BCF    FF2.7
160E:  MOVLW  FF
1610:  MOVWF  xA6
1612:  CALL   0242
1616:  BTFSC  16.7
1618:  BSF    FF2.7
161A:  BRA    1600
161C:  CLRF   16
161E:  BTFSC  FF2.7
1620:  BSF    16.7
1622:  BCF    FF2.7
1624:  MOVFF  69,A6
1628:  CALL   0242
162C:  BTFSC  16.7
162E:  BSF    FF2.7
....................                                rb3=0; 
1630:  BCF    F81.3
....................                                delay_ms(quantum); 
1632:  MOVFF  6A,96
1636:  INCF   x96,F
1638:  DECF   x96,F
163A:  BTFSC  FD8.2
163C:  BRA    1654
163E:  CLRF   16
1640:  BTFSC  FF2.7
1642:  BSF    16.7
1644:  BCF    FF2.7
1646:  MOVLW  FF
1648:  MOVWF  xA6
164A:  CALL   0242
164E:  BTFSC  16.7
1650:  BSF    FF2.7
1652:  BRA    1638
1654:  CLRF   16
1656:  BTFSC  FF2.7
1658:  BSF    16.7
165A:  BCF    FF2.7
165C:  MOVFF  69,A6
1660:  CALL   0242
1664:  BTFSC  16.7
1666:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
1668:  MOVF   19,W
166A:  SUBLW  0A
166C:  BNZ   1676
166E:  MOVF   1C,W
1670:  SUBLW  09
1672:  BNC   1676
1674:  RCALL  0F5A
....................                  if(contador3==20 )do_proceso3(); 
1676:  MOVF   1B,W
1678:  SUBLW  14
167A:  BNZ   167E
167C:  RCALL  100A
....................                   
....................                  if(tecla_pulsada=='2'){ 
167E:  MOVF   17,W
1680:  SUBLW  32
1682:  BNZ   1686
....................                       break; 
1684:  BRA    168C
....................                   } 
....................                   contador1++; 
1686:  INCF   19,F
....................  
....................                  } 
1688:  INCF   1B,F
168A:  BRA    150E
....................                  if(tecla_pulsada=='2'){ 
168C:  MOVF   17,W
168E:  SUBLW  32
1690:  BTFSS  FD8.2
1692:  BRA    1B14
....................                          if(copia3<=4){///////////// 
1694:  MOVF   1E,W
1696:  SUBLW  04
1698:  BTFSS  FD8.0
169A:  BRA    18D6
....................                            for (contador3=copia3;contador3<=20;contador3++){ 
169C:  MOVFF  1E,1B
16A0:  MOVF   1B,W
16A2:  SUBLW  14
16A4:  BTFSS  FD8.0
16A6:  BRA    18D4
....................                     copia3=contador3; 
16A8:  MOVFF  1B,1E
16AC:  CLRF   16
16AE:  BTFSC  FF2.7
16B0:  BSF    16.7
16B2:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
16B4:  MOVFF  6A,A5
16B8:  MOVFF  69,A4
16BC:  CLRF   xA7
16BE:  MOVFF  19,A6
16C2:  CALL   0268
16C6:  BTFSC  16.7
16C8:  BSF    FF2.7
16CA:  MOVFF  02,97
16CE:  MOVFF  01,96
16D2:  MOVF   02,W
16D4:  SUBWF  64,W
16D6:  BNC   175A
16D8:  BNZ   16E0
16DA:  MOVF   x96,W
16DC:  SUBWF  63,W
16DE:  BNC   175A
....................                       rb2=1; 
16E0:  BSF    F81.2
....................                       rb3=1; 
16E2:  BSF    F81.3
....................                       rb1=1; 
16E4:  BSF    F81.1
....................                       delay_ms(quantum); 
16E6:  MOVFF  6A,96
16EA:  INCF   x96,F
16EC:  DECF   x96,F
16EE:  BTFSC  FD8.2
16F0:  BRA    1708
16F2:  CLRF   16
16F4:  BTFSC  FF2.7
16F6:  BSF    16.7
16F8:  BCF    FF2.7
16FA:  MOVLW  FF
16FC:  MOVWF  xA6
16FE:  CALL   0242
1702:  BTFSC  16.7
1704:  BSF    FF2.7
1706:  BRA    16EC
1708:  CLRF   16
170A:  BTFSC  FF2.7
170C:  BSF    16.7
170E:  BCF    FF2.7
1710:  MOVFF  69,A6
1714:  CALL   0242
1718:  BTFSC  16.7
171A:  BSF    FF2.7
....................                       rb2=0; 
171C:  BCF    F81.2
....................                       rb3=0; 
171E:  BCF    F81.3
....................                       rb1=0; 
1720:  BCF    F81.1
....................                       delay_ms(quantum); 
1722:  MOVFF  6A,96
1726:  INCF   x96,F
1728:  DECF   x96,F
172A:  BTFSC  FD8.2
172C:  BRA    1744
172E:  CLRF   16
1730:  BTFSC  FF2.7
1732:  BSF    16.7
1734:  BCF    FF2.7
1736:  MOVLW  FF
1738:  MOVWF  xA6
173A:  CALL   0242
173E:  BTFSC  16.7
1740:  BSF    FF2.7
1742:  BRA    1728
1744:  CLRF   16
1746:  BTFSC  FF2.7
1748:  BSF    16.7
174A:  BCF    FF2.7
174C:  MOVFF  69,A6
1750:  CALL   0242
1754:  BTFSC  16.7
1756:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
1758:  BRA    18A8
175A:  CLRF   16
175C:  BTFSC  FF2.7
175E:  BSF    16.7
1760:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<=time2){ 
1762:  MOVFF  6A,A5
1766:  MOVFF  69,A4
176A:  CLRF   xA7
176C:  MOVFF  1A,A6
1770:  CALL   0268
1774:  BTFSC  16.7
1776:  BSF    FF2.7
1778:  MOVFF  02,97
177C:  MOVFF  01,96
1780:  MOVF   02,W
1782:  SUBWF  66,W
1784:  BNC   1804
1786:  BNZ   178E
1788:  MOVF   x96,W
178A:  SUBWF  65,W
178C:  BNC   1804
....................                                rb2=1; 
178E:  BSF    F81.2
....................                                rb3=1; 
1790:  BSF    F81.3
....................                                delay_ms(quantum); 
1792:  MOVFF  6A,96
1796:  INCF   x96,F
1798:  DECF   x96,F
179A:  BTFSC  FD8.2
179C:  BRA    17B4
179E:  CLRF   16
17A0:  BTFSC  FF2.7
17A2:  BSF    16.7
17A4:  BCF    FF2.7
17A6:  MOVLW  FF
17A8:  MOVWF  xA6
17AA:  CALL   0242
17AE:  BTFSC  16.7
17B0:  BSF    FF2.7
17B2:  BRA    1798
17B4:  CLRF   16
17B6:  BTFSC  FF2.7
17B8:  BSF    16.7
17BA:  BCF    FF2.7
17BC:  MOVFF  69,A6
17C0:  CALL   0242
17C4:  BTFSC  16.7
17C6:  BSF    FF2.7
....................                                rb2=0; 
17C8:  BCF    F81.2
....................                                rb3=0; 
17CA:  BCF    F81.3
....................                                delay_ms(quantum); 
17CC:  MOVFF  6A,96
17D0:  INCF   x96,F
17D2:  DECF   x96,F
17D4:  BTFSC  FD8.2
17D6:  BRA    17EE
17D8:  CLRF   16
17DA:  BTFSC  FF2.7
17DC:  BSF    16.7
17DE:  BCF    FF2.7
17E0:  MOVLW  FF
17E2:  MOVWF  xA6
17E4:  CALL   0242
17E8:  BTFSC  16.7
17EA:  BSF    FF2.7
17EC:  BRA    17D2
17EE:  CLRF   16
17F0:  BTFSC  FF2.7
17F2:  BSF    16.7
17F4:  BCF    FF2.7
17F6:  MOVFF  69,A6
17FA:  CALL   0242
17FE:  BTFSC  16.7
1800:  BSF    FF2.7
....................                                                      }  
....................                              else{ 
1802:  BRA    18A8
1804:  CLRF   16
1806:  BTFSC  FF2.7
1808:  BSF    16.7
180A:  BCF    FF2.7
....................                                         if(quantum*contador3<=time3){ 
180C:  MOVFF  6A,A5
1810:  MOVFF  69,A4
1814:  CLRF   xA7
1816:  MOVFF  1B,A6
181A:  CALL   0268
181E:  BTFSC  16.7
1820:  BSF    FF2.7
1822:  MOVFF  02,97
1826:  MOVFF  01,96
182A:  MOVF   02,W
182C:  SUBWF  68,W
182E:  BNC   18A8
1830:  BNZ   1838
1832:  MOVF   x96,W
1834:  SUBWF  67,W
1836:  BNC   18A8
....................                                rb3=1; 
1838:  BSF    F81.3
....................                                
....................                                delay_ms(quantum); 
183A:  MOVFF  6A,96
183E:  INCF   x96,F
1840:  DECF   x96,F
1842:  BTFSC  FD8.2
1844:  BRA    185C
1846:  CLRF   16
1848:  BTFSC  FF2.7
184A:  BSF    16.7
184C:  BCF    FF2.7
184E:  MOVLW  FF
1850:  MOVWF  xA6
1852:  CALL   0242
1856:  BTFSC  16.7
1858:  BSF    FF2.7
185A:  BRA    1840
185C:  CLRF   16
185E:  BTFSC  FF2.7
1860:  BSF    16.7
1862:  BCF    FF2.7
1864:  MOVFF  69,A6
1868:  CALL   0242
186C:  BTFSC  16.7
186E:  BSF    FF2.7
....................                                rb3=0; 
1870:  BCF    F81.3
....................                                
....................                                delay_ms(quantum); 
1872:  MOVFF  6A,96
1876:  INCF   x96,F
1878:  DECF   x96,F
187A:  BTFSC  FD8.2
187C:  BRA    1894
187E:  CLRF   16
1880:  BTFSC  FF2.7
1882:  BSF    16.7
1884:  BCF    FF2.7
1886:  MOVLW  FF
1888:  MOVWF  xA6
188A:  CALL   0242
188E:  BTFSC  16.7
1890:  BSF    FF2.7
1892:  BRA    1878
1894:  CLRF   16
1896:  BTFSC  FF2.7
1898:  BSF    16.7
189A:  BCF    FF2.7
189C:  MOVFF  69,A6
18A0:  CALL   0242
18A4:  BTFSC  16.7
18A6:  BSF    FF2.7
....................                                                      }                
....................                                                       
....................                                                      } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
18A8:  MOVF   19,W
18AA:  SUBLW  0A
18AC:  BNZ   18B8
18AE:  MOVF   1C,W
18B0:  SUBLW  09
18B2:  BNC   18B8
18B4:  CALL   0F5A
....................                  if(contador3==20 )do_proceso3(); 
18B8:  MOVF   1B,W
18BA:  SUBLW  14
18BC:  BNZ   18C2
18BE:  CALL   100A
....................                  if(contador2==16 )do_proceso2(); 
18C2:  MOVF   1A,W
18C4:  SUBLW  10
18C6:  BNZ   18CC
18C8:  CALL   0FB2
....................                   contador1++; 
18CC:  INCF   19,F
....................                   contador2++; 
18CE:  INCF   1A,F
....................  
....................                  } 
18D0:  INCF   1B,F
18D2:  BRA    16A0
....................                          } 
....................                          else{ 
18D4:  BRA    1B14
....................                               for (contador2=1;contador2<=16;contador2++){ 
18D6:  MOVLW  01
18D8:  MOVWF  1A
18DA:  MOVF   1A,W
18DC:  SUBLW  10
18DE:  BTFSS  FD8.0
18E0:  BRA    1B14
....................                     copia2=contador2; 
18E2:  MOVFF  1A,1D
18E6:  CLRF   16
18E8:  BTFSC  FF2.7
18EA:  BSF    16.7
18EC:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
18EE:  MOVFF  6A,A5
18F2:  MOVFF  69,A4
18F6:  CLRF   xA7
18F8:  MOVFF  19,A6
18FC:  CALL   0268
1900:  BTFSC  16.7
1902:  BSF    FF2.7
1904:  MOVFF  02,97
1908:  MOVFF  01,96
190C:  MOVF   02,W
190E:  SUBWF  64,W
1910:  BNC   1994
1912:  BNZ   191A
1914:  MOVF   x96,W
1916:  SUBWF  63,W
1918:  BNC   1994
....................                       rb2=1; 
191A:  BSF    F81.2
....................                       rb3=1; 
191C:  BSF    F81.3
....................                       rb1=1; 
191E:  BSF    F81.1
....................                       delay_ms(quantum); 
1920:  MOVFF  6A,96
1924:  INCF   x96,F
1926:  DECF   x96,F
1928:  BTFSC  FD8.2
192A:  BRA    1942
192C:  CLRF   16
192E:  BTFSC  FF2.7
1930:  BSF    16.7
1932:  BCF    FF2.7
1934:  MOVLW  FF
1936:  MOVWF  xA6
1938:  CALL   0242
193C:  BTFSC  16.7
193E:  BSF    FF2.7
1940:  BRA    1926
1942:  CLRF   16
1944:  BTFSC  FF2.7
1946:  BSF    16.7
1948:  BCF    FF2.7
194A:  MOVFF  69,A6
194E:  CALL   0242
1952:  BTFSC  16.7
1954:  BSF    FF2.7
....................                       rb2=0; 
1956:  BCF    F81.2
....................                       rb3=0; 
1958:  BCF    F81.3
....................                       rb1=0; 
195A:  BCF    F81.1
....................                       delay_ms(quantum); 
195C:  MOVFF  6A,96
1960:  INCF   x96,F
1962:  DECF   x96,F
1964:  BTFSC  FD8.2
1966:  BRA    197E
1968:  CLRF   16
196A:  BTFSC  FF2.7
196C:  BSF    16.7
196E:  BCF    FF2.7
1970:  MOVLW  FF
1972:  MOVWF  xA6
1974:  CALL   0242
1978:  BTFSC  16.7
197A:  BSF    FF2.7
197C:  BRA    1962
197E:  CLRF   16
1980:  BTFSC  FF2.7
1982:  BSF    16.7
1984:  BCF    FF2.7
1986:  MOVFF  69,A6
198A:  CALL   0242
198E:  BTFSC  16.7
1990:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
1992:  BRA    1AE2
1994:  CLRF   16
1996:  BTFSC  FF2.7
1998:  BSF    16.7
199A:  BCF    FF2.7
....................                     
....................                           if(quantum*contador3<=time3){ 
199C:  MOVFF  6A,A5
19A0:  MOVFF  69,A4
19A4:  CLRF   xA7
19A6:  MOVFF  1B,A6
19AA:  CALL   0268
19AE:  BTFSC  16.7
19B0:  BSF    FF2.7
19B2:  MOVFF  02,97
19B6:  MOVFF  01,96
19BA:  MOVF   02,W
19BC:  SUBWF  68,W
19BE:  BNC   1A3E
19C0:  BNZ   19C8
19C2:  MOVF   x96,W
19C4:  SUBWF  67,W
19C6:  BNC   1A3E
....................                                rb2=1; 
19C8:  BSF    F81.2
....................                                rb3=1; 
19CA:  BSF    F81.3
....................                                delay_ms(quantum); 
19CC:  MOVFF  6A,96
19D0:  INCF   x96,F
19D2:  DECF   x96,F
19D4:  BTFSC  FD8.2
19D6:  BRA    19EE
19D8:  CLRF   16
19DA:  BTFSC  FF2.7
19DC:  BSF    16.7
19DE:  BCF    FF2.7
19E0:  MOVLW  FF
19E2:  MOVWF  xA6
19E4:  CALL   0242
19E8:  BTFSC  16.7
19EA:  BSF    FF2.7
19EC:  BRA    19D2
19EE:  CLRF   16
19F0:  BTFSC  FF2.7
19F2:  BSF    16.7
19F4:  BCF    FF2.7
19F6:  MOVFF  69,A6
19FA:  CALL   0242
19FE:  BTFSC  16.7
1A00:  BSF    FF2.7
....................                                rb2=0; 
1A02:  BCF    F81.2
....................                                rb3=0; 
1A04:  BCF    F81.3
....................                                delay_ms(quantum); 
1A06:  MOVFF  6A,96
1A0A:  INCF   x96,F
1A0C:  DECF   x96,F
1A0E:  BTFSC  FD8.2
1A10:  BRA    1A28
1A12:  CLRF   16
1A14:  BTFSC  FF2.7
1A16:  BSF    16.7
1A18:  BCF    FF2.7
1A1A:  MOVLW  FF
1A1C:  MOVWF  xA6
1A1E:  CALL   0242
1A22:  BTFSC  16.7
1A24:  BSF    FF2.7
1A26:  BRA    1A0C
1A28:  CLRF   16
1A2A:  BTFSC  FF2.7
1A2C:  BSF    16.7
1A2E:  BCF    FF2.7
1A30:  MOVFF  69,A6
1A34:  CALL   0242
1A38:  BTFSC  16.7
1A3A:  BSF    FF2.7
....................                                                      }  
....................                              else{ 
1A3C:  BRA    1AE2
1A3E:  CLRF   16
1A40:  BTFSC  FF2.7
1A42:  BSF    16.7
1A44:  BCF    FF2.7
....................                                         if(quantum*contador2<=time2){ 
1A46:  MOVFF  6A,A5
1A4A:  MOVFF  69,A4
1A4E:  CLRF   xA7
1A50:  MOVFF  1A,A6
1A54:  CALL   0268
1A58:  BTFSC  16.7
1A5A:  BSF    FF2.7
1A5C:  MOVFF  02,97
1A60:  MOVFF  01,96
1A64:  MOVF   02,W
1A66:  SUBWF  66,W
1A68:  BNC   1AE2
1A6A:  BNZ   1A72
1A6C:  MOVF   x96,W
1A6E:  SUBWF  65,W
1A70:  BNC   1AE2
....................                                rb2=1; 
1A72:  BSF    F81.2
....................                                
....................                                delay_ms(quantum); 
1A74:  MOVFF  6A,96
1A78:  INCF   x96,F
1A7A:  DECF   x96,F
1A7C:  BTFSC  FD8.2
1A7E:  BRA    1A96
1A80:  CLRF   16
1A82:  BTFSC  FF2.7
1A84:  BSF    16.7
1A86:  BCF    FF2.7
1A88:  MOVLW  FF
1A8A:  MOVWF  xA6
1A8C:  CALL   0242
1A90:  BTFSC  16.7
1A92:  BSF    FF2.7
1A94:  BRA    1A7A
1A96:  CLRF   16
1A98:  BTFSC  FF2.7
1A9A:  BSF    16.7
1A9C:  BCF    FF2.7
1A9E:  MOVFF  69,A6
1AA2:  CALL   0242
1AA6:  BTFSC  16.7
1AA8:  BSF    FF2.7
....................                                rb2=0; 
1AAA:  BCF    F81.2
....................                                
....................                                delay_ms(quantum); 
1AAC:  MOVFF  6A,96
1AB0:  INCF   x96,F
1AB2:  DECF   x96,F
1AB4:  BTFSC  FD8.2
1AB6:  BRA    1ACE
1AB8:  CLRF   16
1ABA:  BTFSC  FF2.7
1ABC:  BSF    16.7
1ABE:  BCF    FF2.7
1AC0:  MOVLW  FF
1AC2:  MOVWF  xA6
1AC4:  CALL   0242
1AC8:  BTFSC  16.7
1ACA:  BSF    FF2.7
1ACC:  BRA    1AB2
1ACE:  CLRF   16
1AD0:  BTFSC  FF2.7
1AD2:  BSF    16.7
1AD4:  BCF    FF2.7
1AD6:  MOVFF  69,A6
1ADA:  CALL   0242
1ADE:  BTFSC  16.7
1AE0:  BSF    FF2.7
....................                                                      }                
....................                                                       
....................                                                      } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
1AE2:  MOVF   19,W
1AE4:  SUBLW  0A
1AE6:  BNZ   1AF2
1AE8:  MOVF   1C,W
1AEA:  SUBLW  09
1AEC:  BNC   1AF2
1AEE:  CALL   0F5A
....................                  if(contador3==20 && copia3<20)do_proceso3(); 
1AF2:  MOVF   1B,W
1AF4:  SUBLW  14
1AF6:  BNZ   1B02
1AF8:  MOVF   1E,W
1AFA:  SUBLW  13
1AFC:  BNC   1B02
1AFE:  CALL   100A
....................                  if(contador2==16 )do_proceso2(); 
1B02:  MOVF   1A,W
1B04:  SUBLW  10
1B06:  BNZ   1B0C
1B08:  CALL   0FB2
....................                   contador1++; 
1B0C:  INCF   19,F
....................                   contador3++; 
1B0E:  INCF   1B,F
....................  
....................                  } 
1B10:  INCF   1A,F
1B12:  BRA    18DA
....................                              } 
....................                   
....................                                        } 
....................               } 
.................... }   
....................           } 
1B14:  GOTO   3C56 (RETURN)
....................            
.................... //////////////////////////////////////////// 
.................... void do_proceso22(){ 
.................... for (contador2=1;contador2<=16;contador2++){ 
1B18:  MOVLW  01
1B1A:  MOVWF  1A
1B1C:  MOVF   1A,W
1B1E:  SUBLW  10
1B20:  BNC   1BE4
....................              copia2=contador2; 
1B22:  MOVFF  1A,1D
1B26:  CLRF   16
1B28:  BTFSC  FF2.7
1B2A:  BSF    16.7
1B2C:  BCF    FF2.7
....................              if(quantum*contador2<time2){ 
1B2E:  MOVFF  6A,A5
1B32:  MOVFF  69,A4
1B36:  CLRF   xA7
1B38:  MOVFF  1A,A6
1B3C:  CALL   0268
1B40:  BTFSC  16.7
1B42:  BSF    FF2.7
1B44:  MOVFF  02,97
1B48:  MOVFF  01,96
1B4C:  MOVF   02,W
1B4E:  SUBWF  66,W
1B50:  BNC   1BCC
1B52:  BNZ   1B5A
1B54:  MOVF   65,W
1B56:  SUBWF  x96,W
1B58:  BC    1BCC
....................                 rb2=1; 
1B5A:  BSF    F81.2
....................                 delay_ms(quantum); 
1B5C:  MOVFF  6A,96
1B60:  INCF   x96,F
1B62:  DECF   x96,F
1B64:  BTFSC  FD8.2
1B66:  BRA    1B7E
1B68:  CLRF   16
1B6A:  BTFSC  FF2.7
1B6C:  BSF    16.7
1B6E:  BCF    FF2.7
1B70:  MOVLW  FF
1B72:  MOVWF  xA6
1B74:  CALL   0242
1B78:  BTFSC  16.7
1B7A:  BSF    FF2.7
1B7C:  BRA    1B62
1B7E:  CLRF   16
1B80:  BTFSC  FF2.7
1B82:  BSF    16.7
1B84:  BCF    FF2.7
1B86:  MOVFF  69,A6
1B8A:  CALL   0242
1B8E:  BTFSC  16.7
1B90:  BSF    FF2.7
....................                 rb2=0; 
1B92:  BCF    F81.2
....................                 delay_ms(quantum); 
1B94:  MOVFF  6A,96
1B98:  INCF   x96,F
1B9A:  DECF   x96,F
1B9C:  BTFSC  FD8.2
1B9E:  BRA    1BB6
1BA0:  CLRF   16
1BA2:  BTFSC  FF2.7
1BA4:  BSF    16.7
1BA6:  BCF    FF2.7
1BA8:  MOVLW  FF
1BAA:  MOVWF  xA6
1BAC:  CALL   0242
1BB0:  BTFSC  16.7
1BB2:  BSF    FF2.7
1BB4:  BRA    1B9A
1BB6:  CLRF   16
1BB8:  BTFSC  FF2.7
1BBA:  BSF    16.7
1BBC:  BCF    FF2.7
1BBE:  MOVFF  69,A6
1BC2:  CALL   0242
1BC6:  BTFSC  16.7
1BC8:  BSF    FF2.7
....................                                         } 
....................              else { 
1BCA:  BRA    1BD0
....................                     do_proceso2(); 
1BCC:  CALL   0FB2
....................                    }   
....................              if(tecla_pulsada=='1'){ 
1BD0:  MOVF   17,W
1BD2:  SUBLW  31
1BD4:  BNZ   1BD8
....................                    break; 
1BD6:  BRA    1BE4
....................                   } 
....................              if(tecla_pulsada=='3'){ 
1BD8:  MOVF   17,W
1BDA:  SUBLW  33
1BDC:  BNZ   1BE0
....................                    break; 
1BDE:  BRA    1BE4
....................                   } 
....................          } 
1BE0:  INCF   1A,F
1BE2:  BRA    1B1C
....................   
....................      if(tecla_pulsada=='1'){ 
1BE4:  MOVF   17,W
1BE6:  SUBLW  31
1BE8:  BTFSS  FD8.2
1BEA:  BRA    21FE
....................                if(copia2<=6){ 
1BEC:  MOVF   1D,W
1BEE:  SUBLW  06
1BF0:  BTFSS  FD8.0
1BF2:  BRA    1D7C
....................                for (contador2=copia2;contador2<=16;contador2++){ 
1BF4:  MOVFF  1D,1A
1BF8:  MOVF   1A,W
1BFA:  SUBLW  10
1BFC:  BTFSS  FD8.0
1BFE:  BRA    1D7A
....................                     copia2=contador2; 
1C00:  MOVFF  1A,1D
1C04:  CLRF   16
1C06:  BTFSC  FF2.7
1C08:  BSF    16.7
1C0A:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
1C0C:  MOVFF  6A,A5
1C10:  MOVFF  69,A4
1C14:  CLRF   xA7
1C16:  MOVFF  19,A6
1C1A:  CALL   0268
1C1E:  BTFSC  16.7
1C20:  BSF    FF2.7
1C22:  MOVFF  02,97
1C26:  MOVFF  01,96
1C2A:  MOVF   02,W
1C2C:  SUBWF  64,W
1C2E:  BNC   1CAE
1C30:  BNZ   1C38
1C32:  MOVF   x96,W
1C34:  SUBWF  63,W
1C36:  BNC   1CAE
....................                       rb2=1; 
1C38:  BSF    F81.2
....................                       rb1=1; 
1C3A:  BSF    F81.1
....................                       delay_ms(quantum); 
1C3C:  MOVFF  6A,96
1C40:  INCF   x96,F
1C42:  DECF   x96,F
1C44:  BTFSC  FD8.2
1C46:  BRA    1C5E
1C48:  CLRF   16
1C4A:  BTFSC  FF2.7
1C4C:  BSF    16.7
1C4E:  BCF    FF2.7
1C50:  MOVLW  FF
1C52:  MOVWF  xA6
1C54:  CALL   0242
1C58:  BTFSC  16.7
1C5A:  BSF    FF2.7
1C5C:  BRA    1C42
1C5E:  CLRF   16
1C60:  BTFSC  FF2.7
1C62:  BSF    16.7
1C64:  BCF    FF2.7
1C66:  MOVFF  69,A6
1C6A:  CALL   0242
1C6E:  BTFSC  16.7
1C70:  BSF    FF2.7
....................                       rb1=0; 
1C72:  BCF    F81.1
....................                       rb2=0; 
1C74:  BCF    F81.2
....................                       delay_ms(quantum); 
1C76:  MOVFF  6A,96
1C7A:  INCF   x96,F
1C7C:  DECF   x96,F
1C7E:  BTFSC  FD8.2
1C80:  BRA    1C98
1C82:  CLRF   16
1C84:  BTFSC  FF2.7
1C86:  BSF    16.7
1C88:  BCF    FF2.7
1C8A:  MOVLW  FF
1C8C:  MOVWF  xA6
1C8E:  CALL   0242
1C92:  BTFSC  16.7
1C94:  BSF    FF2.7
1C96:  BRA    1C7C
1C98:  CLRF   16
1C9A:  BTFSC  FF2.7
1C9C:  BSF    16.7
1C9E:  BCF    FF2.7
1CA0:  MOVFF  69,A6
1CA4:  CALL   0242
1CA8:  BTFSC  16.7
1CAA:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
1CAC:  BRA    1D52
1CAE:  CLRF   16
1CB0:  BTFSC  FF2.7
1CB2:  BSF    16.7
1CB4:  BCF    FF2.7
....................  
....................                           if(quantum*contador2<time2){ 
1CB6:  MOVFF  6A,A5
1CBA:  MOVFF  69,A4
1CBE:  CLRF   xA7
1CC0:  MOVFF  1A,A6
1CC4:  CALL   0268
1CC8:  BTFSC  16.7
1CCA:  BSF    FF2.7
1CCC:  MOVFF  02,97
1CD0:  MOVFF  01,96
1CD4:  MOVF   02,W
1CD6:  SUBWF  66,W
1CD8:  BNC   1D52
1CDA:  BNZ   1CE2
1CDC:  MOVF   65,W
1CDE:  SUBWF  x96,W
1CE0:  BC    1D52
....................                                rb2=1; 
1CE2:  BSF    F81.2
....................                                delay_ms(quantum); 
1CE4:  MOVFF  6A,96
1CE8:  INCF   x96,F
1CEA:  DECF   x96,F
1CEC:  BTFSC  FD8.2
1CEE:  BRA    1D06
1CF0:  CLRF   16
1CF2:  BTFSC  FF2.7
1CF4:  BSF    16.7
1CF6:  BCF    FF2.7
1CF8:  MOVLW  FF
1CFA:  MOVWF  xA6
1CFC:  CALL   0242
1D00:  BTFSC  16.7
1D02:  BSF    FF2.7
1D04:  BRA    1CEA
1D06:  CLRF   16
1D08:  BTFSC  FF2.7
1D0A:  BSF    16.7
1D0C:  BCF    FF2.7
1D0E:  MOVFF  69,A6
1D12:  CALL   0242
1D16:  BTFSC  16.7
1D18:  BSF    FF2.7
....................                                rb2=0; 
1D1A:  BCF    F81.2
....................                                delay_ms(quantum); 
1D1C:  MOVFF  6A,96
1D20:  INCF   x96,F
1D22:  DECF   x96,F
1D24:  BTFSC  FD8.2
1D26:  BRA    1D3E
1D28:  CLRF   16
1D2A:  BTFSC  FF2.7
1D2C:  BSF    16.7
1D2E:  BCF    FF2.7
1D30:  MOVLW  FF
1D32:  MOVWF  xA6
1D34:  CALL   0242
1D38:  BTFSC  16.7
1D3A:  BSF    FF2.7
1D3C:  BRA    1D22
1D3E:  CLRF   16
1D40:  BTFSC  FF2.7
1D42:  BSF    16.7
1D44:  BCF    FF2.7
1D46:  MOVFF  69,A6
1D4A:  CALL   0242
1D4E:  BTFSC  16.7
1D50:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
1D52:  MOVF   19,W
1D54:  SUBLW  0A
1D56:  BNZ   1D62
1D58:  MOVF   1C,W
1D5A:  SUBLW  09
1D5C:  BNC   1D62
1D5E:  CALL   0F5A
....................                  if(contador2==16 ) do_proceso2(); 
1D62:  MOVF   1A,W
1D64:  SUBLW  10
1D66:  BNZ   1D6C
1D68:  CALL   0FB2
....................           
....................                  if(tecla_pulsada=='3'){ 
1D6C:  MOVF   17,W
1D6E:  SUBLW  33
1D70:  BNZ   1D74
....................                       break; 
1D72:  BRA    1D7A
....................                   } 
....................                
....................                   contador1++; 
1D74:  INCF   19,F
....................                    
....................               } 
1D76:  INCF   1A,F
1D78:  BRA    1BF8
....................              } 
....................                        else{ 
1D7A:  BRA    1F08
....................                         for (contador1=1;contador1<=10;contador1++){ 
1D7C:  MOVLW  01
1D7E:  MOVWF  19
1D80:  MOVF   19,W
1D82:  SUBLW  0A
1D84:  BTFSS  FD8.0
1D86:  BRA    1F08
....................                     copia1=contador1; 
1D88:  MOVFF  19,1C
1D8C:  CLRF   16
1D8E:  BTFSC  FF2.7
1D90:  BSF    16.7
1D92:  BCF    FF2.7
....................                     if(quantum*contador2<=time2){ 
1D94:  MOVFF  6A,A5
1D98:  MOVFF  69,A4
1D9C:  CLRF   xA7
1D9E:  MOVFF  1A,A6
1DA2:  CALL   0268
1DA6:  BTFSC  16.7
1DA8:  BSF    FF2.7
1DAA:  MOVFF  02,97
1DAE:  MOVFF  01,96
1DB2:  MOVF   02,W
1DB4:  SUBWF  66,W
1DB6:  BNC   1E36
1DB8:  BNZ   1DC0
1DBA:  MOVF   x96,W
1DBC:  SUBWF  65,W
1DBE:  BNC   1E36
....................                       rb2=1; 
1DC0:  BSF    F81.2
....................                       rb1=1; 
1DC2:  BSF    F81.1
....................                       delay_ms(quantum); 
1DC4:  MOVFF  6A,96
1DC8:  INCF   x96,F
1DCA:  DECF   x96,F
1DCC:  BTFSC  FD8.2
1DCE:  BRA    1DE6
1DD0:  CLRF   16
1DD2:  BTFSC  FF2.7
1DD4:  BSF    16.7
1DD6:  BCF    FF2.7
1DD8:  MOVLW  FF
1DDA:  MOVWF  xA6
1DDC:  CALL   0242
1DE0:  BTFSC  16.7
1DE2:  BSF    FF2.7
1DE4:  BRA    1DCA
1DE6:  CLRF   16
1DE8:  BTFSC  FF2.7
1DEA:  BSF    16.7
1DEC:  BCF    FF2.7
1DEE:  MOVFF  69,A6
1DF2:  CALL   0242
1DF6:  BTFSC  16.7
1DF8:  BSF    FF2.7
....................                       rb1=0; 
1DFA:  BCF    F81.1
....................                       rb2=0; 
1DFC:  BCF    F81.2
....................                       delay_ms(quantum); 
1DFE:  MOVFF  6A,96
1E02:  INCF   x96,F
1E04:  DECF   x96,F
1E06:  BTFSC  FD8.2
1E08:  BRA    1E20
1E0A:  CLRF   16
1E0C:  BTFSC  FF2.7
1E0E:  BSF    16.7
1E10:  BCF    FF2.7
1E12:  MOVLW  FF
1E14:  MOVWF  xA6
1E16:  CALL   0242
1E1A:  BTFSC  16.7
1E1C:  BSF    FF2.7
1E1E:  BRA    1E04
1E20:  CLRF   16
1E22:  BTFSC  FF2.7
1E24:  BSF    16.7
1E26:  BCF    FF2.7
1E28:  MOVFF  69,A6
1E2C:  CALL   0242
1E30:  BTFSC  16.7
1E32:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
1E34:  BRA    1EDA
1E36:  CLRF   16
1E38:  BTFSC  FF2.7
1E3A:  BSF    16.7
1E3C:  BCF    FF2.7
....................  
....................                           if(quantum*contador1<time1){ 
1E3E:  MOVFF  6A,A5
1E42:  MOVFF  69,A4
1E46:  CLRF   xA7
1E48:  MOVFF  19,A6
1E4C:  CALL   0268
1E50:  BTFSC  16.7
1E52:  BSF    FF2.7
1E54:  MOVFF  02,97
1E58:  MOVFF  01,96
1E5C:  MOVF   02,W
1E5E:  SUBWF  64,W
1E60:  BNC   1EDA
1E62:  BNZ   1E6A
1E64:  MOVF   63,W
1E66:  SUBWF  x96,W
1E68:  BC    1EDA
....................                                rb1=1; 
1E6A:  BSF    F81.1
....................                                delay_ms(quantum); 
1E6C:  MOVFF  6A,96
1E70:  INCF   x96,F
1E72:  DECF   x96,F
1E74:  BTFSC  FD8.2
1E76:  BRA    1E8E
1E78:  CLRF   16
1E7A:  BTFSC  FF2.7
1E7C:  BSF    16.7
1E7E:  BCF    FF2.7
1E80:  MOVLW  FF
1E82:  MOVWF  xA6
1E84:  CALL   0242
1E88:  BTFSC  16.7
1E8A:  BSF    FF2.7
1E8C:  BRA    1E72
1E8E:  CLRF   16
1E90:  BTFSC  FF2.7
1E92:  BSF    16.7
1E94:  BCF    FF2.7
1E96:  MOVFF  69,A6
1E9A:  CALL   0242
1E9E:  BTFSC  16.7
1EA0:  BSF    FF2.7
....................                                rb1=0; 
1EA2:  BCF    F81.1
....................                                delay_ms(quantum); 
1EA4:  MOVFF  6A,96
1EA8:  INCF   x96,F
1EAA:  DECF   x96,F
1EAC:  BTFSC  FD8.2
1EAE:  BRA    1EC6
1EB0:  CLRF   16
1EB2:  BTFSC  FF2.7
1EB4:  BSF    16.7
1EB6:  BCF    FF2.7
1EB8:  MOVLW  FF
1EBA:  MOVWF  xA6
1EBC:  CALL   0242
1EC0:  BTFSC  16.7
1EC2:  BSF    FF2.7
1EC4:  BRA    1EAA
1EC6:  CLRF   16
1EC8:  BTFSC  FF2.7
1ECA:  BSF    16.7
1ECC:  BCF    FF2.7
1ECE:  MOVFF  69,A6
1ED2:  CALL   0242
1ED6:  BTFSC  16.7
1ED8:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
1EDA:  MOVF   19,W
1EDC:  SUBLW  0A
1EDE:  BNZ   1EEA
1EE0:  MOVF   1C,W
1EE2:  SUBLW  09
1EE4:  BNC   1EEA
1EE6:  CALL   0F5A
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
1EEA:  MOVF   1A,W
1EEC:  SUBLW  10
1EEE:  BNZ   1EFA
1EF0:  MOVF   1D,W
1EF2:  SUBLW  0F
1EF4:  BNC   1EFA
1EF6:  CALL   0FB2
....................           
....................                  if(tecla_pulsada=='3'){ 
1EFA:  MOVF   17,W
1EFC:  SUBLW  33
1EFE:  BNZ   1F02
....................                       break; 
1F00:  BRA    1F08
....................                   } 
....................                
....................                   contador2++; 
1F02:  INCF   1A,F
....................                    
....................               } 
1F04:  INCF   19,F
1F06:  BRA    1D80
....................                         
....................                         
....................           } 
....................               if(tecla_pulsada=='3'){ 
1F08:  MOVF   17,W
1F0A:  SUBLW  33
1F0C:  BTFSS  FD8.2
1F0E:  BRA    21FC
....................                       for (contador3=1;contador3<=20;contador3++){ 
1F10:  MOVLW  01
1F12:  MOVWF  1B
1F14:  MOVF   1B,W
1F16:  SUBLW  14
1F18:  BTFSS  FD8.0
1F1A:  BRA    21FC
....................                            copia3=contador3; 
1F1C:  MOVFF  1B,1E
1F20:  CLRF   16
1F22:  BTFSC  FF2.7
1F24:  BSF    16.7
1F26:  BCF    FF2.7
....................                            if(quantum*contador1<time1){ 
1F28:  MOVFF  6A,A5
1F2C:  MOVFF  69,A4
1F30:  CLRF   xA7
1F32:  MOVFF  19,A6
1F36:  CALL   0268
1F3A:  BTFSC  16.7
1F3C:  BSF    FF2.7
1F3E:  MOVFF  02,97
1F42:  MOVFF  01,96
1F46:  MOVF   02,W
1F48:  SUBWF  64,W
1F4A:  BTFSS  FD8.0
1F4C:  BRA    207C
1F4E:  BNZ   1F58
1F50:  MOVF   63,W
1F52:  SUBWF  x96,W
1F54:  BTFSC  FD8.0
1F56:  BRA    207C
1F58:  CLRF   16
1F5A:  BTFSC  FF2.7
1F5C:  BSF    16.7
1F5E:  BCF    FF2.7
....................                            if(quantum*contador2<=time2){ 
1F60:  MOVFF  6A,A5
1F64:  MOVFF  69,A4
1F68:  CLRF   xA7
1F6A:  MOVFF  1A,A6
1F6E:  CALL   0268
1F72:  BTFSC  16.7
1F74:  BSF    FF2.7
1F76:  MOVFF  02,97
1F7A:  MOVFF  01,96
1F7E:  MOVF   02,W
1F80:  SUBWF  66,W
1F82:  BNC   2006
1F84:  BNZ   1F8C
1F86:  MOVF   x96,W
1F88:  SUBWF  65,W
1F8A:  BNC   2006
....................                              rb2=1; 
1F8C:  BSF    F81.2
....................                              rb3=1; 
1F8E:  BSF    F81.3
....................                              rb1=1; 
1F90:  BSF    F81.1
....................                              delay_ms(quantum); 
1F92:  MOVFF  6A,96
1F96:  INCF   x96,F
1F98:  DECF   x96,F
1F9A:  BTFSC  FD8.2
1F9C:  BRA    1FB4
1F9E:  CLRF   16
1FA0:  BTFSC  FF2.7
1FA2:  BSF    16.7
1FA4:  BCF    FF2.7
1FA6:  MOVLW  FF
1FA8:  MOVWF  xA6
1FAA:  CALL   0242
1FAE:  BTFSC  16.7
1FB0:  BSF    FF2.7
1FB2:  BRA    1F98
1FB4:  CLRF   16
1FB6:  BTFSC  FF2.7
1FB8:  BSF    16.7
1FBA:  BCF    FF2.7
1FBC:  MOVFF  69,A6
1FC0:  CALL   0242
1FC4:  BTFSC  16.7
1FC6:  BSF    FF2.7
....................                              rb2=0; 
1FC8:  BCF    F81.2
....................                              rb3=0; 
1FCA:  BCF    F81.3
....................                              rb1=0; 
1FCC:  BCF    F81.1
....................                              delay_ms(quantum); 
1FCE:  MOVFF  6A,96
1FD2:  INCF   x96,F
1FD4:  DECF   x96,F
1FD6:  BTFSC  FD8.2
1FD8:  BRA    1FF0
1FDA:  CLRF   16
1FDC:  BTFSC  FF2.7
1FDE:  BSF    16.7
1FE0:  BCF    FF2.7
1FE2:  MOVLW  FF
1FE4:  MOVWF  xA6
1FE6:  CALL   0242
1FEA:  BTFSC  16.7
1FEC:  BSF    FF2.7
1FEE:  BRA    1FD4
1FF0:  CLRF   16
1FF2:  BTFSC  FF2.7
1FF4:  BSF    16.7
1FF6:  BCF    FF2.7
1FF8:  MOVFF  69,A6
1FFC:  CALL   0242
2000:  BTFSC  16.7
2002:  BSF    FF2.7
....................                           } 
....................                           else{    
2004:  BRA    207A
....................                              rb3=1; 
2006:  BSF    F81.3
....................                              rb1=1; 
2008:  BSF    F81.1
....................                              delay_ms(quantum); 
200A:  MOVFF  6A,96
200E:  INCF   x96,F
2010:  DECF   x96,F
2012:  BTFSC  FD8.2
2014:  BRA    202C
2016:  CLRF   16
2018:  BTFSC  FF2.7
201A:  BSF    16.7
201C:  BCF    FF2.7
201E:  MOVLW  FF
2020:  MOVWF  xA6
2022:  CALL   0242
2026:  BTFSC  16.7
2028:  BSF    FF2.7
202A:  BRA    2010
202C:  CLRF   16
202E:  BTFSC  FF2.7
2030:  BSF    16.7
2032:  BCF    FF2.7
2034:  MOVFF  69,A6
2038:  CALL   0242
203C:  BTFSC  16.7
203E:  BSF    FF2.7
....................                              rb3=0; 
2040:  BCF    F81.3
....................                              rb1=0; 
2042:  BCF    F81.1
....................                              delay_ms(quantum); 
2044:  MOVFF  6A,96
2048:  INCF   x96,F
204A:  DECF   x96,F
204C:  BTFSC  FD8.2
204E:  BRA    2066
2050:  CLRF   16
2052:  BTFSC  FF2.7
2054:  BSF    16.7
2056:  BCF    FF2.7
2058:  MOVLW  FF
205A:  MOVWF  xA6
205C:  CALL   0242
2060:  BTFSC  16.7
2062:  BSF    FF2.7
2064:  BRA    204A
2066:  CLRF   16
2068:  BTFSC  FF2.7
206A:  BSF    16.7
206C:  BCF    FF2.7
206E:  MOVFF  69,A6
2072:  CALL   0242
2076:  BTFSC  16.7
2078:  BSF    FF2.7
....................                           } 
....................                                                }                                              
....................                    else  { 
207A:  BRA    21CA
207C:  CLRF   16
207E:  BTFSC  FF2.7
2080:  BSF    16.7
2082:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<time2){ 
2084:  MOVFF  6A,A5
2088:  MOVFF  69,A4
208C:  CLRF   xA7
208E:  MOVFF  1A,A6
2092:  CALL   0268
2096:  BTFSC  16.7
2098:  BSF    FF2.7
209A:  MOVFF  02,97
209E:  MOVFF  01,96
20A2:  MOVF   02,W
20A4:  SUBWF  66,W
20A6:  BNC   2126
20A8:  BNZ   20B0
20AA:  MOVF   65,W
20AC:  SUBWF  x96,W
20AE:  BC    2126
....................                                rb3=1; 
20B0:  BSF    F81.3
....................                                rb2=1; 
20B2:  BSF    F81.2
....................                                delay_ms(quantum); 
20B4:  MOVFF  6A,96
20B8:  INCF   x96,F
20BA:  DECF   x96,F
20BC:  BTFSC  FD8.2
20BE:  BRA    20D6
20C0:  CLRF   16
20C2:  BTFSC  FF2.7
20C4:  BSF    16.7
20C6:  BCF    FF2.7
20C8:  MOVLW  FF
20CA:  MOVWF  xA6
20CC:  CALL   0242
20D0:  BTFSC  16.7
20D2:  BSF    FF2.7
20D4:  BRA    20BA
20D6:  CLRF   16
20D8:  BTFSC  FF2.7
20DA:  BSF    16.7
20DC:  BCF    FF2.7
20DE:  MOVFF  69,A6
20E2:  CALL   0242
20E6:  BTFSC  16.7
20E8:  BSF    FF2.7
....................                                rb3=0; 
20EA:  BCF    F81.3
....................                                rb2=0; 
20EC:  BCF    F81.2
....................                                delay_ms(quantum); 
20EE:  MOVFF  6A,96
20F2:  INCF   x96,F
20F4:  DECF   x96,F
20F6:  BTFSC  FD8.2
20F8:  BRA    2110
20FA:  CLRF   16
20FC:  BTFSC  FF2.7
20FE:  BSF    16.7
2100:  BCF    FF2.7
2102:  MOVLW  FF
2104:  MOVWF  xA6
2106:  CALL   0242
210A:  BTFSC  16.7
210C:  BSF    FF2.7
210E:  BRA    20F4
2110:  CLRF   16
2112:  BTFSC  FF2.7
2114:  BSF    16.7
2116:  BCF    FF2.7
2118:  MOVFF  69,A6
211C:  CALL   0242
2120:  BTFSC  16.7
2122:  BSF    FF2.7
....................                                                     }  
....................                      else{ 
2124:  BRA    21CA
2126:  CLRF   16
2128:  BTFSC  FF2.7
212A:  BSF    16.7
212C:  BCF    FF2.7
....................                          if(quantum*contador3<time3){ 
212E:  MOVFF  6A,A5
2132:  MOVFF  69,A4
2136:  CLRF   xA7
2138:  MOVFF  1B,A6
213C:  CALL   0268
2140:  BTFSC  16.7
2142:  BSF    FF2.7
2144:  MOVFF  02,97
2148:  MOVFF  01,96
214C:  MOVF   02,W
214E:  SUBWF  68,W
2150:  BNC   21CA
2152:  BNZ   215A
2154:  MOVF   67,W
2156:  SUBWF  x96,W
2158:  BC    21CA
....................                                rb3=1; 
215A:  BSF    F81.3
....................                                delay_ms(quantum); 
215C:  MOVFF  6A,96
2160:  INCF   x96,F
2162:  DECF   x96,F
2164:  BTFSC  FD8.2
2166:  BRA    217E
2168:  CLRF   16
216A:  BTFSC  FF2.7
216C:  BSF    16.7
216E:  BCF    FF2.7
2170:  MOVLW  FF
2172:  MOVWF  xA6
2174:  CALL   0242
2178:  BTFSC  16.7
217A:  BSF    FF2.7
217C:  BRA    2162
217E:  CLRF   16
2180:  BTFSC  FF2.7
2182:  BSF    16.7
2184:  BCF    FF2.7
2186:  MOVFF  69,A6
218A:  CALL   0242
218E:  BTFSC  16.7
2190:  BSF    FF2.7
....................                                rb3=0; 
2192:  BCF    F81.3
....................                                delay_ms(quantum); 
2194:  MOVFF  6A,96
2198:  INCF   x96,F
219A:  DECF   x96,F
219C:  BTFSC  FD8.2
219E:  BRA    21B6
21A0:  CLRF   16
21A2:  BTFSC  FF2.7
21A4:  BSF    16.7
21A6:  BCF    FF2.7
21A8:  MOVLW  FF
21AA:  MOVWF  xA6
21AC:  CALL   0242
21B0:  BTFSC  16.7
21B2:  BSF    FF2.7
21B4:  BRA    219A
21B6:  CLRF   16
21B8:  BTFSC  FF2.7
21BA:  BSF    16.7
21BC:  BCF    FF2.7
21BE:  MOVFF  69,A6
21C2:  CALL   0242
21C6:  BTFSC  16.7
21C8:  BSF    FF2.7
....................                                                      }  
....................                            } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1();                 
21CA:  MOVF   19,W
21CC:  SUBLW  0A
21CE:  BNZ   21DA
21D0:  MOVF   1C,W
21D2:  SUBLW  09
21D4:  BNC   21DA
21D6:  CALL   0F5A
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
21DA:  MOVF   1A,W
21DC:  SUBLW  10
21DE:  BNZ   21EA
21E0:  MOVF   1D,W
21E2:  SUBLW  0F
21E4:  BNC   21EA
21E6:  CALL   0FB2
....................                  if(contador3==20 )do_proceso3(); 
21EA:  MOVF   1B,W
21EC:  SUBLW  14
21EE:  BNZ   21F4
21F0:  CALL   100A
....................  
....................                   contador1++; 
21F4:  INCF   19,F
....................                   contador2++; 
21F6:  INCF   1A,F
....................                  
....................               }                                   
21F8:  INCF   1B,F
21FA:  BRA    1F14
....................          }       
....................      }   
....................      //       
....................          else{ 
21FC:  BRA    25C6
....................           if(tecla_pulsada=='3'){ 
21FE:  MOVF   17,W
2200:  SUBLW  33
2202:  BTFSS  FD8.2
2204:  BRA    25C6
....................                for (contador3=1;contador3<=20;contador3++){ 
2206:  MOVLW  01
2208:  MOVWF  1B
220A:  MOVF   1B,W
220C:  SUBLW  14
220E:  BTFSS  FD8.0
2210:  BRA    238C
....................                     copia3=contador3; 
2212:  MOVFF  1B,1E
2216:  CLRF   16
2218:  BTFSC  FF2.7
221A:  BSF    16.7
221C:  BCF    FF2.7
....................                     if(quantum*contador2<time2){ 
221E:  MOVFF  6A,A5
2222:  MOVFF  69,A4
2226:  CLRF   xA7
2228:  MOVFF  1A,A6
222C:  CALL   0268
2230:  BTFSC  16.7
2232:  BSF    FF2.7
2234:  MOVFF  02,97
2238:  MOVFF  01,96
223C:  MOVF   02,W
223E:  SUBWF  66,W
2240:  BNC   22C0
2242:  BNZ   224A
2244:  MOVF   65,W
2246:  SUBWF  x96,W
2248:  BC    22C0
....................                       rb3=1; 
224A:  BSF    F81.3
....................                       rb2=1; 
224C:  BSF    F81.2
....................                       delay_ms(quantum); 
224E:  MOVFF  6A,96
2252:  INCF   x96,F
2254:  DECF   x96,F
2256:  BTFSC  FD8.2
2258:  BRA    2270
225A:  CLRF   16
225C:  BTFSC  FF2.7
225E:  BSF    16.7
2260:  BCF    FF2.7
2262:  MOVLW  FF
2264:  MOVWF  xA6
2266:  CALL   0242
226A:  BTFSC  16.7
226C:  BSF    FF2.7
226E:  BRA    2254
2270:  CLRF   16
2272:  BTFSC  FF2.7
2274:  BSF    16.7
2276:  BCF    FF2.7
2278:  MOVFF  69,A6
227C:  CALL   0242
2280:  BTFSC  16.7
2282:  BSF    FF2.7
....................                       rb3=0; 
2284:  BCF    F81.3
....................                       rb2=0; 
2286:  BCF    F81.2
....................                       delay_ms(quantum); 
2288:  MOVFF  6A,96
228C:  INCF   x96,F
228E:  DECF   x96,F
2290:  BTFSC  FD8.2
2292:  BRA    22AA
2294:  CLRF   16
2296:  BTFSC  FF2.7
2298:  BSF    16.7
229A:  BCF    FF2.7
229C:  MOVLW  FF
229E:  MOVWF  xA6
22A0:  CALL   0242
22A4:  BTFSC  16.7
22A6:  BSF    FF2.7
22A8:  BRA    228E
22AA:  CLRF   16
22AC:  BTFSC  FF2.7
22AE:  BSF    16.7
22B0:  BCF    FF2.7
22B2:  MOVFF  69,A6
22B6:  CALL   0242
22BA:  BTFSC  16.7
22BC:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
22BE:  BRA    2364
22C0:  CLRF   16
22C2:  BTFSC  FF2.7
22C4:  BSF    16.7
22C6:  BCF    FF2.7
....................                     
....................                           if(quantum*contador3<=time3){ 
22C8:  MOVFF  6A,A5
22CC:  MOVFF  69,A4
22D0:  CLRF   xA7
22D2:  MOVFF  1B,A6
22D6:  CALL   0268
22DA:  BTFSC  16.7
22DC:  BSF    FF2.7
22DE:  MOVFF  02,97
22E2:  MOVFF  01,96
22E6:  MOVF   02,W
22E8:  SUBWF  68,W
22EA:  BNC   2364
22EC:  BNZ   22F4
22EE:  MOVF   x96,W
22F0:  SUBWF  67,W
22F2:  BNC   2364
....................                                rb3=1; 
22F4:  BSF    F81.3
....................                                delay_ms(quantum); 
22F6:  MOVFF  6A,96
22FA:  INCF   x96,F
22FC:  DECF   x96,F
22FE:  BTFSC  FD8.2
2300:  BRA    2318
2302:  CLRF   16
2304:  BTFSC  FF2.7
2306:  BSF    16.7
2308:  BCF    FF2.7
230A:  MOVLW  FF
230C:  MOVWF  xA6
230E:  CALL   0242
2312:  BTFSC  16.7
2314:  BSF    FF2.7
2316:  BRA    22FC
2318:  CLRF   16
231A:  BTFSC  FF2.7
231C:  BSF    16.7
231E:  BCF    FF2.7
2320:  MOVFF  69,A6
2324:  CALL   0242
2328:  BTFSC  16.7
232A:  BSF    FF2.7
....................                                rb3=0; 
232C:  BCF    F81.3
....................                                delay_ms(quantum); 
232E:  MOVFF  6A,96
2332:  INCF   x96,F
2334:  DECF   x96,F
2336:  BTFSC  FD8.2
2338:  BRA    2350
233A:  CLRF   16
233C:  BTFSC  FF2.7
233E:  BSF    16.7
2340:  BCF    FF2.7
2342:  MOVLW  FF
2344:  MOVWF  xA6
2346:  CALL   0242
234A:  BTFSC  16.7
234C:  BSF    FF2.7
234E:  BRA    2334
2350:  CLRF   16
2352:  BTFSC  FF2.7
2354:  BSF    16.7
2356:  BCF    FF2.7
2358:  MOVFF  69,A6
235C:  CALL   0242
2360:  BTFSC  16.7
2362:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
2364:  MOVF   1A,W
2366:  SUBLW  10
2368:  BNZ   2374
236A:  MOVF   1D,W
236C:  SUBLW  0F
236E:  BNC   2374
2370:  CALL   0FB2
....................                  if(contador3==20 )do_proceso3(); 
2374:  MOVF   1B,W
2376:  SUBLW  14
2378:  BNZ   237E
237A:  CALL   100A
....................                   
....................                  if(tecla_pulsada=='1'){ 
237E:  MOVF   17,W
2380:  SUBLW  31
2382:  BNZ   2386
....................                       break; 
2384:  BRA    238C
....................                   } 
....................                   contador2++; 
2386:  INCF   1A,F
....................  
....................                  } 
2388:  INCF   1B,F
238A:  BRA    220A
....................                  if(tecla_pulsada=='1'){ 
238C:  MOVF   17,W
238E:  SUBLW  31
2390:  BTFSS  FD8.2
2392:  BRA    25C6
....................                           
....................                          for (contador3=copia3;contador3<=20;contador3++){ 
2394:  MOVFF  1E,1B
2398:  MOVF   1B,W
239A:  SUBLW  14
239C:  BTFSS  FD8.0
239E:  BRA    25C6
....................                               copia3=contador3; 
23A0:  MOVFF  1B,1E
23A4:  CLRF   16
23A6:  BTFSC  FF2.7
23A8:  BSF    16.7
23AA:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
23AC:  MOVFF  6A,A5
23B0:  MOVFF  69,A4
23B4:  CLRF   xA7
23B6:  MOVFF  19,A6
23BA:  CALL   0268
23BE:  BTFSC  16.7
23C0:  BSF    FF2.7
23C2:  MOVFF  02,97
23C6:  MOVFF  01,96
23CA:  MOVF   02,W
23CC:  SUBWF  64,W
23CE:  BNC   2452
23D0:  BNZ   23D8
23D2:  MOVF   x96,W
23D4:  SUBWF  63,W
23D6:  BNC   2452
....................                            
....................                              rb2=1; 
23D8:  BSF    F81.2
....................                              rb3=1; 
23DA:  BSF    F81.3
....................                              rb1=1; 
23DC:  BSF    F81.1
....................                              delay_ms(quantum); 
23DE:  MOVFF  6A,96
23E2:  INCF   x96,F
23E4:  DECF   x96,F
23E6:  BTFSC  FD8.2
23E8:  BRA    2400
23EA:  CLRF   16
23EC:  BTFSC  FF2.7
23EE:  BSF    16.7
23F0:  BCF    FF2.7
23F2:  MOVLW  FF
23F4:  MOVWF  xA6
23F6:  CALL   0242
23FA:  BTFSC  16.7
23FC:  BSF    FF2.7
23FE:  BRA    23E4
2400:  CLRF   16
2402:  BTFSC  FF2.7
2404:  BSF    16.7
2406:  BCF    FF2.7
2408:  MOVFF  69,A6
240C:  CALL   0242
2410:  BTFSC  16.7
2412:  BSF    FF2.7
....................                              rb2=0; 
2414:  BCF    F81.2
....................                              rb3=0; 
2416:  BCF    F81.3
....................                              rb1=0; 
2418:  BCF    F81.1
....................                              delay_ms(quantum); 
241A:  MOVFF  6A,96
241E:  INCF   x96,F
2420:  DECF   x96,F
2422:  BTFSC  FD8.2
2424:  BRA    243C
2426:  CLRF   16
2428:  BTFSC  FF2.7
242A:  BSF    16.7
242C:  BCF    FF2.7
242E:  MOVLW  FF
2430:  MOVWF  xA6
2432:  CALL   0242
2436:  BTFSC  16.7
2438:  BSF    FF2.7
243A:  BRA    2420
243C:  CLRF   16
243E:  BTFSC  FF2.7
2440:  BSF    16.7
2442:  BCF    FF2.7
2444:  MOVFF  69,A6
2448:  CALL   0242
244C:  BTFSC  16.7
244E:  BSF    FF2.7
....................                           
....................                                                } 
....................                                                 
....................                    else  { 
2450:  BRA    25A0
2452:  CLRF   16
2454:  BTFSC  FF2.7
2456:  BSF    16.7
2458:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<=time2){ 
245A:  MOVFF  6A,A5
245E:  MOVFF  69,A4
2462:  CLRF   xA7
2464:  MOVFF  1A,A6
2468:  CALL   0268
246C:  BTFSC  16.7
246E:  BSF    FF2.7
2470:  MOVFF  02,97
2474:  MOVFF  01,96
2478:  MOVF   02,W
247A:  SUBWF  66,W
247C:  BNC   24FC
247E:  BNZ   2486
2480:  MOVF   x96,W
2482:  SUBWF  65,W
2484:  BNC   24FC
....................                                rb2=1; 
2486:  BSF    F81.2
....................                                rb3=1; 
2488:  BSF    F81.3
....................                                delay_ms(quantum); 
248A:  MOVFF  6A,96
248E:  INCF   x96,F
2490:  DECF   x96,F
2492:  BTFSC  FD8.2
2494:  BRA    24AC
2496:  CLRF   16
2498:  BTFSC  FF2.7
249A:  BSF    16.7
249C:  BCF    FF2.7
249E:  MOVLW  FF
24A0:  MOVWF  xA6
24A2:  CALL   0242
24A6:  BTFSC  16.7
24A8:  BSF    FF2.7
24AA:  BRA    2490
24AC:  CLRF   16
24AE:  BTFSC  FF2.7
24B0:  BSF    16.7
24B2:  BCF    FF2.7
24B4:  MOVFF  69,A6
24B8:  CALL   0242
24BC:  BTFSC  16.7
24BE:  BSF    FF2.7
....................                                rb2=0; 
24C0:  BCF    F81.2
....................                                rb3=0; 
24C2:  BCF    F81.3
....................                                delay_ms(quantum); 
24C4:  MOVFF  6A,96
24C8:  INCF   x96,F
24CA:  DECF   x96,F
24CC:  BTFSC  FD8.2
24CE:  BRA    24E6
24D0:  CLRF   16
24D2:  BTFSC  FF2.7
24D4:  BSF    16.7
24D6:  BCF    FF2.7
24D8:  MOVLW  FF
24DA:  MOVWF  xA6
24DC:  CALL   0242
24E0:  BTFSC  16.7
24E2:  BSF    FF2.7
24E4:  BRA    24CA
24E6:  CLRF   16
24E8:  BTFSC  FF2.7
24EA:  BSF    16.7
24EC:  BCF    FF2.7
24EE:  MOVFF  69,A6
24F2:  CALL   0242
24F6:  BTFSC  16.7
24F8:  BSF    FF2.7
....................                                                      }  
....................                              else{ 
24FA:  BRA    25A0
24FC:  CLRF   16
24FE:  BTFSC  FF2.7
2500:  BSF    16.7
2502:  BCF    FF2.7
....................                                         if(quantum*contador3<=time3){ 
2504:  MOVFF  6A,A5
2508:  MOVFF  69,A4
250C:  CLRF   xA7
250E:  MOVFF  1B,A6
2512:  CALL   0268
2516:  BTFSC  16.7
2518:  BSF    FF2.7
251A:  MOVFF  02,97
251E:  MOVFF  01,96
2522:  MOVF   02,W
2524:  SUBWF  68,W
2526:  BNC   25A0
2528:  BNZ   2530
252A:  MOVF   x96,W
252C:  SUBWF  67,W
252E:  BNC   25A0
....................                                rb3=1; 
2530:  BSF    F81.3
....................                                
....................                                delay_ms(quantum); 
2532:  MOVFF  6A,96
2536:  INCF   x96,F
2538:  DECF   x96,F
253A:  BTFSC  FD8.2
253C:  BRA    2554
253E:  CLRF   16
2540:  BTFSC  FF2.7
2542:  BSF    16.7
2544:  BCF    FF2.7
2546:  MOVLW  FF
2548:  MOVWF  xA6
254A:  CALL   0242
254E:  BTFSC  16.7
2550:  BSF    FF2.7
2552:  BRA    2538
2554:  CLRF   16
2556:  BTFSC  FF2.7
2558:  BSF    16.7
255A:  BCF    FF2.7
255C:  MOVFF  69,A6
2560:  CALL   0242
2564:  BTFSC  16.7
2566:  BSF    FF2.7
....................                                rb3=0; 
2568:  BCF    F81.3
....................                                
....................                                delay_ms(quantum); 
256A:  MOVFF  6A,96
256E:  INCF   x96,F
2570:  DECF   x96,F
2572:  BTFSC  FD8.2
2574:  BRA    258C
2576:  CLRF   16
2578:  BTFSC  FF2.7
257A:  BSF    16.7
257C:  BCF    FF2.7
257E:  MOVLW  FF
2580:  MOVWF  xA6
2582:  CALL   0242
2586:  BTFSC  16.7
2588:  BSF    FF2.7
258A:  BRA    2570
258C:  CLRF   16
258E:  BTFSC  FF2.7
2590:  BSF    16.7
2592:  BCF    FF2.7
2594:  MOVFF  69,A6
2598:  CALL   0242
259C:  BTFSC  16.7
259E:  BSF    FF2.7
....................                                                      }                
....................                                                       
....................                                                      } 
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
25A0:  MOVF   19,W
25A2:  SUBLW  0A
25A4:  BNZ   25AA
25A6:  CALL   0F5A
....................                  if(contador3==20 )do_proceso3(); 
25AA:  MOVF   1B,W
25AC:  SUBLW  14
25AE:  BNZ   25B4
25B0:  CALL   100A
....................                  if(contador2==16 )do_proceso2(); 
25B4:  MOVF   1A,W
25B6:  SUBLW  10
25B8:  BNZ   25BE
25BA:  CALL   0FB2
....................                   contador1++; 
25BE:  INCF   19,F
....................                   contador2++; 
25C0:  INCF   1A,F
....................  
....................                  } 
25C2:  INCF   1B,F
25C4:  BRA    2398
....................                           
....................                          
....................                   
....................                                        } 
....................               } 
....................        }    
....................    } 
25C6:  GOTO   3C6E (RETURN)
....................            
.................... //////////////////////////////////////// 
.................... void do_proceso33(){ 
.................... for (contador3=1;contador2<=20;contador3++){ 
25CA:  MOVLW  01
25CC:  MOVWF  1B
25CE:  MOVF   1A,W
25D0:  SUBLW  14
25D2:  BNC   2696
....................              copia3=contador3; 
25D4:  MOVFF  1B,1E
25D8:  CLRF   16
25DA:  BTFSC  FF2.7
25DC:  BSF    16.7
25DE:  BCF    FF2.7
....................              if(quantum*contador3<time3){ 
25E0:  MOVFF  6A,A5
25E4:  MOVFF  69,A4
25E8:  CLRF   xA7
25EA:  MOVFF  1B,A6
25EE:  CALL   0268
25F2:  BTFSC  16.7
25F4:  BSF    FF2.7
25F6:  MOVFF  02,97
25FA:  MOVFF  01,96
25FE:  MOVF   02,W
2600:  SUBWF  68,W
2602:  BNC   267E
2604:  BNZ   260C
2606:  MOVF   67,W
2608:  SUBWF  x96,W
260A:  BC    267E
....................                 rb3=1; 
260C:  BSF    F81.3
....................                 delay_ms(quantum); 
260E:  MOVFF  6A,96
2612:  INCF   x96,F
2614:  DECF   x96,F
2616:  BTFSC  FD8.2
2618:  BRA    2630
261A:  CLRF   16
261C:  BTFSC  FF2.7
261E:  BSF    16.7
2620:  BCF    FF2.7
2622:  MOVLW  FF
2624:  MOVWF  xA6
2626:  CALL   0242
262A:  BTFSC  16.7
262C:  BSF    FF2.7
262E:  BRA    2614
2630:  CLRF   16
2632:  BTFSC  FF2.7
2634:  BSF    16.7
2636:  BCF    FF2.7
2638:  MOVFF  69,A6
263C:  CALL   0242
2640:  BTFSC  16.7
2642:  BSF    FF2.7
....................                 rb3=0; 
2644:  BCF    F81.3
....................                 delay_ms(quantum); 
2646:  MOVFF  6A,96
264A:  INCF   x96,F
264C:  DECF   x96,F
264E:  BTFSC  FD8.2
2650:  BRA    2668
2652:  CLRF   16
2654:  BTFSC  FF2.7
2656:  BSF    16.7
2658:  BCF    FF2.7
265A:  MOVLW  FF
265C:  MOVWF  xA6
265E:  CALL   0242
2662:  BTFSC  16.7
2664:  BSF    FF2.7
2666:  BRA    264C
2668:  CLRF   16
266A:  BTFSC  FF2.7
266C:  BSF    16.7
266E:  BCF    FF2.7
2670:  MOVFF  69,A6
2674:  CALL   0242
2678:  BTFSC  16.7
267A:  BSF    FF2.7
....................                                         } 
....................              else { 
267C:  BRA    2682
....................                     do_proceso3(); 
267E:  CALL   100A
....................                    }   
....................              if(tecla_pulsada=='1'){ 
2682:  MOVF   17,W
2684:  SUBLW  31
2686:  BNZ   268A
....................                    break; 
2688:  BRA    2696
....................                   } 
....................              if(tecla_pulsada=='2'){ 
268A:  MOVF   17,W
268C:  SUBLW  32
268E:  BNZ   2692
....................                    break; 
2690:  BRA    2696
....................                   } 
....................          } 
2692:  INCF   1B,F
2694:  BRA    25CE
....................   
....................      if(tecla_pulsada=='1'){ 
2696:  MOVF   17,W
2698:  SUBLW  31
269A:  BTFSS  FD8.2
269C:  GOTO   2E46
....................                if(copia3<=10){ 
26A0:  MOVF   1E,W
26A2:  SUBLW  0A
26A4:  BTFSS  FD8.0
26A6:  BRA    2830
....................                for (contador3=copia3;contador3<=20;contador3++){ 
26A8:  MOVFF  1E,1B
26AC:  MOVF   1B,W
26AE:  SUBLW  14
26B0:  BTFSS  FD8.0
26B2:  BRA    282E
....................                     copia3=contador3; 
26B4:  MOVFF  1B,1E
26B8:  CLRF   16
26BA:  BTFSC  FF2.7
26BC:  BSF    16.7
26BE:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
26C0:  MOVFF  6A,A5
26C4:  MOVFF  69,A4
26C8:  CLRF   xA7
26CA:  MOVFF  19,A6
26CE:  CALL   0268
26D2:  BTFSC  16.7
26D4:  BSF    FF2.7
26D6:  MOVFF  02,97
26DA:  MOVFF  01,96
26DE:  MOVF   02,W
26E0:  SUBWF  64,W
26E2:  BNC   2762
26E4:  BNZ   26EC
26E6:  MOVF   x96,W
26E8:  SUBWF  63,W
26EA:  BNC   2762
....................                       rb3=1; 
26EC:  BSF    F81.3
....................                       rb1=1; 
26EE:  BSF    F81.1
....................                       delay_ms(quantum); 
26F0:  MOVFF  6A,96
26F4:  INCF   x96,F
26F6:  DECF   x96,F
26F8:  BTFSC  FD8.2
26FA:  BRA    2712
26FC:  CLRF   16
26FE:  BTFSC  FF2.7
2700:  BSF    16.7
2702:  BCF    FF2.7
2704:  MOVLW  FF
2706:  MOVWF  xA6
2708:  CALL   0242
270C:  BTFSC  16.7
270E:  BSF    FF2.7
2710:  BRA    26F6
2712:  CLRF   16
2714:  BTFSC  FF2.7
2716:  BSF    16.7
2718:  BCF    FF2.7
271A:  MOVFF  69,A6
271E:  CALL   0242
2722:  BTFSC  16.7
2724:  BSF    FF2.7
....................                       rb1=0; 
2726:  BCF    F81.1
....................                       rb3=0; 
2728:  BCF    F81.3
....................                       delay_ms(quantum); 
272A:  MOVFF  6A,96
272E:  INCF   x96,F
2730:  DECF   x96,F
2732:  BTFSC  FD8.2
2734:  BRA    274C
2736:  CLRF   16
2738:  BTFSC  FF2.7
273A:  BSF    16.7
273C:  BCF    FF2.7
273E:  MOVLW  FF
2740:  MOVWF  xA6
2742:  CALL   0242
2746:  BTFSC  16.7
2748:  BSF    FF2.7
274A:  BRA    2730
274C:  CLRF   16
274E:  BTFSC  FF2.7
2750:  BSF    16.7
2752:  BCF    FF2.7
2754:  MOVFF  69,A6
2758:  CALL   0242
275C:  BTFSC  16.7
275E:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
2760:  BRA    2806
2762:  CLRF   16
2764:  BTFSC  FF2.7
2766:  BSF    16.7
2768:  BCF    FF2.7
....................  
....................                           if(quantum*contador3<time3){ 
276A:  MOVFF  6A,A5
276E:  MOVFF  69,A4
2772:  CLRF   xA7
2774:  MOVFF  1B,A6
2778:  CALL   0268
277C:  BTFSC  16.7
277E:  BSF    FF2.7
2780:  MOVFF  02,97
2784:  MOVFF  01,96
2788:  MOVF   02,W
278A:  SUBWF  68,W
278C:  BNC   2806
278E:  BNZ   2796
2790:  MOVF   67,W
2792:  SUBWF  x96,W
2794:  BC    2806
....................                                rb3=1; 
2796:  BSF    F81.3
....................                                delay_ms(quantum); 
2798:  MOVFF  6A,96
279C:  INCF   x96,F
279E:  DECF   x96,F
27A0:  BTFSC  FD8.2
27A2:  BRA    27BA
27A4:  CLRF   16
27A6:  BTFSC  FF2.7
27A8:  BSF    16.7
27AA:  BCF    FF2.7
27AC:  MOVLW  FF
27AE:  MOVWF  xA6
27B0:  CALL   0242
27B4:  BTFSC  16.7
27B6:  BSF    FF2.7
27B8:  BRA    279E
27BA:  CLRF   16
27BC:  BTFSC  FF2.7
27BE:  BSF    16.7
27C0:  BCF    FF2.7
27C2:  MOVFF  69,A6
27C6:  CALL   0242
27CA:  BTFSC  16.7
27CC:  BSF    FF2.7
....................                                rb3=0; 
27CE:  BCF    F81.3
....................                                delay_ms(quantum); 
27D0:  MOVFF  6A,96
27D4:  INCF   x96,F
27D6:  DECF   x96,F
27D8:  BTFSC  FD8.2
27DA:  BRA    27F2
27DC:  CLRF   16
27DE:  BTFSC  FF2.7
27E0:  BSF    16.7
27E2:  BCF    FF2.7
27E4:  MOVLW  FF
27E6:  MOVWF  xA6
27E8:  CALL   0242
27EC:  BTFSC  16.7
27EE:  BSF    FF2.7
27F0:  BRA    27D6
27F2:  CLRF   16
27F4:  BTFSC  FF2.7
27F6:  BSF    16.7
27F8:  BCF    FF2.7
27FA:  MOVFF  69,A6
27FE:  CALL   0242
2802:  BTFSC  16.7
2804:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
2806:  MOVF   19,W
2808:  SUBLW  0A
280A:  BNZ   2816
280C:  MOVF   1C,W
280E:  SUBLW  09
2810:  BNC   2816
2812:  CALL   0F5A
....................                  if(contador3==20 ) do_proceso3(); 
2816:  MOVF   1B,W
2818:  SUBLW  14
281A:  BNZ   2820
281C:  CALL   100A
....................           
....................                  if(tecla_pulsada=='2'){ 
2820:  MOVF   17,W
2822:  SUBLW  32
2824:  BNZ   2828
....................                       break; 
2826:  BRA    282E
....................                   } 
....................                
....................                   contador1++; 
2828:  INCF   19,F
....................                    
....................               } 
282A:  INCF   1B,F
282C:  BRA    26AC
....................              } 
....................                        else{ 
282E:  BRA    29B6
....................                         for (contador1=1;contador1<=10;contador1++){ 
2830:  MOVLW  01
2832:  MOVWF  19
2834:  MOVF   19,W
2836:  SUBLW  0A
2838:  BTFSS  FD8.0
283A:  BRA    29B6
....................                     copia1=contador1; 
283C:  MOVFF  19,1C
2840:  CLRF   16
2842:  BTFSC  FF2.7
2844:  BSF    16.7
2846:  BCF    FF2.7
....................                     if(quantum*contador3<=time3){ 
2848:  MOVFF  6A,A5
284C:  MOVFF  69,A4
2850:  CLRF   xA7
2852:  MOVFF  1B,A6
2856:  CALL   0268
285A:  BTFSC  16.7
285C:  BSF    FF2.7
285E:  MOVFF  02,97
2862:  MOVFF  01,96
2866:  MOVF   02,W
2868:  SUBWF  68,W
286A:  BNC   28EA
286C:  BNZ   2874
286E:  MOVF   x96,W
2870:  SUBWF  67,W
2872:  BNC   28EA
....................                       rb3=1; 
2874:  BSF    F81.3
....................                       rb1=1; 
2876:  BSF    F81.1
....................                       delay_ms(quantum); 
2878:  MOVFF  6A,96
287C:  INCF   x96,F
287E:  DECF   x96,F
2880:  BTFSC  FD8.2
2882:  BRA    289A
2884:  CLRF   16
2886:  BTFSC  FF2.7
2888:  BSF    16.7
288A:  BCF    FF2.7
288C:  MOVLW  FF
288E:  MOVWF  xA6
2890:  CALL   0242
2894:  BTFSC  16.7
2896:  BSF    FF2.7
2898:  BRA    287E
289A:  CLRF   16
289C:  BTFSC  FF2.7
289E:  BSF    16.7
28A0:  BCF    FF2.7
28A2:  MOVFF  69,A6
28A6:  CALL   0242
28AA:  BTFSC  16.7
28AC:  BSF    FF2.7
....................                       rb1=0; 
28AE:  BCF    F81.1
....................                       rb3=0; 
28B0:  BCF    F81.3
....................                       delay_ms(quantum); 
28B2:  MOVFF  6A,96
28B6:  INCF   x96,F
28B8:  DECF   x96,F
28BA:  BTFSC  FD8.2
28BC:  BRA    28D4
28BE:  CLRF   16
28C0:  BTFSC  FF2.7
28C2:  BSF    16.7
28C4:  BCF    FF2.7
28C6:  MOVLW  FF
28C8:  MOVWF  xA6
28CA:  CALL   0242
28CE:  BTFSC  16.7
28D0:  BSF    FF2.7
28D2:  BRA    28B8
28D4:  CLRF   16
28D6:  BTFSC  FF2.7
28D8:  BSF    16.7
28DA:  BCF    FF2.7
28DC:  MOVFF  69,A6
28E0:  CALL   0242
28E4:  BTFSC  16.7
28E6:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
28E8:  BRA    298E
28EA:  CLRF   16
28EC:  BTFSC  FF2.7
28EE:  BSF    16.7
28F0:  BCF    FF2.7
....................  
....................                           if(quantum*contador1<time1){ 
28F2:  MOVFF  6A,A5
28F6:  MOVFF  69,A4
28FA:  CLRF   xA7
28FC:  MOVFF  19,A6
2900:  CALL   0268
2904:  BTFSC  16.7
2906:  BSF    FF2.7
2908:  MOVFF  02,97
290C:  MOVFF  01,96
2910:  MOVF   02,W
2912:  SUBWF  64,W
2914:  BNC   298E
2916:  BNZ   291E
2918:  MOVF   63,W
291A:  SUBWF  x96,W
291C:  BC    298E
....................                                rb1=1; 
291E:  BSF    F81.1
....................                                delay_ms(quantum); 
2920:  MOVFF  6A,96
2924:  INCF   x96,F
2926:  DECF   x96,F
2928:  BTFSC  FD8.2
292A:  BRA    2942
292C:  CLRF   16
292E:  BTFSC  FF2.7
2930:  BSF    16.7
2932:  BCF    FF2.7
2934:  MOVLW  FF
2936:  MOVWF  xA6
2938:  CALL   0242
293C:  BTFSC  16.7
293E:  BSF    FF2.7
2940:  BRA    2926
2942:  CLRF   16
2944:  BTFSC  FF2.7
2946:  BSF    16.7
2948:  BCF    FF2.7
294A:  MOVFF  69,A6
294E:  CALL   0242
2952:  BTFSC  16.7
2954:  BSF    FF2.7
....................                                rb1=0; 
2956:  BCF    F81.1
....................                                delay_ms(quantum); 
2958:  MOVFF  6A,96
295C:  INCF   x96,F
295E:  DECF   x96,F
2960:  BTFSC  FD8.2
2962:  BRA    297A
2964:  CLRF   16
2966:  BTFSC  FF2.7
2968:  BSF    16.7
296A:  BCF    FF2.7
296C:  MOVLW  FF
296E:  MOVWF  xA6
2970:  CALL   0242
2974:  BTFSC  16.7
2976:  BSF    FF2.7
2978:  BRA    295E
297A:  CLRF   16
297C:  BTFSC  FF2.7
297E:  BSF    16.7
2980:  BCF    FF2.7
2982:  MOVFF  69,A6
2986:  CALL   0242
298A:  BTFSC  16.7
298C:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
298E:  MOVF   19,W
2990:  SUBLW  0A
2992:  BNZ   2998
2994:  CALL   0F5A
....................                  if(contador3==20 && copia3<20) do_proceso3(); 
2998:  MOVF   1B,W
299A:  SUBLW  14
299C:  BNZ   29A8
299E:  MOVF   1E,W
29A0:  SUBLW  13
29A2:  BNC   29A8
29A4:  CALL   100A
....................           
....................                  if(tecla_pulsada=='2'){ 
29A8:  MOVF   17,W
29AA:  SUBLW  32
29AC:  BNZ   29B0
....................                       break; 
29AE:  BRA    29B6
....................                   } 
....................                
....................                   contador3++; 
29B0:  INCF   1B,F
....................                    
....................               } 
29B2:  INCF   19,F
29B4:  BRA    2834
....................                         
....................                         
....................           } 
....................            
....................               if(tecla_pulsada=='2'){ 
29B6:  MOVF   17,W
29B8:  SUBLW  32
29BA:  BTFSS  FD8.2
29BC:  BRA    2E42
....................                           if (copia3<=4){ 
29BE:  MOVF   1E,W
29C0:  SUBLW  04
29C2:  BTFSS  FD8.0
29C4:  BRA    2C06
....................                       for (contador3=1;contador3<=20;contador3++){ 
29C6:  MOVLW  01
29C8:  MOVWF  1B
29CA:  MOVF   1B,W
29CC:  SUBLW  14
29CE:  BTFSS  FD8.0
29D0:  BRA    2C04
....................                            copia3=contador3; 
29D2:  MOVFF  1B,1E
29D6:  CLRF   16
29D8:  BTFSC  FF2.7
29DA:  BSF    16.7
29DC:  BCF    FF2.7
....................                            if(quantum*contador1<time1){ 
29DE:  MOVFF  6A,A5
29E2:  MOVFF  69,A4
29E6:  CLRF   xA7
29E8:  MOVFF  19,A6
29EC:  CALL   0268
29F0:  BTFSC  16.7
29F2:  BSF    FF2.7
29F4:  MOVFF  02,97
29F8:  MOVFF  01,96
29FC:  MOVF   02,W
29FE:  SUBWF  64,W
2A00:  BNC   2A84
2A02:  BNZ   2A0A
2A04:  MOVF   63,W
2A06:  SUBWF  x96,W
2A08:  BC    2A84
....................                              rb2=1; 
2A0A:  BSF    F81.2
....................                              rb3=1; 
2A0C:  BSF    F81.3
....................                              rb1=1; 
2A0E:  BSF    F81.1
....................                              delay_ms(quantum); 
2A10:  MOVFF  6A,96
2A14:  INCF   x96,F
2A16:  DECF   x96,F
2A18:  BTFSC  FD8.2
2A1A:  BRA    2A32
2A1C:  CLRF   16
2A1E:  BTFSC  FF2.7
2A20:  BSF    16.7
2A22:  BCF    FF2.7
2A24:  MOVLW  FF
2A26:  MOVWF  xA6
2A28:  CALL   0242
2A2C:  BTFSC  16.7
2A2E:  BSF    FF2.7
2A30:  BRA    2A16
2A32:  CLRF   16
2A34:  BTFSC  FF2.7
2A36:  BSF    16.7
2A38:  BCF    FF2.7
2A3A:  MOVFF  69,A6
2A3E:  CALL   0242
2A42:  BTFSC  16.7
2A44:  BSF    FF2.7
....................                              rb2=0; 
2A46:  BCF    F81.2
....................                              rb3=0; 
2A48:  BCF    F81.3
....................                              rb1=0; 
2A4A:  BCF    F81.1
....................                              delay_ms(quantum); 
2A4C:  MOVFF  6A,96
2A50:  INCF   x96,F
2A52:  DECF   x96,F
2A54:  BTFSC  FD8.2
2A56:  BRA    2A6E
2A58:  CLRF   16
2A5A:  BTFSC  FF2.7
2A5C:  BSF    16.7
2A5E:  BCF    FF2.7
2A60:  MOVLW  FF
2A62:  MOVWF  xA6
2A64:  CALL   0242
2A68:  BTFSC  16.7
2A6A:  BSF    FF2.7
2A6C:  BRA    2A52
2A6E:  CLRF   16
2A70:  BTFSC  FF2.7
2A72:  BSF    16.7
2A74:  BCF    FF2.7
2A76:  MOVFF  69,A6
2A7A:  CALL   0242
2A7E:  BTFSC  16.7
2A80:  BSF    FF2.7
....................                          
....................                                                }                                              
....................                    else  { 
2A82:  BRA    2BD2
2A84:  CLRF   16
2A86:  BTFSC  FF2.7
2A88:  BSF    16.7
2A8A:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<time2){ 
2A8C:  MOVFF  6A,A5
2A90:  MOVFF  69,A4
2A94:  CLRF   xA7
2A96:  MOVFF  1A,A6
2A9A:  CALL   0268
2A9E:  BTFSC  16.7
2AA0:  BSF    FF2.7
2AA2:  MOVFF  02,97
2AA6:  MOVFF  01,96
2AAA:  MOVF   02,W
2AAC:  SUBWF  66,W
2AAE:  BNC   2B2E
2AB0:  BNZ   2AB8
2AB2:  MOVF   65,W
2AB4:  SUBWF  x96,W
2AB6:  BC    2B2E
....................                                rb3=1; 
2AB8:  BSF    F81.3
....................                                rb2=1; 
2ABA:  BSF    F81.2
....................                                delay_ms(quantum); 
2ABC:  MOVFF  6A,96
2AC0:  INCF   x96,F
2AC2:  DECF   x96,F
2AC4:  BTFSC  FD8.2
2AC6:  BRA    2ADE
2AC8:  CLRF   16
2ACA:  BTFSC  FF2.7
2ACC:  BSF    16.7
2ACE:  BCF    FF2.7
2AD0:  MOVLW  FF
2AD2:  MOVWF  xA6
2AD4:  CALL   0242
2AD8:  BTFSC  16.7
2ADA:  BSF    FF2.7
2ADC:  BRA    2AC2
2ADE:  CLRF   16
2AE0:  BTFSC  FF2.7
2AE2:  BSF    16.7
2AE4:  BCF    FF2.7
2AE6:  MOVFF  69,A6
2AEA:  CALL   0242
2AEE:  BTFSC  16.7
2AF0:  BSF    FF2.7
....................                                rb3=0; 
2AF2:  BCF    F81.3
....................                                rb2=0; 
2AF4:  BCF    F81.2
....................                                delay_ms(quantum); 
2AF6:  MOVFF  6A,96
2AFA:  INCF   x96,F
2AFC:  DECF   x96,F
2AFE:  BTFSC  FD8.2
2B00:  BRA    2B18
2B02:  CLRF   16
2B04:  BTFSC  FF2.7
2B06:  BSF    16.7
2B08:  BCF    FF2.7
2B0A:  MOVLW  FF
2B0C:  MOVWF  xA6
2B0E:  CALL   0242
2B12:  BTFSC  16.7
2B14:  BSF    FF2.7
2B16:  BRA    2AFC
2B18:  CLRF   16
2B1A:  BTFSC  FF2.7
2B1C:  BSF    16.7
2B1E:  BCF    FF2.7
2B20:  MOVFF  69,A6
2B24:  CALL   0242
2B28:  BTFSC  16.7
2B2A:  BSF    FF2.7
....................                                                     }  
....................                      else{ 
2B2C:  BRA    2BD2
2B2E:  CLRF   16
2B30:  BTFSC  FF2.7
2B32:  BSF    16.7
2B34:  BCF    FF2.7
....................                          if(quantum*contador3<time3){ 
2B36:  MOVFF  6A,A5
2B3A:  MOVFF  69,A4
2B3E:  CLRF   xA7
2B40:  MOVFF  1B,A6
2B44:  CALL   0268
2B48:  BTFSC  16.7
2B4A:  BSF    FF2.7
2B4C:  MOVFF  02,97
2B50:  MOVFF  01,96
2B54:  MOVF   02,W
2B56:  SUBWF  68,W
2B58:  BNC   2BD2
2B5A:  BNZ   2B62
2B5C:  MOVF   67,W
2B5E:  SUBWF  x96,W
2B60:  BC    2BD2
....................                                rb3=1; 
2B62:  BSF    F81.3
....................                                delay_ms(quantum); 
2B64:  MOVFF  6A,96
2B68:  INCF   x96,F
2B6A:  DECF   x96,F
2B6C:  BTFSC  FD8.2
2B6E:  BRA    2B86
2B70:  CLRF   16
2B72:  BTFSC  FF2.7
2B74:  BSF    16.7
2B76:  BCF    FF2.7
2B78:  MOVLW  FF
2B7A:  MOVWF  xA6
2B7C:  CALL   0242
2B80:  BTFSC  16.7
2B82:  BSF    FF2.7
2B84:  BRA    2B6A
2B86:  CLRF   16
2B88:  BTFSC  FF2.7
2B8A:  BSF    16.7
2B8C:  BCF    FF2.7
2B8E:  MOVFF  69,A6
2B92:  CALL   0242
2B96:  BTFSC  16.7
2B98:  BSF    FF2.7
....................                                rb3=0; 
2B9A:  BCF    F81.3
....................                                delay_ms(quantum); 
2B9C:  MOVFF  6A,96
2BA0:  INCF   x96,F
2BA2:  DECF   x96,F
2BA4:  BTFSC  FD8.2
2BA6:  BRA    2BBE
2BA8:  CLRF   16
2BAA:  BTFSC  FF2.7
2BAC:  BSF    16.7
2BAE:  BCF    FF2.7
2BB0:  MOVLW  FF
2BB2:  MOVWF  xA6
2BB4:  CALL   0242
2BB8:  BTFSC  16.7
2BBA:  BSF    FF2.7
2BBC:  BRA    2BA2
2BBE:  CLRF   16
2BC0:  BTFSC  FF2.7
2BC2:  BSF    16.7
2BC4:  BCF    FF2.7
2BC6:  MOVFF  69,A6
2BCA:  CALL   0242
2BCE:  BTFSC  16.7
2BD0:  BSF    FF2.7
....................                                                      }  
....................                            } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1();                 
2BD2:  MOVF   19,W
2BD4:  SUBLW  0A
2BD6:  BNZ   2BE2
2BD8:  MOVF   1C,W
2BDA:  SUBLW  09
2BDC:  BNC   2BE2
2BDE:  CALL   0F5A
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
2BE2:  MOVF   1A,W
2BE4:  SUBLW  10
2BE6:  BNZ   2BF2
2BE8:  MOVF   1D,W
2BEA:  SUBLW  0F
2BEC:  BNC   2BF2
2BEE:  CALL   0FB2
....................                  if(contador3==20 )do_proceso3(); 
2BF2:  MOVF   1B,W
2BF4:  SUBLW  14
2BF6:  BNZ   2BFC
2BF8:  CALL   100A
....................  
....................                   contador1++; 
2BFC:  INCF   19,F
....................                   contador2++; 
2BFE:  INCF   1A,F
....................                  
....................               } // 
2C00:  INCF   1B,F
2C02:  BRA    29CA
....................                           } 
....................               
....................               
....................              else 
2C04:  BRA    2E42
....................                  { 
....................                      for (contador2=1;contador2<=16;contador2++){ 
2C06:  MOVLW  01
2C08:  MOVWF  1A
2C0A:  MOVF   1A,W
2C0C:  SUBLW  10
2C0E:  BTFSS  FD8.0
2C10:  BRA    2E42
....................                            copia2=contador2; 
2C12:  MOVFF  1A,1D
2C16:  CLRF   16
2C18:  BTFSC  FF2.7
2C1A:  BSF    16.7
2C1C:  BCF    FF2.7
....................                            if(quantum*contador1<time1){ 
2C1E:  MOVFF  6A,A5
2C22:  MOVFF  69,A4
2C26:  CLRF   xA7
2C28:  MOVFF  19,A6
2C2C:  CALL   0268
2C30:  BTFSC  16.7
2C32:  BSF    FF2.7
2C34:  MOVFF  02,97
2C38:  MOVFF  01,96
2C3C:  MOVF   02,W
2C3E:  SUBWF  64,W
2C40:  BTFSS  FD8.0
2C42:  BRA    2D72
2C44:  BNZ   2C4E
2C46:  MOVF   63,W
2C48:  SUBWF  x96,W
2C4A:  BTFSC  FD8.0
2C4C:  BRA    2D72
2C4E:  CLRF   16
2C50:  BTFSC  FF2.7
2C52:  BSF    16.7
2C54:  BCF    FF2.7
....................                            if(quantum*contador3<time3){ 
2C56:  MOVFF  6A,A5
2C5A:  MOVFF  69,A4
2C5E:  CLRF   xA7
2C60:  MOVFF  1B,A6
2C64:  CALL   0268
2C68:  BTFSC  16.7
2C6A:  BSF    FF2.7
2C6C:  MOVFF  02,97
2C70:  MOVFF  01,96
2C74:  MOVF   02,W
2C76:  SUBWF  68,W
2C78:  BNC   2CFC
2C7A:  BNZ   2C82
2C7C:  MOVF   67,W
2C7E:  SUBWF  x96,W
2C80:  BC    2CFC
....................                              rb2=1; 
2C82:  BSF    F81.2
....................                              rb3=1; 
2C84:  BSF    F81.3
....................                              rb1=1; 
2C86:  BSF    F81.1
....................                              delay_ms(quantum); 
2C88:  MOVFF  6A,96
2C8C:  INCF   x96,F
2C8E:  DECF   x96,F
2C90:  BTFSC  FD8.2
2C92:  BRA    2CAA
2C94:  CLRF   16
2C96:  BTFSC  FF2.7
2C98:  BSF    16.7
2C9A:  BCF    FF2.7
2C9C:  MOVLW  FF
2C9E:  MOVWF  xA6
2CA0:  CALL   0242
2CA4:  BTFSC  16.7
2CA6:  BSF    FF2.7
2CA8:  BRA    2C8E
2CAA:  CLRF   16
2CAC:  BTFSC  FF2.7
2CAE:  BSF    16.7
2CB0:  BCF    FF2.7
2CB2:  MOVFF  69,A6
2CB6:  CALL   0242
2CBA:  BTFSC  16.7
2CBC:  BSF    FF2.7
....................                              rb2=0; 
2CBE:  BCF    F81.2
....................                              rb3=0; 
2CC0:  BCF    F81.3
....................                              rb1=0; 
2CC2:  BCF    F81.1
....................                              delay_ms(quantum); 
2CC4:  MOVFF  6A,96
2CC8:  INCF   x96,F
2CCA:  DECF   x96,F
2CCC:  BTFSC  FD8.2
2CCE:  BRA    2CE6
2CD0:  CLRF   16
2CD2:  BTFSC  FF2.7
2CD4:  BSF    16.7
2CD6:  BCF    FF2.7
2CD8:  MOVLW  FF
2CDA:  MOVWF  xA6
2CDC:  CALL   0242
2CE0:  BTFSC  16.7
2CE2:  BSF    FF2.7
2CE4:  BRA    2CCA
2CE6:  CLRF   16
2CE8:  BTFSC  FF2.7
2CEA:  BSF    16.7
2CEC:  BCF    FF2.7
2CEE:  MOVFF  69,A6
2CF2:  CALL   0242
2CF6:  BTFSC  16.7
2CF8:  BSF    FF2.7
....................                              } 
....................                              else{ 
2CFA:  BRA    2D70
....................                              rb2=1; 
2CFC:  BSF    F81.2
....................                              rb1=1; 
2CFE:  BSF    F81.1
....................                              delay_ms(quantum); 
2D00:  MOVFF  6A,96
2D04:  INCF   x96,F
2D06:  DECF   x96,F
2D08:  BTFSC  FD8.2
2D0A:  BRA    2D22
2D0C:  CLRF   16
2D0E:  BTFSC  FF2.7
2D10:  BSF    16.7
2D12:  BCF    FF2.7
2D14:  MOVLW  FF
2D16:  MOVWF  xA6
2D18:  CALL   0242
2D1C:  BTFSC  16.7
2D1E:  BSF    FF2.7
2D20:  BRA    2D06
2D22:  CLRF   16
2D24:  BTFSC  FF2.7
2D26:  BSF    16.7
2D28:  BCF    FF2.7
2D2A:  MOVFF  69,A6
2D2E:  CALL   0242
2D32:  BTFSC  16.7
2D34:  BSF    FF2.7
....................                              rb2=0; 
2D36:  BCF    F81.2
....................                              rb1=0; 
2D38:  BCF    F81.1
....................                              delay_ms(quantum); 
2D3A:  MOVFF  6A,96
2D3E:  INCF   x96,F
2D40:  DECF   x96,F
2D42:  BTFSC  FD8.2
2D44:  BRA    2D5C
2D46:  CLRF   16
2D48:  BTFSC  FF2.7
2D4A:  BSF    16.7
2D4C:  BCF    FF2.7
2D4E:  MOVLW  FF
2D50:  MOVWF  xA6
2D52:  CALL   0242
2D56:  BTFSC  16.7
2D58:  BSF    FF2.7
2D5A:  BRA    2D40
2D5C:  CLRF   16
2D5E:  BTFSC  FF2.7
2D60:  BSF    16.7
2D62:  BCF    FF2.7
2D64:  MOVFF  69,A6
2D68:  CALL   0242
2D6C:  BTFSC  16.7
2D6E:  BSF    FF2.7
....................                              } 
....................                               
....................                          
....................                                                }                                              
....................                    else  { 
2D70:  BRA    2E16
2D72:  CLRF   16
2D74:  BTFSC  FF2.7
2D76:  BSF    16.7
2D78:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<time2){ 
2D7A:  MOVFF  6A,A5
2D7E:  MOVFF  69,A4
2D82:  CLRF   xA7
2D84:  MOVFF  1A,A6
2D88:  CALL   0268
2D8C:  BTFSC  16.7
2D8E:  BSF    FF2.7
2D90:  MOVFF  02,97
2D94:  MOVFF  01,96
2D98:  MOVF   02,W
2D9A:  SUBWF  66,W
2D9C:  BNC   2E16
2D9E:  BNZ   2DA6
2DA0:  MOVF   65,W
2DA2:  SUBWF  x96,W
2DA4:  BC    2E16
....................                                rb2=1; 
2DA6:  BSF    F81.2
....................                                delay_ms(quantum); 
2DA8:  MOVFF  6A,96
2DAC:  INCF   x96,F
2DAE:  DECF   x96,F
2DB0:  BTFSC  FD8.2
2DB2:  BRA    2DCA
2DB4:  CLRF   16
2DB6:  BTFSC  FF2.7
2DB8:  BSF    16.7
2DBA:  BCF    FF2.7
2DBC:  MOVLW  FF
2DBE:  MOVWF  xA6
2DC0:  CALL   0242
2DC4:  BTFSC  16.7
2DC6:  BSF    FF2.7
2DC8:  BRA    2DAE
2DCA:  CLRF   16
2DCC:  BTFSC  FF2.7
2DCE:  BSF    16.7
2DD0:  BCF    FF2.7
2DD2:  MOVFF  69,A6
2DD6:  CALL   0242
2DDA:  BTFSC  16.7
2DDC:  BSF    FF2.7
....................                                rb2=0; 
2DDE:  BCF    F81.2
....................                                delay_ms(quantum); 
2DE0:  MOVFF  6A,96
2DE4:  INCF   x96,F
2DE6:  DECF   x96,F
2DE8:  BTFSC  FD8.2
2DEA:  BRA    2E02
2DEC:  CLRF   16
2DEE:  BTFSC  FF2.7
2DF0:  BSF    16.7
2DF2:  BCF    FF2.7
2DF4:  MOVLW  FF
2DF6:  MOVWF  xA6
2DF8:  CALL   0242
2DFC:  BTFSC  16.7
2DFE:  BSF    FF2.7
2E00:  BRA    2DE6
2E02:  CLRF   16
2E04:  BTFSC  FF2.7
2E06:  BSF    16.7
2E08:  BCF    FF2.7
2E0A:  MOVFF  69,A6
2E0E:  CALL   0242
2E12:  BTFSC  16.7
2E14:  BSF    FF2.7
....................                                                     }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1();                 
2E16:  MOVF   19,W
2E18:  SUBLW  0A
2E1A:  BNZ   2E26
2E1C:  MOVF   1C,W
2E1E:  SUBLW  09
2E20:  BNC   2E26
2E22:  CALL   0F5A
....................                  if(contador2==16 ) do_proceso2(); 
2E26:  MOVF   1A,W
2E28:  SUBLW  10
2E2A:  BNZ   2E30
2E2C:  CALL   0FB2
....................                  if(contador3==20 )do_proceso3(); 
2E30:  MOVF   1B,W
2E32:  SUBLW  14
2E34:  BNZ   2E3A
2E36:  CALL   100A
....................  
....................                   contador1++; 
2E3A:  INCF   19,F
....................                   contador3++; 
2E3C:  INCF   1B,F
....................                  
....................               } // 
2E3E:  INCF   1A,F
2E40:  BRA    2C0A
....................           
....................           
....................                  } 
....................          }   
....................           
....................           
....................      }   
....................      //       
....................          else{ 
2E42:  GOTO   3B06
....................           
....................           if(tecla_pulsada=='2'){ 
2E46:  MOVF   17,W
2E48:  SUBLW  32
2E4A:  BTFSS  FD8.2
2E4C:  GOTO   3B06
....................                if(copia3<=4){// 
2E50:  MOVF   1E,W
2E52:  SUBLW  04
2E54:  BTFSS  FD8.0
2E56:  BRA    3508
....................                for (contador3=1;contador3<=20;contador3++){ 
2E58:  MOVLW  01
2E5A:  MOVWF  1B
2E5C:  MOVF   1B,W
2E5E:  SUBLW  14
2E60:  BTFSS  FD8.0
2E62:  BRA    2FDE
....................                     copia3=contador3; 
2E64:  MOVFF  1B,1E
2E68:  CLRF   16
2E6A:  BTFSC  FF2.7
2E6C:  BSF    16.7
2E6E:  BCF    FF2.7
....................                     if(quantum*contador2<time2){ 
2E70:  MOVFF  6A,A5
2E74:  MOVFF  69,A4
2E78:  CLRF   xA7
2E7A:  MOVFF  1A,A6
2E7E:  CALL   0268
2E82:  BTFSC  16.7
2E84:  BSF    FF2.7
2E86:  MOVFF  02,97
2E8A:  MOVFF  01,96
2E8E:  MOVF   02,W
2E90:  SUBWF  66,W
2E92:  BNC   2F12
2E94:  BNZ   2E9C
2E96:  MOVF   65,W
2E98:  SUBWF  x96,W
2E9A:  BC    2F12
....................                       
....................                       rb3=1; 
2E9C:  BSF    F81.3
....................                       rb2=1; 
2E9E:  BSF    F81.2
....................                       delay_ms(quantum); 
2EA0:  MOVFF  6A,96
2EA4:  INCF   x96,F
2EA6:  DECF   x96,F
2EA8:  BTFSC  FD8.2
2EAA:  BRA    2EC2
2EAC:  CLRF   16
2EAE:  BTFSC  FF2.7
2EB0:  BSF    16.7
2EB2:  BCF    FF2.7
2EB4:  MOVLW  FF
2EB6:  MOVWF  xA6
2EB8:  CALL   0242
2EBC:  BTFSC  16.7
2EBE:  BSF    FF2.7
2EC0:  BRA    2EA6
2EC2:  CLRF   16
2EC4:  BTFSC  FF2.7
2EC6:  BSF    16.7
2EC8:  BCF    FF2.7
2ECA:  MOVFF  69,A6
2ECE:  CALL   0242
2ED2:  BTFSC  16.7
2ED4:  BSF    FF2.7
....................                       rb3=0; 
2ED6:  BCF    F81.3
....................                       rb2=0; 
2ED8:  BCF    F81.2
....................                       
....................                       delay_ms(quantum); 
2EDA:  MOVFF  6A,96
2EDE:  INCF   x96,F
2EE0:  DECF   x96,F
2EE2:  BTFSC  FD8.2
2EE4:  BRA    2EFC
2EE6:  CLRF   16
2EE8:  BTFSC  FF2.7
2EEA:  BSF    16.7
2EEC:  BCF    FF2.7
2EEE:  MOVLW  FF
2EF0:  MOVWF  xA6
2EF2:  CALL   0242
2EF6:  BTFSC  16.7
2EF8:  BSF    FF2.7
2EFA:  BRA    2EE0
2EFC:  CLRF   16
2EFE:  BTFSC  FF2.7
2F00:  BSF    16.7
2F02:  BCF    FF2.7
2F04:  MOVFF  69,A6
2F08:  CALL   0242
2F0C:  BTFSC  16.7
2F0E:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
2F10:  BRA    2FB6
2F12:  CLRF   16
2F14:  BTFSC  FF2.7
2F16:  BSF    16.7
2F18:  BCF    FF2.7
....................                     
....................                           if(quantum*contador3<=time3){ 
2F1A:  MOVFF  6A,A5
2F1E:  MOVFF  69,A4
2F22:  CLRF   xA7
2F24:  MOVFF  1B,A6
2F28:  CALL   0268
2F2C:  BTFSC  16.7
2F2E:  BSF    FF2.7
2F30:  MOVFF  02,97
2F34:  MOVFF  01,96
2F38:  MOVF   02,W
2F3A:  SUBWF  68,W
2F3C:  BNC   2FB6
2F3E:  BNZ   2F46
2F40:  MOVF   x96,W
2F42:  SUBWF  67,W
2F44:  BNC   2FB6
....................                                 
....................                                rb3=1; 
2F46:  BSF    F81.3
....................                                delay_ms(quantum); 
2F48:  MOVFF  6A,96
2F4C:  INCF   x96,F
2F4E:  DECF   x96,F
2F50:  BTFSC  FD8.2
2F52:  BRA    2F6A
2F54:  CLRF   16
2F56:  BTFSC  FF2.7
2F58:  BSF    16.7
2F5A:  BCF    FF2.7
2F5C:  MOVLW  FF
2F5E:  MOVWF  xA6
2F60:  CALL   0242
2F64:  BTFSC  16.7
2F66:  BSF    FF2.7
2F68:  BRA    2F4E
2F6A:  CLRF   16
2F6C:  BTFSC  FF2.7
2F6E:  BSF    16.7
2F70:  BCF    FF2.7
2F72:  MOVFF  69,A6
2F76:  CALL   0242
2F7A:  BTFSC  16.7
2F7C:  BSF    FF2.7
....................                                rb3=0; 
2F7E:  BCF    F81.3
....................                                delay_ms(quantum); 
2F80:  MOVFF  6A,96
2F84:  INCF   x96,F
2F86:  DECF   x96,F
2F88:  BTFSC  FD8.2
2F8A:  BRA    2FA2
2F8C:  CLRF   16
2F8E:  BTFSC  FF2.7
2F90:  BSF    16.7
2F92:  BCF    FF2.7
2F94:  MOVLW  FF
2F96:  MOVWF  xA6
2F98:  CALL   0242
2F9C:  BTFSC  16.7
2F9E:  BSF    FF2.7
2FA0:  BRA    2F86
2FA2:  CLRF   16
2FA4:  BTFSC  FF2.7
2FA6:  BSF    16.7
2FA8:  BCF    FF2.7
2FAA:  MOVFF  69,A6
2FAE:  CALL   0242
2FB2:  BTFSC  16.7
2FB4:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
2FB6:  MOVF   1A,W
2FB8:  SUBLW  10
2FBA:  BNZ   2FC6
2FBC:  MOVF   1D,W
2FBE:  SUBLW  0F
2FC0:  BNC   2FC6
2FC2:  CALL   0FB2
....................                  if(contador3==20 )do_proceso3(); 
2FC6:  MOVF   1B,W
2FC8:  SUBLW  14
2FCA:  BNZ   2FD0
2FCC:  CALL   100A
....................                   
....................                  if(tecla_pulsada=='1'){ 
2FD0:  MOVF   17,W
2FD2:  SUBLW  31
2FD4:  BNZ   2FD8
....................                       break; 
2FD6:  BRA    2FDE
....................                   } 
....................                   contador2++; 
2FD8:  INCF   1A,F
....................  
....................                  } 
2FDA:  INCF   1B,F
2FDC:  BRA    2E5C
....................                  if(tecla_pulsada=='1'){ 
2FDE:  MOVF   17,W
2FE0:  SUBLW  31
2FE2:  BTFSS  FD8.2
2FE4:  BRA    3506
....................                          if(copia3<=10){ 
2FE6:  MOVF   1E,W
2FE8:  SUBLW  0A
2FEA:  BTFSS  FD8.0
2FEC:  BRA    32D0
....................                          for (contador3=copia3;contador3<=20;contador3++){ 
2FEE:  MOVFF  1E,1B
2FF2:  MOVF   1B,W
2FF4:  SUBLW  14
2FF6:  BTFSS  FD8.0
2FF8:  BRA    32CE
....................                               copia3=contador3; 
2FFA:  MOVFF  1B,1E
2FFE:  CLRF   16
3000:  BTFSC  FF2.7
3002:  BSF    16.7
3004:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
3006:  MOVFF  6A,A5
300A:  MOVFF  69,A4
300E:  CLRF   xA7
3010:  MOVFF  19,A6
3014:  CALL   0268
3018:  BTFSC  16.7
301A:  BSF    FF2.7
301C:  MOVFF  02,97
3020:  MOVFF  01,96
3024:  MOVF   02,W
3026:  SUBWF  64,W
3028:  BTFSS  FD8.0
302A:  BRA    315A
302C:  BNZ   3036
302E:  MOVF   x96,W
3030:  SUBWF  63,W
3032:  BTFSS  FD8.0
3034:  BRA    315A
3036:  CLRF   16
3038:  BTFSC  FF2.7
303A:  BSF    16.7
303C:  BCF    FF2.7
....................                     if(quantum*contador2<=time2){ 
303E:  MOVFF  6A,A5
3042:  MOVFF  69,A4
3046:  CLRF   xA7
3048:  MOVFF  1A,A6
304C:  CALL   0268
3050:  BTFSC  16.7
3052:  BSF    FF2.7
3054:  MOVFF  02,97
3058:  MOVFF  01,96
305C:  MOVF   02,W
305E:  SUBWF  66,W
3060:  BNC   30E4
3062:  BNZ   306A
3064:  MOVF   x96,W
3066:  SUBWF  65,W
3068:  BNC   30E4
....................                              rb2=1; 
306A:  BSF    F81.2
....................                              rb3=1; 
306C:  BSF    F81.3
....................                              rb1=1; 
306E:  BSF    F81.1
....................                              delay_ms(quantum); 
3070:  MOVFF  6A,96
3074:  INCF   x96,F
3076:  DECF   x96,F
3078:  BTFSC  FD8.2
307A:  BRA    3092
307C:  CLRF   16
307E:  BTFSC  FF2.7
3080:  BSF    16.7
3082:  BCF    FF2.7
3084:  MOVLW  FF
3086:  MOVWF  xA6
3088:  CALL   0242
308C:  BTFSC  16.7
308E:  BSF    FF2.7
3090:  BRA    3076
3092:  CLRF   16
3094:  BTFSC  FF2.7
3096:  BSF    16.7
3098:  BCF    FF2.7
309A:  MOVFF  69,A6
309E:  CALL   0242
30A2:  BTFSC  16.7
30A4:  BSF    FF2.7
....................                              rb2=0; 
30A6:  BCF    F81.2
....................                              rb3=0; 
30A8:  BCF    F81.3
....................                              rb1=0; 
30AA:  BCF    F81.1
....................                              delay_ms(quantum); 
30AC:  MOVFF  6A,96
30B0:  INCF   x96,F
30B2:  DECF   x96,F
30B4:  BTFSC  FD8.2
30B6:  BRA    30CE
30B8:  CLRF   16
30BA:  BTFSC  FF2.7
30BC:  BSF    16.7
30BE:  BCF    FF2.7
30C0:  MOVLW  FF
30C2:  MOVWF  xA6
30C4:  CALL   0242
30C8:  BTFSC  16.7
30CA:  BSF    FF2.7
30CC:  BRA    30B2
30CE:  CLRF   16
30D0:  BTFSC  FF2.7
30D2:  BSF    16.7
30D4:  BCF    FF2.7
30D6:  MOVFF  69,A6
30DA:  CALL   0242
30DE:  BTFSC  16.7
30E0:  BSF    FF2.7
....................                     } 
....................                     else{   
30E2:  BRA    3158
....................                              rb3=1; 
30E4:  BSF    F81.3
....................                              rb1=1; 
30E6:  BSF    F81.1
....................                              delay_ms(quantum); 
30E8:  MOVFF  6A,96
30EC:  INCF   x96,F
30EE:  DECF   x96,F
30F0:  BTFSC  FD8.2
30F2:  BRA    310A
30F4:  CLRF   16
30F6:  BTFSC  FF2.7
30F8:  BSF    16.7
30FA:  BCF    FF2.7
30FC:  MOVLW  FF
30FE:  MOVWF  xA6
3100:  CALL   0242
3104:  BTFSC  16.7
3106:  BSF    FF2.7
3108:  BRA    30EE
310A:  CLRF   16
310C:  BTFSC  FF2.7
310E:  BSF    16.7
3110:  BCF    FF2.7
3112:  MOVFF  69,A6
3116:  CALL   0242
311A:  BTFSC  16.7
311C:  BSF    FF2.7
....................                              rb3=0; 
311E:  BCF    F81.3
....................                              rb1=0; 
3120:  BCF    F81.1
....................                              delay_ms(quantum); 
3122:  MOVFF  6A,96
3126:  INCF   x96,F
3128:  DECF   x96,F
312A:  BTFSC  FD8.2
312C:  BRA    3144
312E:  CLRF   16
3130:  BTFSC  FF2.7
3132:  BSF    16.7
3134:  BCF    FF2.7
3136:  MOVLW  FF
3138:  MOVWF  xA6
313A:  CALL   0242
313E:  BTFSC  16.7
3140:  BSF    FF2.7
3142:  BRA    3128
3144:  CLRF   16
3146:  BTFSC  FF2.7
3148:  BSF    16.7
314A:  BCF    FF2.7
314C:  MOVFF  69,A6
3150:  CALL   0242
3154:  BTFSC  16.7
3156:  BSF    FF2.7
....................                     } 
....................                                                } 
....................                                                 
....................                    else  { 
3158:  BRA    32A8
315A:  CLRF   16
315C:  BTFSC  FF2.7
315E:  BSF    16.7
3160:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<=time2){ 
3162:  MOVFF  6A,A5
3166:  MOVFF  69,A4
316A:  CLRF   xA7
316C:  MOVFF  1A,A6
3170:  CALL   0268
3174:  BTFSC  16.7
3176:  BSF    FF2.7
3178:  MOVFF  02,97
317C:  MOVFF  01,96
3180:  MOVF   02,W
3182:  SUBWF  66,W
3184:  BNC   3204
3186:  BNZ   318E
3188:  MOVF   x96,W
318A:  SUBWF  65,W
318C:  BNC   3204
....................                                rb2=1; 
318E:  BSF    F81.2
....................                                rb3=1; 
3190:  BSF    F81.3
....................                                delay_ms(quantum); 
3192:  MOVFF  6A,96
3196:  INCF   x96,F
3198:  DECF   x96,F
319A:  BTFSC  FD8.2
319C:  BRA    31B4
319E:  CLRF   16
31A0:  BTFSC  FF2.7
31A2:  BSF    16.7
31A4:  BCF    FF2.7
31A6:  MOVLW  FF
31A8:  MOVWF  xA6
31AA:  CALL   0242
31AE:  BTFSC  16.7
31B0:  BSF    FF2.7
31B2:  BRA    3198
31B4:  CLRF   16
31B6:  BTFSC  FF2.7
31B8:  BSF    16.7
31BA:  BCF    FF2.7
31BC:  MOVFF  69,A6
31C0:  CALL   0242
31C4:  BTFSC  16.7
31C6:  BSF    FF2.7
....................                                rb2=0; 
31C8:  BCF    F81.2
....................                                rb3=0; 
31CA:  BCF    F81.3
....................                                delay_ms(quantum); 
31CC:  MOVFF  6A,96
31D0:  INCF   x96,F
31D2:  DECF   x96,F
31D4:  BTFSC  FD8.2
31D6:  BRA    31EE
31D8:  CLRF   16
31DA:  BTFSC  FF2.7
31DC:  BSF    16.7
31DE:  BCF    FF2.7
31E0:  MOVLW  FF
31E2:  MOVWF  xA6
31E4:  CALL   0242
31E8:  BTFSC  16.7
31EA:  BSF    FF2.7
31EC:  BRA    31D2
31EE:  CLRF   16
31F0:  BTFSC  FF2.7
31F2:  BSF    16.7
31F4:  BCF    FF2.7
31F6:  MOVFF  69,A6
31FA:  CALL   0242
31FE:  BTFSC  16.7
3200:  BSF    FF2.7
....................                                                      }  
....................                              else{ 
3202:  BRA    32A8
3204:  CLRF   16
3206:  BTFSC  FF2.7
3208:  BSF    16.7
320A:  BCF    FF2.7
....................                                         if(quantum*contador3<=time3){ 
320C:  MOVFF  6A,A5
3210:  MOVFF  69,A4
3214:  CLRF   xA7
3216:  MOVFF  1B,A6
321A:  CALL   0268
321E:  BTFSC  16.7
3220:  BSF    FF2.7
3222:  MOVFF  02,97
3226:  MOVFF  01,96
322A:  MOVF   02,W
322C:  SUBWF  68,W
322E:  BNC   32A8
3230:  BNZ   3238
3232:  MOVF   x96,W
3234:  SUBWF  67,W
3236:  BNC   32A8
....................                                rb3=1; 
3238:  BSF    F81.3
....................                                delay_ms(quantum); 
323A:  MOVFF  6A,96
323E:  INCF   x96,F
3240:  DECF   x96,F
3242:  BTFSC  FD8.2
3244:  BRA    325C
3246:  CLRF   16
3248:  BTFSC  FF2.7
324A:  BSF    16.7
324C:  BCF    FF2.7
324E:  MOVLW  FF
3250:  MOVWF  xA6
3252:  CALL   0242
3256:  BTFSC  16.7
3258:  BSF    FF2.7
325A:  BRA    3240
325C:  CLRF   16
325E:  BTFSC  FF2.7
3260:  BSF    16.7
3262:  BCF    FF2.7
3264:  MOVFF  69,A6
3268:  CALL   0242
326C:  BTFSC  16.7
326E:  BSF    FF2.7
....................                                rb3=0; 
3270:  BCF    F81.3
....................                                
....................                                delay_ms(quantum); 
3272:  MOVFF  6A,96
3276:  INCF   x96,F
3278:  DECF   x96,F
327A:  BTFSC  FD8.2
327C:  BRA    3294
327E:  CLRF   16
3280:  BTFSC  FF2.7
3282:  BSF    16.7
3284:  BCF    FF2.7
3286:  MOVLW  FF
3288:  MOVWF  xA6
328A:  CALL   0242
328E:  BTFSC  16.7
3290:  BSF    FF2.7
3292:  BRA    3278
3294:  CLRF   16
3296:  BTFSC  FF2.7
3298:  BSF    16.7
329A:  BCF    FF2.7
329C:  MOVFF  69,A6
32A0:  CALL   0242
32A4:  BTFSC  16.7
32A6:  BSF    FF2.7
....................                                                      }                
....................                                                       
....................                                                      } 
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
32A8:  MOVF   19,W
32AA:  SUBLW  0A
32AC:  BNZ   32B2
32AE:  CALL   0F5A
....................                  if(contador3==20 )do_proceso3(); 
32B2:  MOVF   1B,W
32B4:  SUBLW  14
32B6:  BNZ   32BC
32B8:  CALL   100A
....................                  if(contador2==16 )do_proceso2(); 
32BC:  MOVF   1A,W
32BE:  SUBLW  10
32C0:  BNZ   32C6
32C2:  CALL   0FB2
....................                   contador1++; 
32C6:  INCF   19,F
....................                   contador2++; 
32C8:  INCF   1A,F
....................  
....................                          }///// 
32CA:  INCF   1B,F
32CC:  BRA    2FF2
....................                      } 
....................                  /// 
....................                  else  {/////////////// 
32CE:  BRA    3506
....................                         for (contador1=copia1;contador1<=10;contador1++){ 
32D0:  MOVFF  1C,19
32D4:  MOVF   19,W
32D6:  SUBLW  0A
32D8:  BTFSS  FD8.0
32DA:  BRA    3506
....................                       copia1=contador1; 
32DC:  MOVFF  19,1C
32E0:  CLRF   16
32E2:  BTFSC  FF2.7
32E4:  BSF    16.7
32E6:  BCF    FF2.7
....................                     if(quantum*contador2<=time2){ 
32E8:  MOVFF  6A,A5
32EC:  MOVFF  69,A4
32F0:  CLRF   xA7
32F2:  MOVFF  1A,A6
32F6:  CALL   0268
32FA:  BTFSC  16.7
32FC:  BSF    FF2.7
32FE:  MOVFF  02,97
3302:  MOVFF  01,96
3306:  MOVF   02,W
3308:  SUBWF  66,W
330A:  BTFSS  FD8.0
330C:  BRA    343C
330E:  BNZ   3318
3310:  MOVF   x96,W
3312:  SUBWF  65,W
3314:  BTFSS  FD8.0
3316:  BRA    343C
3318:  CLRF   16
331A:  BTFSC  FF2.7
331C:  BSF    16.7
331E:  BCF    FF2.7
....................                     if(quantum*contador3<=time3){ 
3320:  MOVFF  6A,A5
3324:  MOVFF  69,A4
3328:  CLRF   xA7
332A:  MOVFF  1B,A6
332E:  CALL   0268
3332:  BTFSC  16.7
3334:  BSF    FF2.7
3336:  MOVFF  02,97
333A:  MOVFF  01,96
333E:  MOVF   02,W
3340:  SUBWF  68,W
3342:  BNC   33C6
3344:  BNZ   334C
3346:  MOVF   x96,W
3348:  SUBWF  67,W
334A:  BNC   33C6
....................                              rb2=1; 
334C:  BSF    F81.2
....................                              rb3=1; 
334E:  BSF    F81.3
....................                              rb1=1; 
3350:  BSF    F81.1
....................                              delay_ms(quantum); 
3352:  MOVFF  6A,96
3356:  INCF   x96,F
3358:  DECF   x96,F
335A:  BTFSC  FD8.2
335C:  BRA    3374
335E:  CLRF   16
3360:  BTFSC  FF2.7
3362:  BSF    16.7
3364:  BCF    FF2.7
3366:  MOVLW  FF
3368:  MOVWF  xA6
336A:  CALL   0242
336E:  BTFSC  16.7
3370:  BSF    FF2.7
3372:  BRA    3358
3374:  CLRF   16
3376:  BTFSC  FF2.7
3378:  BSF    16.7
337A:  BCF    FF2.7
337C:  MOVFF  69,A6
3380:  CALL   0242
3384:  BTFSC  16.7
3386:  BSF    FF2.7
....................                              rb2=0; 
3388:  BCF    F81.2
....................                              rb3=0; 
338A:  BCF    F81.3
....................                              rb1=0; 
338C:  BCF    F81.1
....................                              delay_ms(quantum); 
338E:  MOVFF  6A,96
3392:  INCF   x96,F
3394:  DECF   x96,F
3396:  BTFSC  FD8.2
3398:  BRA    33B0
339A:  CLRF   16
339C:  BTFSC  FF2.7
339E:  BSF    16.7
33A0:  BCF    FF2.7
33A2:  MOVLW  FF
33A4:  MOVWF  xA6
33A6:  CALL   0242
33AA:  BTFSC  16.7
33AC:  BSF    FF2.7
33AE:  BRA    3394
33B0:  CLRF   16
33B2:  BTFSC  FF2.7
33B4:  BSF    16.7
33B6:  BCF    FF2.7
33B8:  MOVFF  69,A6
33BC:  CALL   0242
33C0:  BTFSC  16.7
33C2:  BSF    FF2.7
....................                     } 
....................                     else{    
33C4:  BRA    343A
....................                              rb2=1; 
33C6:  BSF    F81.2
....................                              rb1=1; 
33C8:  BSF    F81.1
....................                              delay_ms(quantum); 
33CA:  MOVFF  6A,96
33CE:  INCF   x96,F
33D0:  DECF   x96,F
33D2:  BTFSC  FD8.2
33D4:  BRA    33EC
33D6:  CLRF   16
33D8:  BTFSC  FF2.7
33DA:  BSF    16.7
33DC:  BCF    FF2.7
33DE:  MOVLW  FF
33E0:  MOVWF  xA6
33E2:  CALL   0242
33E6:  BTFSC  16.7
33E8:  BSF    FF2.7
33EA:  BRA    33D0
33EC:  CLRF   16
33EE:  BTFSC  FF2.7
33F0:  BSF    16.7
33F2:  BCF    FF2.7
33F4:  MOVFF  69,A6
33F8:  CALL   0242
33FC:  BTFSC  16.7
33FE:  BSF    FF2.7
....................                              rb2=0; 
3400:  BCF    F81.2
....................                              rb1=0; 
3402:  BCF    F81.1
....................                              delay_ms(quantum); 
3404:  MOVFF  6A,96
3408:  INCF   x96,F
340A:  DECF   x96,F
340C:  BTFSC  FD8.2
340E:  BRA    3426
3410:  CLRF   16
3412:  BTFSC  FF2.7
3414:  BSF    16.7
3416:  BCF    FF2.7
3418:  MOVLW  FF
341A:  MOVWF  xA6
341C:  CALL   0242
3420:  BTFSC  16.7
3422:  BSF    FF2.7
3424:  BRA    340A
3426:  CLRF   16
3428:  BTFSC  FF2.7
342A:  BSF    16.7
342C:  BCF    FF2.7
342E:  MOVFF  69,A6
3432:  CALL   0242
3436:  BTFSC  16.7
3438:  BSF    FF2.7
....................                     } 
....................                                                } 
....................                                                 
....................                    else  {       if(quantum*contador1<=time1){  
343A:  BRA    34E0
343C:  CLRF   16
343E:  BTFSC  FF2.7
3440:  BSF    16.7
3442:  BCF    FF2.7
3444:  MOVFF  6A,A5
3448:  MOVFF  69,A4
344C:  CLRF   xA7
344E:  MOVFF  19,A6
3452:  CALL   0268
3456:  BTFSC  16.7
3458:  BSF    FF2.7
345A:  MOVFF  02,97
345E:  MOVFF  01,96
3462:  MOVF   02,W
3464:  SUBWF  64,W
3466:  BNC   34E0
3468:  BNZ   3470
346A:  MOVF   x96,W
346C:  SUBWF  63,W
346E:  BNC   34E0
....................                                rb1=1; 
3470:  BSF    F81.1
....................                                delay_ms(quantum); 
3472:  MOVFF  6A,96
3476:  INCF   x96,F
3478:  DECF   x96,F
347A:  BTFSC  FD8.2
347C:  BRA    3494
347E:  CLRF   16
3480:  BTFSC  FF2.7
3482:  BSF    16.7
3484:  BCF    FF2.7
3486:  MOVLW  FF
3488:  MOVWF  xA6
348A:  CALL   0242
348E:  BTFSC  16.7
3490:  BSF    FF2.7
3492:  BRA    3478
3494:  CLRF   16
3496:  BTFSC  FF2.7
3498:  BSF    16.7
349A:  BCF    FF2.7
349C:  MOVFF  69,A6
34A0:  CALL   0242
34A4:  BTFSC  16.7
34A6:  BSF    FF2.7
....................                                rb1=0;                            
34A8:  BCF    F81.1
....................                                delay_ms(quantum);  }     
34AA:  MOVFF  6A,96
34AE:  INCF   x96,F
34B0:  DECF   x96,F
34B2:  BTFSC  FD8.2
34B4:  BRA    34CC
34B6:  CLRF   16
34B8:  BTFSC  FF2.7
34BA:  BSF    16.7
34BC:  BCF    FF2.7
34BE:  MOVLW  FF
34C0:  MOVWF  xA6
34C2:  CALL   0242
34C6:  BTFSC  16.7
34C8:  BSF    FF2.7
34CA:  BRA    34B0
34CC:  CLRF   16
34CE:  BTFSC  FF2.7
34D0:  BSF    16.7
34D2:  BCF    FF2.7
34D4:  MOVFF  69,A6
34D8:  CALL   0242
34DC:  BTFSC  16.7
34DE:  BSF    FF2.7
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
34E0:  MOVF   19,W
34E2:  SUBLW  0A
34E4:  BNZ   34EA
34E6:  CALL   0F5A
....................                  if(contador3==20 )do_proceso3(); 
34EA:  MOVF   1B,W
34EC:  SUBLW  14
34EE:  BNZ   34F4
34F0:  CALL   100A
....................                  if(contador2==16 )do_proceso2(); 
34F4:  MOVF   1A,W
34F6:  SUBLW  10
34F8:  BNZ   34FE
34FA:  CALL   0FB2
....................                   contador3++; 
34FE:  INCF   1B,F
....................                   contador2++; 
3500:  INCF   1A,F
....................  
....................                          }///// 
3502:  INCF   19,F
3504:  BRA    32D4
....................                   
....................                   
....................                  } 
....................                           
....................                          
....................                   
....................                                        } 
....................                } ///// 
....................                 
....................                /// 
....................                else{////////////////////////////kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk 
3506:  BRA    3B06
....................                     for (contador2=1;contador2<=16;contador2++){ 
3508:  MOVLW  01
350A:  MOVWF  1A
350C:  MOVF   1A,W
350E:  SUBLW  10
3510:  BTFSS  FD8.0
3512:  BRA    3688
....................                     copia2=contador2; 
3514:  MOVFF  1A,1D
3518:  CLRF   16
351A:  BTFSC  FF2.7
351C:  BSF    16.7
351E:  BCF    FF2.7
....................                     if(quantum*contador3<time3){ 
3520:  MOVFF  6A,A5
3524:  MOVFF  69,A4
3528:  CLRF   xA7
352A:  MOVFF  1B,A6
352E:  CALL   0268
3532:  BTFSC  16.7
3534:  BSF    FF2.7
3536:  MOVFF  02,97
353A:  MOVFF  01,96
353E:  MOVF   02,W
3540:  SUBWF  68,W
3542:  BNC   35C2
3544:  BNZ   354C
3546:  MOVF   67,W
3548:  SUBWF  x96,W
354A:  BC    35C2
....................                       
....................                       rb3=1; 
354C:  BSF    F81.3
....................                       rb2=1; 
354E:  BSF    F81.2
....................                       delay_ms(quantum); 
3550:  MOVFF  6A,96
3554:  INCF   x96,F
3556:  DECF   x96,F
3558:  BTFSC  FD8.2
355A:  BRA    3572
355C:  CLRF   16
355E:  BTFSC  FF2.7
3560:  BSF    16.7
3562:  BCF    FF2.7
3564:  MOVLW  FF
3566:  MOVWF  xA6
3568:  CALL   0242
356C:  BTFSC  16.7
356E:  BSF    FF2.7
3570:  BRA    3556
3572:  CLRF   16
3574:  BTFSC  FF2.7
3576:  BSF    16.7
3578:  BCF    FF2.7
357A:  MOVFF  69,A6
357E:  CALL   0242
3582:  BTFSC  16.7
3584:  BSF    FF2.7
....................                       rb3=0; 
3586:  BCF    F81.3
....................                       rb2=0; 
3588:  BCF    F81.2
....................                       
....................                       delay_ms(quantum); 
358A:  MOVFF  6A,96
358E:  INCF   x96,F
3590:  DECF   x96,F
3592:  BTFSC  FD8.2
3594:  BRA    35AC
3596:  CLRF   16
3598:  BTFSC  FF2.7
359A:  BSF    16.7
359C:  BCF    FF2.7
359E:  MOVLW  FF
35A0:  MOVWF  xA6
35A2:  CALL   0242
35A6:  BTFSC  16.7
35A8:  BSF    FF2.7
35AA:  BRA    3590
35AC:  CLRF   16
35AE:  BTFSC  FF2.7
35B0:  BSF    16.7
35B2:  BCF    FF2.7
35B4:  MOVFF  69,A6
35B8:  CALL   0242
35BC:  BTFSC  16.7
35BE:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
35C0:  BRA    3666
35C2:  CLRF   16
35C4:  BTFSC  FF2.7
35C6:  BSF    16.7
35C8:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<=time2){ 
35CA:  MOVFF  6A,A5
35CE:  MOVFF  69,A4
35D2:  CLRF   xA7
35D4:  MOVFF  1A,A6
35D8:  CALL   0268
35DC:  BTFSC  16.7
35DE:  BSF    FF2.7
35E0:  MOVFF  02,97
35E4:  MOVFF  01,96
35E8:  MOVF   02,W
35EA:  SUBWF  66,W
35EC:  BNC   3666
35EE:  BNZ   35F6
35F0:  MOVF   x96,W
35F2:  SUBWF  65,W
35F4:  BNC   3666
....................                                 
....................                                rb2=1; 
35F6:  BSF    F81.2
....................                                delay_ms(quantum); 
35F8:  MOVFF  6A,96
35FC:  INCF   x96,F
35FE:  DECF   x96,F
3600:  BTFSC  FD8.2
3602:  BRA    361A
3604:  CLRF   16
3606:  BTFSC  FF2.7
3608:  BSF    16.7
360A:  BCF    FF2.7
360C:  MOVLW  FF
360E:  MOVWF  xA6
3610:  CALL   0242
3614:  BTFSC  16.7
3616:  BSF    FF2.7
3618:  BRA    35FE
361A:  CLRF   16
361C:  BTFSC  FF2.7
361E:  BSF    16.7
3620:  BCF    FF2.7
3622:  MOVFF  69,A6
3626:  CALL   0242
362A:  BTFSC  16.7
362C:  BSF    FF2.7
....................                                rb2=0; 
362E:  BCF    F81.2
....................                                delay_ms(quantum); 
3630:  MOVFF  6A,96
3634:  INCF   x96,F
3636:  DECF   x96,F
3638:  BTFSC  FD8.2
363A:  BRA    3652
363C:  CLRF   16
363E:  BTFSC  FF2.7
3640:  BSF    16.7
3642:  BCF    FF2.7
3644:  MOVLW  FF
3646:  MOVWF  xA6
3648:  CALL   0242
364C:  BTFSC  16.7
364E:  BSF    FF2.7
3650:  BRA    3636
3652:  CLRF   16
3654:  BTFSC  FF2.7
3656:  BSF    16.7
3658:  BCF    FF2.7
365A:  MOVFF  69,A6
365E:  CALL   0242
3662:  BTFSC  16.7
3664:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador2==16 ) do_proceso2(); 
3666:  MOVF   1A,W
3668:  SUBLW  10
366A:  BNZ   3670
366C:  CALL   0FB2
....................                  if(contador3==20 )do_proceso3(); 
3670:  MOVF   1B,W
3672:  SUBLW  14
3674:  BNZ   367A
3676:  CALL   100A
....................                   
....................                  if(tecla_pulsada=='1'){ 
367A:  MOVF   17,W
367C:  SUBLW  31
367E:  BNZ   3682
....................                       break; 
3680:  BRA    3688
....................                   } 
....................                   contador3++; 
3682:  INCF   1B,F
....................  
....................                  } 
3684:  INCF   1A,F
3686:  BRA    350C
....................                  if(tecla_pulsada=='1'){ 
3688:  MOVF   17,W
368A:  SUBLW  31
368C:  BTFSS  FD8.2
368E:  BRA    3B06
....................                          if(copia3<=10){ 
3690:  MOVF   1E,W
3692:  SUBLW  0A
3694:  BTFSS  FD8.0
3696:  BRA    38D0
....................                          for (contador2=copia2;contador2<=16;contador2++){ 
3698:  MOVFF  1D,1A
369C:  MOVF   1A,W
369E:  SUBLW  10
36A0:  BTFSS  FD8.0
36A2:  BRA    38CE
....................                               copia2=contador2; 
36A4:  MOVFF  1A,1D
36A8:  CLRF   16
36AA:  BTFSC  FF2.7
36AC:  BSF    16.7
36AE:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
36B0:  MOVFF  6A,A5
36B4:  MOVFF  69,A4
36B8:  CLRF   xA7
36BA:  MOVFF  19,A6
36BE:  CALL   0268
36C2:  BTFSC  16.7
36C4:  BSF    FF2.7
36C6:  MOVFF  02,97
36CA:  MOVFF  01,96
36CE:  MOVF   02,W
36D0:  SUBWF  64,W
36D2:  BTFSS  FD8.0
36D4:  BRA    3804
36D6:  BNZ   36E0
36D8:  MOVF   x96,W
36DA:  SUBWF  63,W
36DC:  BTFSS  FD8.0
36DE:  BRA    3804
36E0:  CLRF   16
36E2:  BTFSC  FF2.7
36E4:  BSF    16.7
36E6:  BCF    FF2.7
....................                     if(quantum*contador3<=time3){ 
36E8:  MOVFF  6A,A5
36EC:  MOVFF  69,A4
36F0:  CLRF   xA7
36F2:  MOVFF  1B,A6
36F6:  CALL   0268
36FA:  BTFSC  16.7
36FC:  BSF    FF2.7
36FE:  MOVFF  02,97
3702:  MOVFF  01,96
3706:  MOVF   02,W
3708:  SUBWF  68,W
370A:  BNC   378E
370C:  BNZ   3714
370E:  MOVF   x96,W
3710:  SUBWF  67,W
3712:  BNC   378E
....................                              rb2=1; 
3714:  BSF    F81.2
....................                              rb3=1; 
3716:  BSF    F81.3
....................                              rb1=1; 
3718:  BSF    F81.1
....................                              delay_ms(quantum); 
371A:  MOVFF  6A,96
371E:  INCF   x96,F
3720:  DECF   x96,F
3722:  BTFSC  FD8.2
3724:  BRA    373C
3726:  CLRF   16
3728:  BTFSC  FF2.7
372A:  BSF    16.7
372C:  BCF    FF2.7
372E:  MOVLW  FF
3730:  MOVWF  xA6
3732:  CALL   0242
3736:  BTFSC  16.7
3738:  BSF    FF2.7
373A:  BRA    3720
373C:  CLRF   16
373E:  BTFSC  FF2.7
3740:  BSF    16.7
3742:  BCF    FF2.7
3744:  MOVFF  69,A6
3748:  CALL   0242
374C:  BTFSC  16.7
374E:  BSF    FF2.7
....................                              rb2=0; 
3750:  BCF    F81.2
....................                              rb3=0; 
3752:  BCF    F81.3
....................                              rb1=0; 
3754:  BCF    F81.1
....................                              delay_ms(quantum); 
3756:  MOVFF  6A,96
375A:  INCF   x96,F
375C:  DECF   x96,F
375E:  BTFSC  FD8.2
3760:  BRA    3778
3762:  CLRF   16
3764:  BTFSC  FF2.7
3766:  BSF    16.7
3768:  BCF    FF2.7
376A:  MOVLW  FF
376C:  MOVWF  xA6
376E:  CALL   0242
3772:  BTFSC  16.7
3774:  BSF    FF2.7
3776:  BRA    375C
3778:  CLRF   16
377A:  BTFSC  FF2.7
377C:  BSF    16.7
377E:  BCF    FF2.7
3780:  MOVFF  69,A6
3784:  CALL   0242
3788:  BTFSC  16.7
378A:  BSF    FF2.7
....................                     } 
....................                     else{   
378C:  BRA    3802
....................                              rb2=1; 
378E:  BSF    F81.2
....................                              rb1=1; 
3790:  BSF    F81.1
....................                              delay_ms(quantum); 
3792:  MOVFF  6A,96
3796:  INCF   x96,F
3798:  DECF   x96,F
379A:  BTFSC  FD8.2
379C:  BRA    37B4
379E:  CLRF   16
37A0:  BTFSC  FF2.7
37A2:  BSF    16.7
37A4:  BCF    FF2.7
37A6:  MOVLW  FF
37A8:  MOVWF  xA6
37AA:  CALL   0242
37AE:  BTFSC  16.7
37B0:  BSF    FF2.7
37B2:  BRA    3798
37B4:  CLRF   16
37B6:  BTFSC  FF2.7
37B8:  BSF    16.7
37BA:  BCF    FF2.7
37BC:  MOVFF  69,A6
37C0:  CALL   0242
37C4:  BTFSC  16.7
37C6:  BSF    FF2.7
....................                              rb2=0; 
37C8:  BCF    F81.2
....................                              rb1=0; 
37CA:  BCF    F81.1
....................                              delay_ms(quantum); 
37CC:  MOVFF  6A,96
37D0:  INCF   x96,F
37D2:  DECF   x96,F
37D4:  BTFSC  FD8.2
37D6:  BRA    37EE
37D8:  CLRF   16
37DA:  BTFSC  FF2.7
37DC:  BSF    16.7
37DE:  BCF    FF2.7
37E0:  MOVLW  FF
37E2:  MOVWF  xA6
37E4:  CALL   0242
37E8:  BTFSC  16.7
37EA:  BSF    FF2.7
37EC:  BRA    37D2
37EE:  CLRF   16
37F0:  BTFSC  FF2.7
37F2:  BSF    16.7
37F4:  BCF    FF2.7
37F6:  MOVFF  69,A6
37FA:  CALL   0242
37FE:  BTFSC  16.7
3800:  BSF    FF2.7
....................                     } 
....................                                                } 
....................                                                 
....................                    else  { 
3802:  BRA    38A8
3804:  CLRF   16
3806:  BTFSC  FF2.7
3808:  BSF    16.7
380A:  BCF    FF2.7
....................                               if(quantum*contador2<=time2){ 
380C:  MOVFF  6A,A5
3810:  MOVFF  69,A4
3814:  CLRF   xA7
3816:  MOVFF  1A,A6
381A:  CALL   0268
381E:  BTFSC  16.7
3820:  BSF    FF2.7
3822:  MOVFF  02,97
3826:  MOVFF  01,96
382A:  MOVF   02,W
382C:  SUBWF  66,W
382E:  BNC   38A8
3830:  BNZ   3838
3832:  MOVF   x96,W
3834:  SUBWF  65,W
3836:  BNC   38A8
....................                                rb2=1; 
3838:  BSF    F81.2
....................                                delay_ms(quantum); 
383A:  MOVFF  6A,96
383E:  INCF   x96,F
3840:  DECF   x96,F
3842:  BTFSC  FD8.2
3844:  BRA    385C
3846:  CLRF   16
3848:  BTFSC  FF2.7
384A:  BSF    16.7
384C:  BCF    FF2.7
384E:  MOVLW  FF
3850:  MOVWF  xA6
3852:  CALL   0242
3856:  BTFSC  16.7
3858:  BSF    FF2.7
385A:  BRA    3840
385C:  CLRF   16
385E:  BTFSC  FF2.7
3860:  BSF    16.7
3862:  BCF    FF2.7
3864:  MOVFF  69,A6
3868:  CALL   0242
386C:  BTFSC  16.7
386E:  BSF    FF2.7
....................                                rb2=0; 
3870:  BCF    F81.2
....................                                delay_ms(quantum); 
3872:  MOVFF  6A,96
3876:  INCF   x96,F
3878:  DECF   x96,F
387A:  BTFSC  FD8.2
387C:  BRA    3894
387E:  CLRF   16
3880:  BTFSC  FF2.7
3882:  BSF    16.7
3884:  BCF    FF2.7
3886:  MOVLW  FF
3888:  MOVWF  xA6
388A:  CALL   0242
388E:  BTFSC  16.7
3890:  BSF    FF2.7
3892:  BRA    3878
3894:  CLRF   16
3896:  BTFSC  FF2.7
3898:  BSF    16.7
389A:  BCF    FF2.7
389C:  MOVFF  69,A6
38A0:  CALL   0242
38A4:  BTFSC  16.7
38A6:  BSF    FF2.7
....................                                                      }                
....................                                                       
....................                                                    
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
38A8:  MOVF   19,W
38AA:  SUBLW  0A
38AC:  BNZ   38B2
38AE:  CALL   0F5A
....................                  if(contador3==20 )do_proceso3(); 
38B2:  MOVF   1B,W
38B4:  SUBLW  14
38B6:  BNZ   38BC
38B8:  CALL   100A
....................                  if(contador2==16 )do_proceso2(); 
38BC:  MOVF   1A,W
38BE:  SUBLW  10
38C0:  BNZ   38C6
38C2:  CALL   0FB2
....................                   contador3++; 
38C6:  INCF   1B,F
....................                   contador1++; 
38C8:  INCF   19,F
....................  
....................                          }///// 
38CA:  INCF   1A,F
38CC:  BRA    369C
....................                      } 
....................                  /// 
....................                  else  { 
38CE:  BRA    3B06
....................                         for (contador2=copia2;contador2<=16;contador2++){ 
38D0:  MOVFF  1D,1A
38D4:  MOVF   1A,W
38D6:  SUBLW  10
38D8:  BTFSS  FD8.0
38DA:  BRA    3B06
....................                       copia2=contador2; 
38DC:  MOVFF  1A,1D
38E0:  CLRF   16
38E2:  BTFSC  FF2.7
38E4:  BSF    16.7
38E6:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
38E8:  MOVFF  6A,A5
38EC:  MOVFF  69,A4
38F0:  CLRF   xA7
38F2:  MOVFF  19,A6
38F6:  CALL   0268
38FA:  BTFSC  16.7
38FC:  BSF    FF2.7
38FE:  MOVFF  02,97
3902:  MOVFF  01,96
3906:  MOVF   02,W
3908:  SUBWF  64,W
390A:  BTFSS  FD8.0
390C:  BRA    3A3C
390E:  BNZ   3918
3910:  MOVF   x96,W
3912:  SUBWF  63,W
3914:  BTFSS  FD8.0
3916:  BRA    3A3C
3918:  CLRF   16
391A:  BTFSC  FF2.7
391C:  BSF    16.7
391E:  BCF    FF2.7
....................                     if(quantum*contador3<=time3){ 
3920:  MOVFF  6A,A5
3924:  MOVFF  69,A4
3928:  CLRF   xA7
392A:  MOVFF  1B,A6
392E:  CALL   0268
3932:  BTFSC  16.7
3934:  BSF    FF2.7
3936:  MOVFF  02,97
393A:  MOVFF  01,96
393E:  MOVF   02,W
3940:  SUBWF  68,W
3942:  BNC   39C6
3944:  BNZ   394C
3946:  MOVF   x96,W
3948:  SUBWF  67,W
394A:  BNC   39C6
....................                              rb2=1; 
394C:  BSF    F81.2
....................                              rb3=1; 
394E:  BSF    F81.3
....................                              rb1=1; 
3950:  BSF    F81.1
....................                              delay_ms(quantum); 
3952:  MOVFF  6A,96
3956:  INCF   x96,F
3958:  DECF   x96,F
395A:  BTFSC  FD8.2
395C:  BRA    3974
395E:  CLRF   16
3960:  BTFSC  FF2.7
3962:  BSF    16.7
3964:  BCF    FF2.7
3966:  MOVLW  FF
3968:  MOVWF  xA6
396A:  CALL   0242
396E:  BTFSC  16.7
3970:  BSF    FF2.7
3972:  BRA    3958
3974:  CLRF   16
3976:  BTFSC  FF2.7
3978:  BSF    16.7
397A:  BCF    FF2.7
397C:  MOVFF  69,A6
3980:  CALL   0242
3984:  BTFSC  16.7
3986:  BSF    FF2.7
....................                              rb2=0; 
3988:  BCF    F81.2
....................                              rb3=0; 
398A:  BCF    F81.3
....................                              rb1=0; 
398C:  BCF    F81.1
....................                              delay_ms(quantum); 
398E:  MOVFF  6A,96
3992:  INCF   x96,F
3994:  DECF   x96,F
3996:  BTFSC  FD8.2
3998:  BRA    39B0
399A:  CLRF   16
399C:  BTFSC  FF2.7
399E:  BSF    16.7
39A0:  BCF    FF2.7
39A2:  MOVLW  FF
39A4:  MOVWF  xA6
39A6:  CALL   0242
39AA:  BTFSC  16.7
39AC:  BSF    FF2.7
39AE:  BRA    3994
39B0:  CLRF   16
39B2:  BTFSC  FF2.7
39B4:  BSF    16.7
39B6:  BCF    FF2.7
39B8:  MOVFF  69,A6
39BC:  CALL   0242
39C0:  BTFSC  16.7
39C2:  BSF    FF2.7
....................                     } 
....................                     else{    
39C4:  BRA    3A3A
....................                              rb2=1; 
39C6:  BSF    F81.2
....................                              rb1=1; 
39C8:  BSF    F81.1
....................                              delay_ms(quantum); 
39CA:  MOVFF  6A,96
39CE:  INCF   x96,F
39D0:  DECF   x96,F
39D2:  BTFSC  FD8.2
39D4:  BRA    39EC
39D6:  CLRF   16
39D8:  BTFSC  FF2.7
39DA:  BSF    16.7
39DC:  BCF    FF2.7
39DE:  MOVLW  FF
39E0:  MOVWF  xA6
39E2:  CALL   0242
39E6:  BTFSC  16.7
39E8:  BSF    FF2.7
39EA:  BRA    39D0
39EC:  CLRF   16
39EE:  BTFSC  FF2.7
39F0:  BSF    16.7
39F2:  BCF    FF2.7
39F4:  MOVFF  69,A6
39F8:  CALL   0242
39FC:  BTFSC  16.7
39FE:  BSF    FF2.7
....................                              rb2=0; 
3A00:  BCF    F81.2
....................                              rb1=0; 
3A02:  BCF    F81.1
....................                              delay_ms(quantum); 
3A04:  MOVFF  6A,96
3A08:  INCF   x96,F
3A0A:  DECF   x96,F
3A0C:  BTFSC  FD8.2
3A0E:  BRA    3A26
3A10:  CLRF   16
3A12:  BTFSC  FF2.7
3A14:  BSF    16.7
3A16:  BCF    FF2.7
3A18:  MOVLW  FF
3A1A:  MOVWF  xA6
3A1C:  CALL   0242
3A20:  BTFSC  16.7
3A22:  BSF    FF2.7
3A24:  BRA    3A0A
3A26:  CLRF   16
3A28:  BTFSC  FF2.7
3A2A:  BSF    16.7
3A2C:  BCF    FF2.7
3A2E:  MOVFF  69,A6
3A32:  CALL   0242
3A36:  BTFSC  16.7
3A38:  BSF    FF2.7
....................                     } 
....................                                                } 
....................                                                 
....................                    else  {        
3A3A:  BRA    3AE0
3A3C:  CLRF   16
3A3E:  BTFSC  FF2.7
3A40:  BSF    16.7
3A42:  BCF    FF2.7
....................                    if(quantum*contador2<=time2){ 
3A44:  MOVFF  6A,A5
3A48:  MOVFF  69,A4
3A4C:  CLRF   xA7
3A4E:  MOVFF  1A,A6
3A52:  CALL   0268
3A56:  BTFSC  16.7
3A58:  BSF    FF2.7
3A5A:  MOVFF  02,97
3A5E:  MOVFF  01,96
3A62:  MOVF   02,W
3A64:  SUBWF  66,W
3A66:  BNC   3AE0
3A68:  BNZ   3A70
3A6A:  MOVF   x96,W
3A6C:  SUBWF  65,W
3A6E:  BNC   3AE0
....................                                rb2=1; 
3A70:  BSF    F81.2
....................                                delay_ms(quantum); 
3A72:  MOVFF  6A,96
3A76:  INCF   x96,F
3A78:  DECF   x96,F
3A7A:  BTFSC  FD8.2
3A7C:  BRA    3A94
3A7E:  CLRF   16
3A80:  BTFSC  FF2.7
3A82:  BSF    16.7
3A84:  BCF    FF2.7
3A86:  MOVLW  FF
3A88:  MOVWF  xA6
3A8A:  CALL   0242
3A8E:  BTFSC  16.7
3A90:  BSF    FF2.7
3A92:  BRA    3A78
3A94:  CLRF   16
3A96:  BTFSC  FF2.7
3A98:  BSF    16.7
3A9A:  BCF    FF2.7
3A9C:  MOVFF  69,A6
3AA0:  CALL   0242
3AA4:  BTFSC  16.7
3AA6:  BSF    FF2.7
....................                                rb2=0;                            
3AA8:  BCF    F81.2
....................                                delay_ms(quantum);  
3AAA:  MOVFF  6A,96
3AAE:  INCF   x96,F
3AB0:  DECF   x96,F
3AB2:  BTFSC  FD8.2
3AB4:  BRA    3ACC
3AB6:  CLRF   16
3AB8:  BTFSC  FF2.7
3ABA:  BSF    16.7
3ABC:  BCF    FF2.7
3ABE:  MOVLW  FF
3AC0:  MOVWF  xA6
3AC2:  CALL   0242
3AC6:  BTFSC  16.7
3AC8:  BSF    FF2.7
3ACA:  BRA    3AB0
3ACC:  CLRF   16
3ACE:  BTFSC  FF2.7
3AD0:  BSF    16.7
3AD2:  BCF    FF2.7
3AD4:  MOVFF  69,A6
3AD8:  CALL   0242
3ADC:  BTFSC  16.7
3ADE:  BSF    FF2.7
....................                                 
....................                                } 
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
3AE0:  MOVF   19,W
3AE2:  SUBLW  0A
3AE4:  BNZ   3AEA
3AE6:  CALL   0F5A
....................                  if(contador3==20 )do_proceso3(); 
3AEA:  MOVF   1B,W
3AEC:  SUBLW  14
3AEE:  BNZ   3AF4
3AF0:  CALL   100A
....................                  if(contador2==16 )do_proceso2(); 
3AF4:  MOVF   1A,W
3AF6:  SUBLW  10
3AF8:  BNZ   3AFE
3AFA:  CALL   0FB2
....................                   contador1++; 
3AFE:  INCF   19,F
....................                   contador3++; 
3B00:  INCF   1B,F
....................  
....................                          }///// 
3B02:  INCF   1A,F
3B04:  BRA    38D4
....................                   
....................                   
....................                                    } 
....................                           
....................                          
....................                   
....................                       } 
....................                 
....................                   } 
....................               } 
....................        }    
....................    } 
3B06:  GOTO   3C6E (RETURN)
.................... /////////////////////////////////////// 
.................... void main(){ 
*
3B1C:  CLRF   FF8
3B1E:  BCF    FD0.7
3B20:  BSF    07.7
3B22:  CLRF   FEA
3B24:  CLRF   FE9
3B26:  MOVLW  81
3B28:  MOVWF  FAF
3B2A:  MOVLW  A6
3B2C:  MOVWF  FAC
3B2E:  MOVLW  90
3B30:  MOVWF  FAB
3B32:  CLRF   19
3B34:  CLRF   1A
3B36:  CLRF   1B
3B38:  CLRF   43
3B3A:  CLRF   44
3B3C:  CLRF   45
3B3E:  MOVLW  09
3B40:  MOVWF  64
3B42:  MOVLW  C4
3B44:  MOVWF  63
3B46:  MOVLW  0F
3B48:  MOVWF  66
3B4A:  MOVLW  A0
3B4C:  MOVWF  65
3B4E:  MOVLW  13
3B50:  MOVWF  68
3B52:  MOVLW  88
3B54:  MOVWF  67
3B56:  CLRF   6A
3B58:  MOVLW  FA
3B5A:  MOVWF  69
3B5C:  BSF    FC1.0
3B5E:  BSF    FC1.1
3B60:  BSF    FC1.2
3B62:  BCF    FC1.3
.................... setup_timer_0(rtcc_internal | rtcc_div_16);//quantun de 250 ms 
3B64:  MOVLW  83
3B66:  MOVWF  FD5
.................... set_timer0(0x01); 
3B68:  CLRF   FD7
3B6A:  MOVLW  01
3B6C:  MOVWF  FD6
.................... enable_interrupts(global); 
3B6E:  MOVLW  C0
3B70:  IORWF  FF2,F
.................... tris_b=0; 
3B72:  CLRF   F93
.................... port_b=0; 
3B74:  CLRF   F81
.................... // 
.................... mensaje_recibido=0; 
3B76:  CLRF   18
.................... lcd_init(); 
3B78:  GOTO   0EB0
.................... lcd_putc("hola"); 
3B7C:  MOVLW  8E
3B7E:  MOVWF  FF6
3B80:  MOVLW  0E
3B82:  MOVWF  FF7
3B84:  CLRF   16
3B86:  BTFSC  FF2.7
3B88:  BSF    16.7
3B8A:  BCF    FF2.7
3B8C:  CALL   0A70
3B90:  BTFSC  16.7
3B92:  BSF    FF2.7
3B94:  CLRF   16
3B96:  BTFSC  FF2.7
3B98:  BSF    16.7
3B9A:  BCF    FF2.7
.................... delay_ms(100); 
3B9C:  MOVLW  64
3B9E:  MOVWF  xA6
3BA0:  CALL   0242
3BA4:  BTFSC  16.7
3BA6:  BSF    FF2.7
.................... lcd_putc("\f"); 
3BA8:  MOVLW  94
3BAA:  MOVWF  FF6
3BAC:  MOVLW  0E
3BAE:  MOVWF  FF7
3BB0:  CLRF   16
3BB2:  BTFSC  FF2.7
3BB4:  BSF    16.7
3BB6:  BCF    FF2.7
3BB8:  CALL   0A70
3BBC:  BTFSC  16.7
3BBE:  BSF    FF2.7
.................... lcd_putc("comprabando"); 
3BC0:  MOVLW  96
3BC2:  MOVWF  FF6
3BC4:  MOVLW  0E
3BC6:  MOVWF  FF7
3BC8:  CLRF   16
3BCA:  BTFSC  FF2.7
3BCC:  BSF    16.7
3BCE:  BCF    FF2.7
3BD0:  CALL   0A70
3BD4:  BTFSC  16.7
3BD6:  BSF    FF2.7
3BD8:  CLRF   16
3BDA:  BTFSC  FF2.7
3BDC:  BSF    16.7
3BDE:  BCF    FF2.7
.................... lcd_gotoxy(2,2); 
3BE0:  MOVLW  02
3BE2:  MOVWF  xA6
3BE4:  MOVWF  xA7
3BE6:  CALL   0A08
3BEA:  BTFSC  16.7
3BEC:  BSF    FF2.7
.................... lcd_putc("proceso..."); 
3BEE:  MOVLW  A2
3BF0:  MOVWF  FF6
3BF2:  MOVLW  0E
3BF4:  MOVWF  FF7
3BF6:  CLRF   16
3BF8:  BTFSC  FF2.7
3BFA:  BSF    16.7
3BFC:  BCF    FF2.7
3BFE:  CALL   0A70
3C02:  BTFSC  16.7
3C04:  BSF    FF2.7
3C06:  CLRF   16
3C08:  BTFSC  FF2.7
3C0A:  BSF    16.7
3C0C:  BCF    FF2.7
.................... delay_ms(100); 
3C0E:  MOVLW  64
3C10:  MOVWF  xA6
3C12:  CALL   0242
3C16:  BTFSC  16.7
3C18:  BSF    FF2.7
.................... rb6=0; 
3C1A:  BCF    F81.6
.................... pcb[0].id=0; 
3C1C:  CLRF   6D
.................... pcb[1].id=1; 
3C1E:  MOVLW  01
3C20:  MOVWF  73
.................... pcb[2].id=2; 
3C22:  MOVLW  02
3C24:  MOVWF  79
.................... contador1=0; 
3C26:  CLRF   19
.................... contador2=0; 
3C28:  CLRF   1A
.................... contador3=0; 
3C2A:  CLRF   1B
.................... enable_interrupts(int_rda); 
3C2C:  BSF    F9D.5
.................... enable_interrupts(int_timer0); 
3C2E:  BSF    FF2.5
....................    while(true){             
....................          if(mensaje_recibido==1){ 
3C30:  DECFSZ 18,W
3C32:  BRA    3C94
....................                   lcd_putc("\f"); 
3C34:  MOVLW  AE
3C36:  MOVWF  FF6
3C38:  MOVLW  0E
3C3A:  MOVWF  FF7
3C3C:  CLRF   16
3C3E:  BTFSC  FF2.7
3C40:  BSF    16.7
3C42:  BCF    FF2.7
3C44:  CALL   0A70
3C48:  BTFSC  16.7
3C4A:  BSF    FF2.7
....................                    
....................                if(tecla_pulsada=='1'){ 
3C4C:  MOVF   17,W
3C4E:  SUBLW  31
3C50:  BNZ   3C58
....................                do_proceso11(); 
3C52:  GOTO   1062
....................                   } 
....................                else { 
3C56:  BRA    3C6E
....................                 
....................                   if(tecla_pulsada=='2')do_proceso22(); 
3C58:  MOVF   17,W
3C5A:  SUBLW  32
3C5C:  BNZ   3C64
3C5E:  GOTO   1B18
....................                     
....................                    else{ 
3C62:  BRA    3C6E
....................                     if(tecla_pulsada=='3') do_proceso33();  
3C64:  MOVF   17,W
3C66:  SUBLW  33
3C68:  BNZ   3C6E
3C6A:  GOTO   25CA
....................                   } 
....................                } 
....................                  
....................                 if(tecla_pulsada=='a'){ 
3C6E:  MOVF   17,W
3C70:  SUBLW  61
3C72:  BNZ   3C7A
....................                 contador1=0; 
3C74:  CLRF   19
....................                 copia1=0; 
3C76:  CLRF   1C
....................                 descargar_proceso1(); 
3C78:  BRA    3B0A
....................                   } 
....................                 if(tecla_pulsada=='b'){ 
3C7A:  MOVF   17,W
3C7C:  SUBLW  62
3C7E:  BNZ   3C86
....................                 contador2=0; 
3C80:  CLRF   1A
....................                 copia2=0; 
3C82:  CLRF   1D
....................                 descargar_proceso2(); 
3C84:  BRA    3B10
....................                   } 
....................                 if(tecla_pulsada=='c'){ 
3C86:  MOVF   17,W
3C88:  SUBLW  63
3C8A:  BNZ   3C92
....................                 contador3=0; 
3C8C:  CLRF   1B
....................                 copia3=0; 
3C8E:  CLRF   1E
....................                 descargar_proceso3(); 
3C90:  BRA    3B16
....................                   } 
....................                   mensaje_recibido=0; 
3C92:  CLRF   18
....................                   } 
....................                 
....................              } 
3C94:  BRA    3C30
....................         } 
....................  
3C96:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0E   BROWNOUT WDT128 NOWDT BORV20 PUT
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NODEBUG NOLVP
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTB NOWRTC
   Word  7: 400F   NOEBTR NOEBTRB
