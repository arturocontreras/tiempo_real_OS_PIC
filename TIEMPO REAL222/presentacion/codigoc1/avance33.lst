CCS PCH C Compiler, Version 4.104, 5967               06-nov-12 19:14

               Filename: C:\presentacion\codigoc1\avance33.lst

               ROM used: 15466 bytes (47%)
                         Largest free fragment is 17298
               RAM used: 133 (9%) at main() level
                         157 (10%) worst case
               Stack:    13 worst case (7 in main + 6 for interrupts)

*
0000:  GOTO   3AF2
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  FF2.5
004A:  GOTO   0054
004E:  BTFSC  FF2.2
0050:  GOTO   09FE
0054:  BTFSS  F9D.5
0056:  GOTO   0060
005A:  BTFSC  F9E.5
005C:  GOTO   0216
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVF   04,W
0098:  MOVFF  06,FE0
009C:  MOVFF  05,FD8
00A0:  RETFIE 0
.................... #include <18f452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
....................  
.................... #use delay(clock=20000000) 
*
0246:  CLRF   FEA
0248:  MOVLW  94
024A:  MOVWF  FE9
024C:  MOVF   FEF,W
024E:  BZ    026A
0250:  MOVLW  06
0252:  MOVWF  01
0254:  CLRF   00
0256:  DECFSZ 00,F
0258:  BRA    0256
025A:  DECFSZ 01,F
025C:  BRA    0254
025E:  MOVLW  7B
0260:  MOVWF  00
0262:  DECFSZ 00,F
0264:  BRA    0262
0266:  DECFSZ FEF,F
0268:  BRA    0250
026A:  RETLW  00
.................... #use rs232(baud=9600, xmit=PIN_C6,rcv=PIN_C7) 
.................... #fuses HS,NOPROTECT,NOWDT,NOLVP //PUT 
.................... #include "lcd.c" 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////                             LCDD.C                                //// 
.................... ////                 Driver for common LCD modules                     //// 
.................... ////                                                                   //// 
.................... ////  lcd_init()   Must be called before any other function.           //// 
.................... ////                                                                   //// 
.................... ////  lcd_putc(c)  Will display c on the next position of the LCD.     //// 
.................... ////                     The following have special meaning:           //// 
.................... ////                      \f  Clear display                            //// 
.................... ////                      \n  Go to start of second line               //// 
.................... ////                      \b  Move back one position                   //// 
.................... ////                                                                   //// 
.................... ////  lcd_gotoxy(x,y) Set write position on LCD (upper left is 1,1)    //// 
.................... ////                                                                   //// 
.................... ////  lcd_getc(x,y)   Returns character at position x,y on LCD         //// 
.................... ////                                                                   //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996,2007 Custom Computer Services           //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
....................  
.................... // As defined in the following structure the pin connection is as follows: 
.................... //     D0  rs 
.................... //     D1  rw 
.................... //     D2  enable 
.................... //     D3  unused 
.................... //     D4  D4 
.................... //     D5  D5 
.................... //     D6  D6 
.................... //     D7  D7 
.................... // 
.................... //   LCD pins D0-D3 are not used and PIC D3 is not used. 
....................  
.................... // Un-comment the following define to use port B 
.................... // #define use_portb_lcd TRUE 
....................  
....................  
.................... struct lcd_pin_map {                 // This structure is overlayed 
....................            BOOLEAN rw; 
....................            BOOLEAN unused; 
....................            BOOLEAN rs;           // low order up.  ENABLE will 
....................                           // access to the LCD pins. 
....................            BOOLEAN enable;               // The bits are allocated from 
....................                       // on to an I/O port to gain 
....................            int     data : 4;         // be pin B0. 
....................         } lcd; 
....................  
....................  
.................... #if defined use_portb_lcd 
....................    //#locate lcd = getenv("sfr:PORTB")    // This puts the entire structure over the port 
....................    #ifdef __pch__ 
....................     #locate lcd = 0xf81 
....................    #else 
....................     #locate lcd = 6 
....................    #endif 
....................    #define set_tris_lcd(x) set_tris_b(x) 
.................... #else 
....................    //#locate lcd = getenv("sfr:PORTD")    // This puts the entire structure over the port 
....................    #ifdef __pch__ 
....................     #locate lcd = 0xf83 
....................    #else 
....................     #locate lcd = 8 
....................    #endif 
....................    #define set_tris_lcd(x) set_tris_d(x) 
.................... #endif 
....................  
.................... #ifndef lcd_type 
.................... #define lcd_type 2           // 0=5x7, 1=5x10, 2=2 lines 
.................... #endif 
....................  
.................... #define lcd_line_two 0x40    // LCD RAM address for the second line 
....................  
....................  
.................... BYTE const LCD_INIT_STRING[4] = {0x20 | (lcd_type << 2), 0xc, 1, 6}; 
....................                              // These bytes need to be sent to the LCD 
....................                              // to start it up. 
....................  
....................  
....................                              // The following are used for setting 
....................                              // the I/O port direction register. 
....................  
.................... struct lcd_pin_map const LCD_WRITE = {0,0,0,0,0}; // For write mode all pins are out 
.................... struct lcd_pin_map const LCD_READ = {0,0,0,0,15}; // For read mode data pins are in 
....................  
....................  
....................  
.................... BYTE lcd_read_byte() { 
....................       BYTE low,high; 
....................       set_tris_lcd(LCD_READ); 
*
08EA:  MOVLW  F0
08EC:  MOVWF  F95
....................       lcd.rw = 1; 
08EE:  BSF    F83.0
....................       delay_cycles(1); 
08F0:  NOP   
....................       lcd.enable = 1; 
08F2:  BSF    F83.3
....................       delay_cycles(1); 
08F4:  NOP   
....................       high = lcd.data; 
08F6:  SWAPF  F83,W
08F8:  ANDLW  0F
08FA:  MOVWF  x9B
....................       lcd.enable = 0; 
08FC:  BCF    F83.3
....................       delay_cycles(1); 
08FE:  NOP   
....................       lcd.enable = 1; 
0900:  BSF    F83.3
....................       delay_us(1); 
0902:  BRA    0904
0904:  BRA    0906
0906:  NOP   
....................       low = lcd.data; 
0908:  SWAPF  F83,W
090A:  ANDLW  0F
090C:  MOVWF  x9A
....................       lcd.enable = 0; 
090E:  BCF    F83.3
....................       set_tris_lcd(LCD_WRITE); 
0910:  MOVLW  00
0912:  MOVWF  F95
....................       return( (high<<4) | low); 
0914:  SWAPF  x9B,W
0916:  MOVWF  00
0918:  MOVLW  F0
091A:  ANDWF  00,F
091C:  MOVF   00,W
091E:  IORWF  x9A,W
0920:  MOVWF  01
.................... } 
0922:  RETLW  00
....................  
....................  
.................... void lcd_send_nibble( BYTE n ) { 
....................       lcd.data = n; 
0924:  SWAPF  x9B,W
0926:  ANDLW  F0
0928:  MOVWF  00
092A:  MOVLW  0F
092C:  ANDWF  F83,W
092E:  IORWF  00,W
0930:  MOVWF  F83
....................       delay_cycles(1); 
0932:  NOP   
....................       lcd.enable = 1; 
0934:  BSF    F83.3
....................       delay_us(2); 
0936:  MOVLW  03
0938:  MOVWF  00
093A:  DECFSZ 00,F
093C:  BRA    093A
....................       lcd.enable = 0; 
093E:  BCF    F83.3
.................... } 
0940:  RETLW  00
....................  
....................  
.................... void lcd_send_byte( BYTE address, BYTE n ) { 
....................  
....................       lcd.rs = 0; 
0942:  BCF    F83.2
....................       while ( bit_test(lcd_read_byte(),7) ) ; 
0944:  RCALL  08EA
0946:  MOVFF  01,9A
094A:  BTFSC  01.7
094C:  BRA    0944
....................       lcd.rs = address; 
094E:  BTFSS  x98.0
0950:  BCF    F83.2
0952:  BTFSC  x98.0
0954:  BSF    F83.2
....................       delay_cycles(1); 
0956:  NOP   
....................       lcd.rw = 0; 
0958:  BCF    F83.0
....................       delay_cycles(1); 
095A:  NOP   
....................       lcd.enable = 0; 
095C:  BCF    F83.3
....................       lcd_send_nibble(n >> 4); 
095E:  SWAPF  x99,W
0960:  MOVWF  x9A
0962:  MOVLW  0F
0964:  ANDWF  x9A,F
0966:  MOVFF  9A,9B
096A:  RCALL  0924
....................       lcd_send_nibble(n & 0xf); 
096C:  MOVF   x99,W
096E:  ANDLW  0F
0970:  MOVWF  x9A
0972:  MOVWF  x9B
0974:  RCALL  0924
.................... } 
0976:  RETLW  00
....................  
....................  
.................... void lcd_init() { 
....................     BYTE i; 
....................     set_tris_lcd(LCD_WRITE); 
*
0E96:  MOVLW  00
0E98:  MOVWF  F95
....................     lcd.rs = 0; 
0E9A:  BCF    F83.2
....................     lcd.rw = 0; 
0E9C:  BCF    F83.0
....................     lcd.enable = 0; 
0E9E:  BCF    F83.3
0EA0:  CLRF   16
0EA2:  BTFSC  FF2.7
0EA4:  BSF    16.7
0EA6:  BCF    FF2.7
....................     delay_ms(15); 
0EA8:  MOVLW  0F
0EAA:  MOVWF  x94
0EAC:  CALL   0246
0EB0:  BTFSC  16.7
0EB2:  BSF    FF2.7
....................     for(i=1;i<=3;++i) { 
0EB4:  MOVLW  01
0EB6:  MOVWF  x85
0EB8:  MOVF   x85,W
0EBA:  SUBLW  03
0EBC:  BNC   0EE8
0EBE:  CLRF   16
0EC0:  BTFSC  FF2.7
0EC2:  BSF    16.7
0EC4:  BCF    FF2.7
....................        lcd_send_nibble(3); 
0EC6:  MOVLW  03
0EC8:  MOVWF  x9B
0ECA:  RCALL  0924
0ECC:  BTFSC  16.7
0ECE:  BSF    FF2.7
0ED0:  CLRF   16
0ED2:  BTFSC  FF2.7
0ED4:  BSF    16.7
0ED6:  BCF    FF2.7
....................        delay_ms(5); 
0ED8:  MOVLW  05
0EDA:  MOVWF  x94
0EDC:  CALL   0246
0EE0:  BTFSC  16.7
0EE2:  BSF    FF2.7
....................     } 
0EE4:  INCF   x85,F
0EE6:  BRA    0EB8
0EE8:  CLRF   16
0EEA:  BTFSC  FF2.7
0EEC:  BSF    16.7
0EEE:  BCF    FF2.7
....................     lcd_send_nibble(2); 
0EF0:  MOVLW  02
0EF2:  MOVWF  x9B
0EF4:  RCALL  0924
0EF6:  BTFSC  16.7
0EF8:  BSF    FF2.7
....................     for(i=0;i<=3;++i) 
0EFA:  CLRF   x85
0EFC:  MOVF   x85,W
0EFE:  SUBLW  03
0F00:  BNC   0F2C
....................        lcd_send_byte(0,LCD_INIT_STRING[i]); 
0F02:  CLRF   03
0F04:  MOVF   x85,W
0F06:  MOVFF  FF2,86
0F0A:  BCF    FF2.7
0F0C:  CALL   00A2
0F10:  BTFSC  x86.7
0F12:  BSF    FF2.7
0F14:  MOVWF  x86
0F16:  CLRF   16
0F18:  BTFSC  FF2.7
0F1A:  BSF    16.7
0F1C:  BCF    FF2.7
0F1E:  CLRF   x98
0F20:  MOVWF  x99
0F22:  RCALL  0942
0F24:  BTFSC  16.7
0F26:  BSF    FF2.7
0F28:  INCF   x85,F
0F2A:  BRA    0EFC
.................... } 
0F2C:  GOTO   3B52 (RETURN)
....................  
....................  
.................... void lcd_gotoxy( BYTE x, BYTE y) { 
....................    BYTE address; 
....................  
....................    if(y!=1) 
*
0978:  DECFSZ x95,W
097A:  BRA    097E
097C:  BRA    0984
....................      address=lcd_line_two; 
097E:  MOVLW  40
0980:  MOVWF  x96
....................    else 
0982:  BRA    0986
....................      address=0; 
0984:  CLRF   x96
....................    address+=x-1; 
0986:  MOVLW  01
0988:  SUBWF  x94,W
098A:  ADDWF  x96,F
....................    lcd_send_byte(0,0x80|address); 
098C:  MOVF   x96,W
098E:  IORLW  80
0990:  MOVWF  x97
0992:  CLRF   x98
0994:  MOVWF  x99
0996:  RCALL  0942
.................... } 
0998:  RETLW  00
....................  
.................... void lcd_putc( char c) { 
....................    switch (c) { 
099A:  MOVF   x93,W
099C:  XORLW  0C
099E:  BZ    09AA
09A0:  XORLW  06
09A2:  BZ    09BA
09A4:  XORLW  02
09A6:  BZ    09C6
09A8:  BRA    09D0
....................      case '\f'   : lcd_send_byte(0,1); 
09AA:  CLRF   x98
09AC:  MOVLW  01
09AE:  MOVWF  x99
09B0:  RCALL  0942
....................                    delay_ms(2); 
09B2:  MOVLW  02
09B4:  MOVWF  x94
09B6:  RCALL  0246
....................                                            break; 
09B8:  BRA    09DC
....................      case '\n'   : lcd_gotoxy(1,2);        break; 
09BA:  MOVLW  01
09BC:  MOVWF  x94
09BE:  MOVLW  02
09C0:  MOVWF  x95
09C2:  RCALL  0978
09C4:  BRA    09DC
....................      case '\b'   : lcd_send_byte(0,0x10);  break; 
09C6:  CLRF   x98
09C8:  MOVLW  10
09CA:  MOVWF  x99
09CC:  RCALL  0942
09CE:  BRA    09DC
....................      default     : lcd_send_byte(1,c);     break; 
09D0:  MOVLW  01
09D2:  MOVWF  x98
09D4:  MOVFF  93,99
09D8:  RCALL  0942
09DA:  BRA    09DC
....................    } 
.................... } 
09DC:  RETLW  00
....................  
.................... char lcd_getc( BYTE x, BYTE y) { 
....................    char value; 
....................  
....................     lcd_gotoxy(x,y); 
....................     while ( bit_test(lcd_read_byte(),7) ); // wait until busy flag is low 
....................     lcd.rs=1; 
....................     value = lcd_read_byte(); 
....................     lcd.rs=0; 
....................     return(value); 
.................... } 
....................  
....................  
.................... /*#define LCD_ENABLE_PIN  PIN_D3                                  ////d0 
.................... #define LCD_RS_PIN      PIN_D2                                    ////d1 
.................... #define LCD_RW_PIN      PIN_D0                                    ////d2 
.................... #define LCD_DATA4       PIN_D4                                    //// 
.................... #define LCD_DATA5       PIN_D5                                    //// 
.................... #define LCD_DATA6       PIN_D6                                    //// 
.................... #define LCD_DATA7       PIN_D7*/   
.................... //#define LCD_DATA_PORT getenv("SFR:PORTD")                                  //// 
.................... //#include <lcd.c>  
.................... //definiendo puertos 
.................... //valores de la pc 
.................... #byte TOSU=0xFFF  
.................... #byte TOSH=0xFFE 
.................... #byte TOSL=0xFFD 
.................... // 
.................... #byte STKPTR=0xFFC 
.................... #byte PCLATU=0xFFB 
.................... #byte PCLATH=0xFFA 
....................  
.................... #byte tris_a =0xf92 
.................... #byte port_a =0xf80 
.................... #byte tris_b =0xf93 
.................... #byte port_b =0xf81 
.................... #byte tris_c =0xf94 
.................... #byte port_c =0xf82 
.................... #byte tris_d =0xf95 
.................... #byte port_d =0xf83 
.................... #byte tris_e =0xf96 
.................... #byte port_e =0xf84 
.................... //definiendo bits 
.................... #bit rb0=port_b.0 //quantum 
.................... #bit rb1=port_b.1 //proceso1 
.................... #bit rb2=port_b.2 //proceso2 
.................... #bit rb3=port_b.3 //proceso3 
.................... #bit rb5=port_b.5 //sistema operativo 
.................... #bit rb6=port_b.6 //indicador si funciona el quantum 
.................... //definiendo variables 
.................... //para la pc 
.................... int8 aa,bb,cc; 
.................... // 
.................... char tecla_pulsada; 
.................... int mensaje_recibido; 
.................... int contador1=0; 
.................... int contador2=0; 
.................... int contador3=0; 
.................... int copia1; 
.................... int copia2; 
.................... int copia3; 
.................... //estados 
.................... char est1[12]; 
.................... char est2[12]; 
.................... char est3[12]; 
.................... //flags 
.................... int flag_ver=0; 
.................... int flag_procesador=0; 
.................... int flag_so=0; 
.................... //acumuladores 
.................... long int acc1; 
.................... long int acc2; 
.................... long int acc3; 
.................... //colas 
.................... int cola1; 
.................... int cola2; 
.................... int cola3; 
.................... char col_fijo[20]; 
.................... //tiempos de duracion de cada proceso 
.................... long int time1=2500;//10 
.................... long int time2=4000;//16 
.................... long int time3=5000;//20 
.................... long int quantum=250;/// 250 ms 
.................... //estructura del bloque de control de procesos(PCB) 
....................  typedef struct  { 
....................  int id; 
....................  int estado; 
....................  int dir_inicio; 
....................  int id_corriente;//el valor del PC 
....................  long int tiempo; 
....................  }bloque ; 
....................  long int acumulador; 
....................  bloque pcb[3]; 
....................  int cola [3];//cola de procesos 
....................  //char col[20]; 
.................... //funcion para ver procesos 
....................  void ver_estado_proceso (int a){ 
....................  
....................      if(a==0){ 
*
028A:  MOVF   x91,F
028C:  BTFSS  FD8.2
028E:  BRA    03A8
....................     if(contador1*quantum==0) 
0290:  CLRF   x93
0292:  MOVFF  1C,92
0296:  MOVFF  6D,95
029A:  MOVFF  6C,94
029E:  RCALL  026C
02A0:  MOVFF  02,93
02A4:  MOVFF  01,92
02A8:  MOVF   x92,F
02AA:  BNZ   02D0
02AC:  MOVF   x93,F
02AE:  BNZ   02D0
....................      est1= "pasivo" ; 
02B0:  CLRF   FEA
02B2:  MOVLW  22
02B4:  MOVWF  FE9
02B6:  MOVFF  FF2,92
02BA:  BCF    FF2.7
02BC:  MOVLW  00
02BE:  RCALL  00C0
02C0:  TBLRD*-
02C2:  TBLRD*+
02C4:  MOVF   FF5,W
02C6:  MOVWF  FEE
02C8:  IORLW  00
02CA:  BNZ   02C2
02CC:  BTFSC  x92.7
02CE:  BSF    FF2.7
....................      acc1=0; 
02D0:  CLRF   4A
02D2:  CLRF   49
....................      cola1=0; 
02D4:  CLRF   4F
....................     if(contador1*quantum>0 && contador1*quantum<time1){ 
02D6:  CLRF   x93
02D8:  MOVFF  1C,92
02DC:  MOVFF  6D,95
02E0:  MOVFF  6C,94
02E4:  RCALL  026C
02E6:  MOVFF  02,93
02EA:  MOVFF  01,92
02EE:  MOVF   x92,F
02F0:  BNZ   02F6
02F2:  MOVF   x93,F
02F4:  BZ    0358
02F6:  CLRF   x93
02F8:  MOVFF  1C,92
02FC:  MOVFF  6D,95
0300:  MOVFF  6C,94
0304:  RCALL  026C
0306:  MOVFF  02,93
030A:  MOVFF  01,92
030E:  MOVF   02,W
0310:  SUBWF  67,W
0312:  BNC   0358
0314:  BNZ   031C
0316:  MOVF   66,W
0318:  SUBWF  x92,W
031A:  BC    0358
....................      est1="ejecutando"; 
031C:  CLRF   FEA
031E:  MOVLW  22
0320:  MOVWF  FE9
0322:  MOVFF  FF2,92
0326:  BCF    FF2.7
0328:  MOVLW  00
032A:  RCALL  00D8
032C:  TBLRD*-
032E:  TBLRD*+
0330:  MOVF   FF5,W
0332:  MOVWF  FEE
0334:  IORLW  00
0336:  BNZ   032E
0338:  BTFSC  x92.7
033A:  BSF    FF2.7
....................      acc1=contador1*quantum; 
033C:  CLRF   x93
033E:  MOVFF  1C,92
0342:  MOVFF  6D,95
0346:  MOVFF  6C,94
034A:  RCALL  026C
034C:  MOVFF  02,4A
0350:  MOVFF  01,49
....................      cola1=1; 
0354:  MOVLW  01
0356:  MOVWF  4F
....................     } 
....................     if(contador1*quantum>=time1){ 
0358:  CLRF   x93
035A:  MOVFF  1C,92
035E:  MOVFF  6D,95
0362:  MOVFF  6C,94
0366:  RCALL  026C
0368:  MOVFF  02,93
036C:  MOVFF  01,92
0370:  MOVF   67,W
0372:  SUBWF  02,W
0374:  BNC   03A8
0376:  BNZ   037E
0378:  MOVF   66,W
037A:  SUBWF  x92,W
037C:  BNC   03A8
....................      est1="finalizo"; 
037E:  CLRF   FEA
0380:  MOVLW  22
0382:  MOVWF  FE9
0384:  MOVFF  FF2,92
0388:  BCF    FF2.7
038A:  MOVLW  00
038C:  RCALL  00F4
038E:  TBLRD*-
0390:  TBLRD*+
0392:  MOVF   FF5,W
0394:  MOVWF  FEE
0396:  IORLW  00
0398:  BNZ   0390
039A:  BTFSC  x92.7
039C:  BSF    FF2.7
....................      acc1=time1; 
039E:  MOVFF  67,4A
03A2:  MOVFF  66,49
....................      cola1=0; 
03A6:  CLRF   4F
....................     } 
....................      } 
....................      if(a==1){ 
03A8:  DECFSZ x91,W
03AA:  BRA    04C4
....................     if(contador2*quantum==0) 
03AC:  CLRF   x93
03AE:  MOVFF  1D,92
03B2:  MOVFF  6D,95
03B6:  MOVFF  6C,94
03BA:  RCALL  026C
03BC:  MOVFF  02,93
03C0:  MOVFF  01,92
03C4:  MOVF   x92,F
03C6:  BNZ   03EC
03C8:  MOVF   x93,F
03CA:  BNZ   03EC
....................      est2= "pasivo" ; 
03CC:  CLRF   FEA
03CE:  MOVLW  2E
03D0:  MOVWF  FE9
03D2:  MOVFF  FF2,92
03D6:  BCF    FF2.7
03D8:  MOVLW  00
03DA:  RCALL  00C0
03DC:  TBLRD*-
03DE:  TBLRD*+
03E0:  MOVF   FF5,W
03E2:  MOVWF  FEE
03E4:  IORLW  00
03E6:  BNZ   03DE
03E8:  BTFSC  x92.7
03EA:  BSF    FF2.7
....................      acc2=0; 
03EC:  CLRF   4C
03EE:  CLRF   4B
....................      cola2=0; 
03F0:  CLRF   50
....................     if(contador2*quantum>0 && contador2*quantum<time2){ 
03F2:  CLRF   x93
03F4:  MOVFF  1D,92
03F8:  MOVFF  6D,95
03FC:  MOVFF  6C,94
0400:  RCALL  026C
0402:  MOVFF  02,93
0406:  MOVFF  01,92
040A:  MOVF   x92,F
040C:  BNZ   0412
040E:  MOVF   x93,F
0410:  BZ    0474
0412:  CLRF   x93
0414:  MOVFF  1D,92
0418:  MOVFF  6D,95
041C:  MOVFF  6C,94
0420:  RCALL  026C
0422:  MOVFF  02,93
0426:  MOVFF  01,92
042A:  MOVF   02,W
042C:  SUBWF  69,W
042E:  BNC   0474
0430:  BNZ   0438
0432:  MOVF   68,W
0434:  SUBWF  x92,W
0436:  BC    0474
....................      est2="ejecutando"; 
0438:  CLRF   FEA
043A:  MOVLW  2E
043C:  MOVWF  FE9
043E:  MOVFF  FF2,92
0442:  BCF    FF2.7
0444:  MOVLW  00
0446:  RCALL  00D8
0448:  TBLRD*-
044A:  TBLRD*+
044C:  MOVF   FF5,W
044E:  MOVWF  FEE
0450:  IORLW  00
0452:  BNZ   044A
0454:  BTFSC  x92.7
0456:  BSF    FF2.7
....................      acc2=contador2*quantum; 
0458:  CLRF   x93
045A:  MOVFF  1D,92
045E:  MOVFF  6D,95
0462:  MOVFF  6C,94
0466:  RCALL  026C
0468:  MOVFF  02,4C
046C:  MOVFF  01,4B
....................      cola2=1; 
0470:  MOVLW  01
0472:  MOVWF  50
....................     } 
....................     if(contador2*quantum>=time2){ 
0474:  CLRF   x93
0476:  MOVFF  1D,92
047A:  MOVFF  6D,95
047E:  MOVFF  6C,94
0482:  RCALL  026C
0484:  MOVFF  02,93
0488:  MOVFF  01,92
048C:  MOVF   69,W
048E:  SUBWF  02,W
0490:  BNC   04C4
0492:  BNZ   049A
0494:  MOVF   68,W
0496:  SUBWF  x92,W
0498:  BNC   04C4
....................      est2="finalizo"; 
049A:  CLRF   FEA
049C:  MOVLW  2E
049E:  MOVWF  FE9
04A0:  MOVFF  FF2,92
04A4:  BCF    FF2.7
04A6:  MOVLW  00
04A8:  RCALL  00F4
04AA:  TBLRD*-
04AC:  TBLRD*+
04AE:  MOVF   FF5,W
04B0:  MOVWF  FEE
04B2:  IORLW  00
04B4:  BNZ   04AC
04B6:  BTFSC  x92.7
04B8:  BSF    FF2.7
....................      acc2=time2; 
04BA:  MOVFF  69,4C
04BE:  MOVFF  68,4B
....................      cola2=0; 
04C2:  CLRF   50
....................     } 
....................      } 
....................      if(a==2){ 
04C4:  MOVF   x91,W
04C6:  SUBLW  02
04C8:  BTFSS  FD8.2
04CA:  BRA    05E4
....................     if(contador3*quantum==0) 
04CC:  CLRF   x93
04CE:  MOVFF  1E,92
04D2:  MOVFF  6D,95
04D6:  MOVFF  6C,94
04DA:  RCALL  026C
04DC:  MOVFF  02,93
04E0:  MOVFF  01,92
04E4:  MOVF   x92,F
04E6:  BNZ   050C
04E8:  MOVF   x93,F
04EA:  BNZ   050C
....................      est3= "pasivo" ; 
04EC:  CLRF   FEA
04EE:  MOVLW  3A
04F0:  MOVWF  FE9
04F2:  MOVFF  FF2,92
04F6:  BCF    FF2.7
04F8:  MOVLW  00
04FA:  RCALL  00C0
04FC:  TBLRD*-
04FE:  TBLRD*+
0500:  MOVF   FF5,W
0502:  MOVWF  FEE
0504:  IORLW  00
0506:  BNZ   04FE
0508:  BTFSC  x92.7
050A:  BSF    FF2.7
....................      acc3=0; 
050C:  CLRF   4E
050E:  CLRF   4D
....................      cola3=0; 
0510:  CLRF   51
....................     if(contador3*quantum>0 && contador3*quantum<time3){ 
0512:  CLRF   x93
0514:  MOVFF  1E,92
0518:  MOVFF  6D,95
051C:  MOVFF  6C,94
0520:  RCALL  026C
0522:  MOVFF  02,93
0526:  MOVFF  01,92
052A:  MOVF   x92,F
052C:  BNZ   0532
052E:  MOVF   x93,F
0530:  BZ    0594
0532:  CLRF   x93
0534:  MOVFF  1E,92
0538:  MOVFF  6D,95
053C:  MOVFF  6C,94
0540:  RCALL  026C
0542:  MOVFF  02,93
0546:  MOVFF  01,92
054A:  MOVF   02,W
054C:  SUBWF  6B,W
054E:  BNC   0594
0550:  BNZ   0558
0552:  MOVF   6A,W
0554:  SUBWF  x92,W
0556:  BC    0594
....................      est3="ejecutando"; 
0558:  CLRF   FEA
055A:  MOVLW  3A
055C:  MOVWF  FE9
055E:  MOVFF  FF2,92
0562:  BCF    FF2.7
0564:  MOVLW  00
0566:  RCALL  00D8
0568:  TBLRD*-
056A:  TBLRD*+
056C:  MOVF   FF5,W
056E:  MOVWF  FEE
0570:  IORLW  00
0572:  BNZ   056A
0574:  BTFSC  x92.7
0576:  BSF    FF2.7
....................      acc3=contador3*quantum; 
0578:  CLRF   x93
057A:  MOVFF  1E,92
057E:  MOVFF  6D,95
0582:  MOVFF  6C,94
0586:  RCALL  026C
0588:  MOVFF  02,4E
058C:  MOVFF  01,4D
....................      cola3=1; 
0590:  MOVLW  01
0592:  MOVWF  51
....................     } 
....................     if(contador3*quantum>=time3){ 
0594:  CLRF   x93
0596:  MOVFF  1E,92
059A:  MOVFF  6D,95
059E:  MOVFF  6C,94
05A2:  RCALL  026C
05A4:  MOVFF  02,93
05A8:  MOVFF  01,92
05AC:  MOVF   6B,W
05AE:  SUBWF  02,W
05B0:  BNC   05E4
05B2:  BNZ   05BA
05B4:  MOVF   6A,W
05B6:  SUBWF  x92,W
05B8:  BNC   05E4
....................      est3="finalizo"; 
05BA:  CLRF   FEA
05BC:  MOVLW  3A
05BE:  MOVWF  FE9
05C0:  MOVFF  FF2,92
05C4:  BCF    FF2.7
05C6:  MOVLW  00
05C8:  RCALL  00F4
05CA:  TBLRD*-
05CC:  TBLRD*+
05CE:  MOVF   FF5,W
05D0:  MOVWF  FEE
05D2:  IORLW  00
05D4:  BNZ   05CC
05D6:  BTFSC  x92.7
05D8:  BSF    FF2.7
....................      acc3=time3; 
05DA:  MOVFF  6B,4E
05DE:  MOVFF  6A,4D
....................      cola3=0; 
05E2:  CLRF   51
....................     } 
....................      } 
....................      
....................  } 
05E4:  RETLW  00
....................   void ver_cola(int a ,int b,int c){ 
....................      if(a==0 && b==0 && c==0){ 
*
0786:  MOVF   x91,F
0788:  BNZ   07B2
078A:  MOVF   x92,F
078C:  BNZ   07B2
078E:  MOVF   x93,F
0790:  BNZ   07B2
....................        col_fijo="no hay procesos"; 
0792:  CLRF   FEA
0794:  MOVLW  52
0796:  MOVWF  FE9
0798:  MOVFF  FF2,94
079C:  BCF    FF2.7
079E:  MOVLW  00
07A0:  RCALL  010E
07A2:  TBLRD*-
07A4:  TBLRD*+
07A6:  MOVF   FF5,W
07A8:  MOVWF  FEE
07AA:  IORLW  00
07AC:  BNZ   07A4
07AE:  BTFSC  x94.7
07B0:  BSF    FF2.7
....................         } 
....................      if(a==1 && b==0 && c==0){ 
07B2:  DECFSZ x91,W
07B4:  BRA    07DE
07B6:  MOVF   x92,F
07B8:  BNZ   07DE
07BA:  MOVF   x93,F
07BC:  BNZ   07DE
....................        col_fijo="solo el proceso 1";  
07BE:  CLRF   FEA
07C0:  MOVLW  52
07C2:  MOVWF  FE9
07C4:  MOVFF  FF2,94
07C8:  BCF    FF2.7
07CA:  MOVLW  00
07CC:  RCALL  012E
07CE:  TBLRD*-
07D0:  TBLRD*+
07D2:  MOVF   FF5,W
07D4:  MOVWF  FEE
07D6:  IORLW  00
07D8:  BNZ   07D0
07DA:  BTFSC  x94.7
07DC:  BSF    FF2.7
....................      } 
....................      if(a==1 && b==1 && c==0){ 
07DE:  DECFSZ x91,W
07E0:  BRA    080A
07E2:  DECFSZ x92,W
07E4:  BRA    080A
07E6:  MOVF   x93,F
07E8:  BNZ   080A
....................        col_fijo="procesos 1 y 2"; 
07EA:  CLRF   FEA
07EC:  MOVLW  52
07EE:  MOVWF  FE9
07F0:  MOVFF  FF2,94
07F4:  BCF    FF2.7
07F6:  MOVLW  00
07F8:  RCALL  0150
07FA:  TBLRD*-
07FC:  TBLRD*+
07FE:  MOVF   FF5,W
0800:  MOVWF  FEE
0802:  IORLW  00
0804:  BNZ   07FC
0806:  BTFSC  x94.7
0808:  BSF    FF2.7
....................      } 
....................      if(a==1 && b==0 && c==1){ 
080A:  DECFSZ x91,W
080C:  BRA    0836
080E:  MOVF   x92,F
0810:  BNZ   0836
0812:  DECFSZ x93,W
0814:  BRA    0836
....................        col_fijo="procesos 1 y 3"; 
0816:  CLRF   FEA
0818:  MOVLW  52
081A:  MOVWF  FE9
081C:  MOVFF  FF2,94
0820:  BCF    FF2.7
0822:  MOVLW  00
0824:  RCALL  0170
0826:  TBLRD*-
0828:  TBLRD*+
082A:  MOVF   FF5,W
082C:  MOVWF  FEE
082E:  IORLW  00
0830:  BNZ   0828
0832:  BTFSC  x94.7
0834:  BSF    FF2.7
....................      } 
....................       if(a==0 && b==1 && c==0){ 
0836:  MOVF   x91,F
0838:  BNZ   0862
083A:  DECFSZ x92,W
083C:  BRA    0862
083E:  MOVF   x93,F
0840:  BNZ   0862
....................        col_fijo="solo el proceso 2"; 
0842:  CLRF   FEA
0844:  MOVLW  52
0846:  MOVWF  FE9
0848:  MOVFF  FF2,94
084C:  BCF    FF2.7
084E:  MOVLW  00
0850:  RCALL  0190
0852:  TBLRD*-
0854:  TBLRD*+
0856:  MOVF   FF5,W
0858:  MOVWF  FEE
085A:  IORLW  00
085C:  BNZ   0854
085E:  BTFSC  x94.7
0860:  BSF    FF2.7
....................      } 
....................      if(a==0 && b==0 && c==1){ 
0862:  MOVF   x91,F
0864:  BNZ   088E
0866:  MOVF   x92,F
0868:  BNZ   088E
086A:  DECFSZ x93,W
086C:  BRA    088E
....................        col_fijo="solo el proceso 3"; 
086E:  CLRF   FEA
0870:  MOVLW  52
0872:  MOVWF  FE9
0874:  MOVFF  FF2,94
0878:  BCF    FF2.7
087A:  MOVLW  00
087C:  RCALL  01B2
087E:  TBLRD*-
0880:  TBLRD*+
0882:  MOVF   FF5,W
0884:  MOVWF  FEE
0886:  IORLW  00
0888:  BNZ   0880
088A:  BTFSC  x94.7
088C:  BSF    FF2.7
....................      } 
....................      if(a==0 && b==1 && c==1){ 
088E:  MOVF   x91,F
0890:  BNZ   08BA
0892:  DECFSZ x92,W
0894:  BRA    08BA
0896:  DECFSZ x93,W
0898:  BRA    08BA
....................        col_fijo="procesos 2 y 3"; 
089A:  CLRF   FEA
089C:  MOVLW  52
089E:  MOVWF  FE9
08A0:  MOVFF  FF2,94
08A4:  BCF    FF2.7
08A6:  MOVLW  00
08A8:  RCALL  01D4
08AA:  TBLRD*-
08AC:  TBLRD*+
08AE:  MOVF   FF5,W
08B0:  MOVWF  FEE
08B2:  IORLW  00
08B4:  BNZ   08AC
08B6:  BTFSC  x94.7
08B8:  BSF    FF2.7
....................      }  
....................      if(a==1 && b==1 && c==1){ 
08BA:  DECFSZ x91,W
08BC:  BRA    08E6
08BE:  DECFSZ x92,W
08C0:  BRA    08E6
08C2:  DECFSZ x93,W
08C4:  BRA    08E6
....................        col_fijo="procesos 1,2 y 3"; 
08C6:  CLRF   FEA
08C8:  MOVLW  52
08CA:  MOVWF  FE9
08CC:  MOVFF  FF2,94
08D0:  BCF    FF2.7
08D2:  MOVLW  00
08D4:  RCALL  01F4
08D6:  TBLRD*-
08D8:  TBLRD*+
08DA:  MOVF   FF5,W
08DC:  MOVWF  FEE
08DE:  IORLW  00
08E0:  BNZ   08D8
08E2:  BTFSC  x94.7
08E4:  BSF    FF2.7
....................      } 
....................      
....................   } 
08E6:  GOTO   0C68 (RETURN)
.................... //interrupciones 
.................... #int_rda  
.................... void RDA_isr(){ 
.................... tecla_pulsada=getc(); 
*
0216:  BTFSS  F9E.5
0218:  BRA    0216
021A:  MOVFF  FAE,1A
.................... mensaje_recibido=1; 
021E:  MOVLW  01
0220:  MOVWF  1B
.................... if(tecla_pulsada=='v')flag_ver=1; 
0222:  MOVF   1A,W
0224:  SUBLW  76
0226:  BNZ   022C
0228:  MOVLW  01
022A:  MOVWF  46
.................... if(tecla_pulsada=='p')flag_procesador=1; 
022C:  MOVF   1A,W
022E:  SUBLW  70
0230:  BNZ   0236
0232:  MOVLW  01
0234:  MOVWF  47
.................... if(tecla_pulsada=='s')flag_so=1; 
0236:  MOVF   1A,W
0238:  SUBLW  73
023A:  BNZ   0240
023C:  MOVLW  01
023E:  MOVWF  48
.................... //!port_b=0; 
.................... } 
.................... //funcion interrupcion serial 
0240:  BCF    F9E.5
0242:  GOTO   0060
.................... #int_timer0 
.................... //interrupcion del timer0,para hallar el quantum 
.................... //funcion quantum  
.................... void timer0_isr(){ 
.................... delay_ms(quantum-4); 
*
09FE:  MOVLW  04
0A00:  SUBWF  6C,W
0A02:  MOVWF  x91
0A04:  MOVLW  00
0A06:  SUBWFB 6D,W
0A08:  MOVWF  x92
0A0A:  MOVWF  x93
0A0C:  INCF   x93,F
0A0E:  DECF   x93,F
0A10:  BTFSC  FD8.2
0A12:  BRA    0A1C
0A14:  MOVLW  FF
0A16:  MOVWF  x94
0A18:  RCALL  0246
0A1A:  BRA    0A0E
0A1C:  MOVFF  91,94
0A20:  RCALL  0246
....................    rb6=!rb6; 
0A22:  BTG    F81.6
....................    rb0=!rb0; 
0A24:  BTG    F81.0
....................    if(tecla_pulsada=='v'&& flag_ver==1){ 
0A26:  MOVF   1A,W
0A28:  SUBLW  76
0A2A:  BTFSS  FD8.2
0A2C:  BRA    0C82
0A2E:  DECFSZ 46,W
0A30:  BRA    0C82
....................  // 
....................  aa=TOSL; 
0A32:  MOVFF  FFD,17
....................  bb=TOSH; 
0A36:  MOVFF  FFE,18
....................  cc=TOSU; 
0A3A:  MOVFF  FFF,19
.................... //!  est1=ver_estado_proceso(pcb[0].id); 
.................... ver_estado_proceso(pcb[0].id); 
0A3E:  MOVFF  70,91
0A42:  RCALL  028A
....................   ver_estado_proceso(pcb[1].id); 
0A44:  MOVFF  76,91
0A48:  RCALL  028A
....................  ver_estado_proceso(pcb[2].id); 
0A4A:  MOVFF  7C,91
0A4E:  RCALL  028A
....................   pcb[0].tiempo=acc1; 
0A50:  MOVFF  4A,75
0A54:  MOVFF  49,74
....................   pcb[1].tiempo=acc2; 
0A58:  MOVFF  4C,7B
0A5C:  MOVFF  4B,7A
....................   pcb[2].tiempo=acc3; 
0A60:  MOVFF  4E,81
0A64:  MOVFF  4D,80
....................   acumulador=acc1+acc2+acc3; 
0A68:  MOVF   4B,W
0A6A:  ADDWF  49,W
0A6C:  MOVWF  x91
0A6E:  MOVF   4C,W
0A70:  ADDWFC 4A,W
0A72:  MOVWF  x92
0A74:  MOVF   4D,W
0A76:  ADDWF  x91,W
0A78:  MOVWF  6E
0A7A:  MOVF   4E,W
0A7C:  ADDWFC x92,W
0A7E:  MOVWF  6F
....................   puts("ver procesos"); 
0A80:  MOVLW  D6
0A82:  MOVWF  FF6
0A84:  MOVLW  0C
0A86:  MOVWF  FF7
0A88:  RCALL  05E6
0A8A:  MOVLW  0D
0A8C:  BTFSS  F9E.4
0A8E:  BRA    0A8C
0A90:  MOVWF  FAD
0A92:  MOVLW  0A
0A94:  BTFSS  F9E.4
0A96:  BRA    0A94
0A98:  MOVWF  FAD
....................   puts("id     dir-inicio           tiempo         estado"); 
0A9A:  MOVLW  E4
0A9C:  MOVWF  FF6
0A9E:  MOVLW  0C
0AA0:  MOVWF  FF7
0AA2:  RCALL  05E6
0AA4:  MOVLW  0D
0AA6:  BTFSS  F9E.4
0AA8:  BRA    0AA6
0AAA:  MOVWF  FAD
0AAC:  MOVLW  0A
0AAE:  BTFSS  F9E.4
0AB0:  BRA    0AAE
0AB2:  MOVWF  FAD
....................   printf("%1u                 %Lu                  %Lu            ",pcb[0].id,100,pcb[0].tiempo); 
0AB4:  MOVFF  70,91
0AB8:  MOVLW  18
0ABA:  MOVWF  x92
0ABC:  RCALL  0630
0ABE:  MOVLW  19
0AC0:  MOVWF  FF6
0AC2:  MOVLW  0D
0AC4:  MOVWF  FF7
0AC6:  MOVLW  11
0AC8:  MOVWF  x91
0ACA:  RCALL  069C
0ACC:  MOVLW  10
0ACE:  MOVWF  FE9
0AD0:  CLRF   x92
0AD2:  MOVLW  64
0AD4:  MOVWF  x91
0AD6:  RCALL  06BC
0AD8:  MOVLW  2D
0ADA:  MOVWF  FF6
0ADC:  MOVLW  0D
0ADE:  MOVWF  FF7
0AE0:  MOVLW  12
0AE2:  MOVWF  x91
0AE4:  RCALL  069C
0AE6:  MOVLW  10
0AE8:  MOVWF  FE9
0AEA:  MOVFF  75,92
0AEE:  MOVFF  74,91
0AF2:  RCALL  06BC
0AF4:  MOVLW  42
0AF6:  MOVWF  FF6
0AF8:  MOVLW  0D
0AFA:  MOVWF  FF7
0AFC:  MOVLW  0C
0AFE:  MOVWF  x91
0B00:  RCALL  069C
....................   puts(est1); 
0B02:  CLRF   FEA
0B04:  MOVLW  22
0B06:  MOVWF  FE9
0B08:  RCALL  0760
0B0A:  MOVLW  0D
0B0C:  BTFSS  F9E.4
0B0E:  BRA    0B0C
0B10:  MOVWF  FAD
0B12:  MOVLW  0A
0B14:  BTFSS  F9E.4
0B16:  BRA    0B14
0B18:  MOVWF  FAD
....................    
....................   printf("%1u                 %Lu                  %Lu            ",pcb[1].id,200,pcb[1].tiempo); 
0B1A:  MOVFF  76,91
0B1E:  MOVLW  18
0B20:  MOVWF  x92
0B22:  RCALL  0630
0B24:  MOVLW  53
0B26:  MOVWF  FF6
0B28:  MOVLW  0D
0B2A:  MOVWF  FF7
0B2C:  MOVLW  11
0B2E:  MOVWF  x91
0B30:  RCALL  069C
0B32:  MOVLW  10
0B34:  MOVWF  FE9
0B36:  CLRF   x92
0B38:  MOVLW  C8
0B3A:  MOVWF  x91
0B3C:  RCALL  06BC
0B3E:  MOVLW  67
0B40:  MOVWF  FF6
0B42:  MOVLW  0D
0B44:  MOVWF  FF7
0B46:  MOVLW  12
0B48:  MOVWF  x91
0B4A:  RCALL  069C
0B4C:  MOVLW  10
0B4E:  MOVWF  FE9
0B50:  MOVFF  7B,92
0B54:  MOVFF  7A,91
0B58:  RCALL  06BC
0B5A:  MOVLW  7C
0B5C:  MOVWF  FF6
0B5E:  MOVLW  0D
0B60:  MOVWF  FF7
0B62:  MOVLW  0C
0B64:  MOVWF  x91
0B66:  RCALL  069C
....................   puts(est2); 
0B68:  CLRF   FEA
0B6A:  MOVLW  2E
0B6C:  MOVWF  FE9
0B6E:  RCALL  0760
0B70:  MOVLW  0D
0B72:  BTFSS  F9E.4
0B74:  BRA    0B72
0B76:  MOVWF  FAD
0B78:  MOVLW  0A
0B7A:  BTFSS  F9E.4
0B7C:  BRA    0B7A
0B7E:  MOVWF  FAD
....................    
....................   printf("%1u                 %Lu                  %Lu            ",pcb[2].id,300,pcb[2].tiempo); 
0B80:  MOVFF  7C,91
0B84:  MOVLW  18
0B86:  MOVWF  x92
0B88:  RCALL  0630
0B8A:  MOVLW  8D
0B8C:  MOVWF  FF6
0B8E:  MOVLW  0D
0B90:  MOVWF  FF7
0B92:  MOVLW  11
0B94:  MOVWF  x91
0B96:  RCALL  069C
0B98:  MOVLW  10
0B9A:  MOVWF  FE9
0B9C:  MOVLW  01
0B9E:  MOVWF  x92
0BA0:  MOVLW  2C
0BA2:  MOVWF  x91
0BA4:  RCALL  06BC
0BA6:  MOVLW  A1
0BA8:  MOVWF  FF6
0BAA:  MOVLW  0D
0BAC:  MOVWF  FF7
0BAE:  MOVLW  12
0BB0:  MOVWF  x91
0BB2:  RCALL  069C
0BB4:  MOVLW  10
0BB6:  MOVWF  FE9
0BB8:  MOVFF  81,92
0BBC:  MOVFF  80,91
0BC0:  RCALL  06BC
0BC2:  MOVLW  B6
0BC4:  MOVWF  FF6
0BC6:  MOVLW  0D
0BC8:  MOVWF  FF7
0BCA:  MOVLW  0C
0BCC:  MOVWF  x91
0BCE:  RCALL  069C
....................   puts(est3); 
0BD0:  CLRF   FEA
0BD2:  MOVLW  3A
0BD4:  MOVWF  FE9
0BD6:  RCALL  0760
0BD8:  MOVLW  0D
0BDA:  BTFSS  F9E.4
0BDC:  BRA    0BDA
0BDE:  MOVWF  FAD
0BE0:  MOVLW  0A
0BE2:  BTFSS  F9E.4
0BE4:  BRA    0BE2
0BE6:  MOVWF  FAD
....................   //el valor de pc 
....................    
....................   printf("valor del pc o id_corriente  " ); 
0BE8:  MOVLW  C4
0BEA:  MOVWF  FF6
0BEC:  MOVLW  0D
0BEE:  MOVWF  FF7
0BF0:  RCALL  05E6
....................    printf("%u%u%u ",aa,bb,cc); 
0BF2:  MOVFF  17,91
0BF6:  MOVLW  1B
0BF8:  MOVWF  x92
0BFA:  RCALL  0630
0BFC:  MOVFF  18,91
0C00:  MOVLW  1B
0C02:  MOVWF  x92
0C04:  RCALL  0630
0C06:  MOVFF  19,91
0C0A:  MOVLW  1B
0C0C:  MOVWF  x92
0C0E:  RCALL  0630
0C10:  MOVLW  20
0C12:  BTFSS  F9E.4
0C14:  BRA    0C12
0C16:  MOVWF  FAD
....................    
....................   //el acumulador 
....................    
....................   printf("  acumulador = %Lu",acumulador); 
0C18:  MOVLW  E2
0C1A:  MOVWF  FF6
0C1C:  MOVLW  0D
0C1E:  MOVWF  FF7
0C20:  MOVLW  0F
0C22:  MOVWF  x91
0C24:  RCALL  069C
0C26:  MOVLW  10
0C28:  MOVWF  FE9
0C2A:  MOVFF  6F,92
0C2E:  MOVFF  6E,91
0C32:  RCALL  06BC
....................   //la cola 
....................   printf("  "); 
0C34:  MOVLW  20
0C36:  BTFSS  F9E.4
0C38:  BRA    0C36
0C3A:  MOVWF  FAD
0C3C:  MOVLW  20
0C3E:  BTFSS  F9E.4
0C40:  BRA    0C3E
0C42:  MOVWF  FAD
....................    
....................   printf(" ----  ver cola :  "); 
0C44:  MOVLW  F6
0C46:  MOVWF  FF6
0C48:  MOVLW  0D
0C4A:  MOVWF  FF7
0C4C:  RCALL  05E6
....................   cola[0]=cola1; 
0C4E:  MOVFF  4F,82
....................   cola[1]=cola2; 
0C52:  MOVFF  50,83
....................   cola[2]=cola3; 
0C56:  MOVFF  51,84
....................  ver_cola(cola[0],cola[1],cola[2]); 
0C5A:  MOVFF  82,91
0C5E:  MOVFF  83,92
0C62:  MOVFF  84,93
0C66:  BRA    0786
....................   puts(col_fijo); 
0C68:  CLRF   FEA
0C6A:  MOVLW  52
0C6C:  MOVWF  FE9
0C6E:  RCALL  0760
0C70:  MOVLW  0D
0C72:  BTFSS  F9E.4
0C74:  BRA    0C72
0C76:  MOVWF  FAD
0C78:  MOVLW  0A
0C7A:  BTFSS  F9E.4
0C7C:  BRA    0C7A
0C7E:  MOVWF  FAD
....................   // 
....................   flag_ver=0;} 
0C80:  CLRF   46
....................   if(tecla_pulsada=='p'&& flag_procesador==1){ 
0C82:  MOVF   1A,W
0C84:  SUBLW  70
0C86:  BNZ   0C8E
0C88:  DECFSZ 47,W
0C8A:  BRA    0C8E
....................   flag_procesador=0;} 
0C8C:  CLRF   47
....................   if(tecla_pulsada=='s' && flag_so==1){ 
0C8E:  MOVF   1A,W
0C90:  SUBLW  73
0C92:  BNZ   0CCA
0C94:  DECFSZ 48,W
0C96:  BRA    0CCA
....................   lcd_putc("\f"); 
0C98:  MOVLW  0A
0C9A:  MOVWF  FF6
0C9C:  MOVLW  0E
0C9E:  MOVWF  FF7
0CA0:  RCALL  09DE
....................   lcd_putc("sist.oper. XAK");  
0CA2:  MOVLW  0C
0CA4:  MOVWF  FF6
0CA6:  MOVLW  0E
0CA8:  MOVWF  FF7
0CAA:  RCALL  09DE
....................   puts("sistema operativo XAK"); 
0CAC:  MOVLW  1C
0CAE:  MOVWF  FF6
0CB0:  MOVLW  0E
0CB2:  MOVWF  FF7
0CB4:  RCALL  05E6
0CB6:  MOVLW  0D
0CB8:  BTFSS  F9E.4
0CBA:  BRA    0CB8
0CBC:  MOVWF  FAD
0CBE:  MOVLW  0A
0CC0:  BTFSS  F9E.4
0CC2:  BRA    0CC0
0CC4:  MOVWF  FAD
....................    rb5=1; 
0CC6:  BSF    F81.5
....................     
....................    flag_so=0;} 
0CC8:  CLRF   48
.................... //!   if(tecla_pulsada=='h'&& flag_help==1){ 
.................... //!   flag_help=0;} 
....................    set_timer0(0x01); 
0CCA:  CLRF   FD7
0CCC:  MOVLW  01
0CCE:  MOVWF  FD6
.................... } 
....................   
.................... //funciones de los procesos 
....................  
.................... //proceso1: 
0CD0:  BCF    FF2.2
0CD2:  GOTO   0060
.................... void do_proceso1(){ 
.................... lcd_putc("\f"); 
*
0F30:  MOVLW  32
0F32:  MOVWF  FF6
0F34:  MOVLW  0E
0F36:  MOVWF  FF7
0F38:  CLRF   16
0F3A:  BTFSC  FF2.7
0F3C:  BSF    16.7
0F3E:  BCF    FF2.7
0F40:  RCALL  09DE
0F42:  BTFSC  16.7
0F44:  BSF    FF2.7
.................... lcd_putc("proceso 1"); 
0F46:  MOVLW  34
0F48:  MOVWF  FF6
0F4A:  MOVLW  0E
0F4C:  MOVWF  FF7
0F4E:  CLRF   16
0F50:  BTFSC  FF2.7
0F52:  BSF    16.7
0F54:  BCF    FF2.7
0F56:  RCALL  09DE
0F58:  BTFSC  16.7
0F5A:  BSF    FF2.7
.................... puts("proceso 1"); 
0F5C:  MOVLW  3E
0F5E:  MOVWF  FF6
0F60:  MOVLW  0E
0F62:  MOVWF  FF7
0F64:  CLRF   16
0F66:  BTFSC  FF2.7
0F68:  BSF    16.7
0F6A:  BCF    FF2.7
0F6C:  CALL   05E6
0F70:  BTFSC  16.7
0F72:  BSF    FF2.7
0F74:  MOVLW  0D
0F76:  BTFSS  F9E.4
0F78:  BRA    0F76
0F7A:  MOVWF  FAD
0F7C:  MOVLW  0A
0F7E:  BTFSS  F9E.4
0F80:  BRA    0F7E
0F82:  MOVWF  FAD
.................... rb1=1; 
0F84:  BSF    F81.1
.................... } 
0F86:  RETLW  00
.................... //proceso2: 
.................... void do_proceso2(){ 
.................... lcd_putc("\f"); 
0F88:  MOVLW  48
0F8A:  MOVWF  FF6
0F8C:  MOVLW  0E
0F8E:  MOVWF  FF7
0F90:  CLRF   16
0F92:  BTFSC  FF2.7
0F94:  BSF    16.7
0F96:  BCF    FF2.7
0F98:  RCALL  09DE
0F9A:  BTFSC  16.7
0F9C:  BSF    FF2.7
.................... lcd_putc("proceso 2"); 
0F9E:  MOVLW  4A
0FA0:  MOVWF  FF6
0FA2:  MOVLW  0E
0FA4:  MOVWF  FF7
0FA6:  CLRF   16
0FA8:  BTFSC  FF2.7
0FAA:  BSF    16.7
0FAC:  BCF    FF2.7
0FAE:  RCALL  09DE
0FB0:  BTFSC  16.7
0FB2:  BSF    FF2.7
.................... puts("proceso 2"); 
0FB4:  MOVLW  54
0FB6:  MOVWF  FF6
0FB8:  MOVLW  0E
0FBA:  MOVWF  FF7
0FBC:  CLRF   16
0FBE:  BTFSC  FF2.7
0FC0:  BSF    16.7
0FC2:  BCF    FF2.7
0FC4:  CALL   05E6
0FC8:  BTFSC  16.7
0FCA:  BSF    FF2.7
0FCC:  MOVLW  0D
0FCE:  BTFSS  F9E.4
0FD0:  BRA    0FCE
0FD2:  MOVWF  FAD
0FD4:  MOVLW  0A
0FD6:  BTFSS  F9E.4
0FD8:  BRA    0FD6
0FDA:  MOVWF  FAD
.................... rb2=1; 
0FDC:  BSF    F81.2
.................... } 
0FDE:  RETLW  00
.................... //proceso3: 
.................... void do_proceso3(){ 
.................... lcd_putc("\f"); 
0FE0:  MOVLW  5E
0FE2:  MOVWF  FF6
0FE4:  MOVLW  0E
0FE6:  MOVWF  FF7
0FE8:  CLRF   16
0FEA:  BTFSC  FF2.7
0FEC:  BSF    16.7
0FEE:  BCF    FF2.7
0FF0:  RCALL  09DE
0FF2:  BTFSC  16.7
0FF4:  BSF    FF2.7
.................... lcd_putc("proceso 3"); 
0FF6:  MOVLW  60
0FF8:  MOVWF  FF6
0FFA:  MOVLW  0E
0FFC:  MOVWF  FF7
0FFE:  CLRF   16
1000:  BTFSC  FF2.7
1002:  BSF    16.7
1004:  BCF    FF2.7
1006:  RCALL  09DE
1008:  BTFSC  16.7
100A:  BSF    FF2.7
.................... puts("proceso 3"); 
100C:  MOVLW  6A
100E:  MOVWF  FF6
1010:  MOVLW  0E
1012:  MOVWF  FF7
1014:  CLRF   16
1016:  BTFSC  FF2.7
1018:  BSF    16.7
101A:  BCF    FF2.7
101C:  CALL   05E6
1020:  BTFSC  16.7
1022:  BSF    FF2.7
1024:  MOVLW  0D
1026:  BTFSS  F9E.4
1028:  BRA    1026
102A:  MOVWF  FAD
102C:  MOVLW  0A
102E:  BTFSS  F9E.4
1030:  BRA    102E
1032:  MOVWF  FAD
.................... rb3=1; 
1034:  BSF    F81.3
.................... } 
1036:  RETLW  00
.................... //descarga de procesos 
....................  
.................... void descargar_proceso1(){ 
.................... rb1=0; 
*
3AE0:  BCF    F81.1
.................... } 
3AE2:  GOTO   3C50 (RETURN)
....................  
.................... void descargar_proceso2(){ 
.................... rb2=0; 
3AE6:  BCF    F81.2
.................... } 
3AE8:  GOTO   3C5C (RETURN)
....................  
.................... void descargar_proceso3(){ 
.................... rb3=0; 
3AEC:  BCF    F81.3
.................... } 
3AEE:  GOTO   3C68 (RETURN)
....................  
.................... //proceso11: 
.................... void do_proceso11(){ 
.................... for (contador1=1;contador1<=10;contador1++){ 
*
1038:  MOVLW  01
103A:  MOVWF  1C
103C:  MOVF   1C,W
103E:  SUBLW  0A
1040:  BNC   110A
....................               
....................              copia1=contador1; 
1042:  MOVFF  1C,1F
1046:  CLRF   16
1048:  BTFSC  FF2.7
104A:  BSF    16.7
104C:  BCF    FF2.7
....................              if(quantum*contador1<time1){ 
104E:  MOVFF  6D,93
1052:  MOVFF  6C,92
1056:  CLRF   x95
1058:  MOVFF  1C,94
105C:  CALL   026C
1060:  BTFSC  16.7
1062:  BSF    FF2.7
1064:  MOVFF  02,86
1068:  MOVFF  01,85
106C:  MOVF   02,W
106E:  SUBWF  67,W
1070:  BNC   10EC
1072:  BNZ   107A
1074:  MOVF   66,W
1076:  SUBWF  x85,W
1078:  BC    10EC
....................                 rb1=1; 
107A:  BSF    F81.1
....................                 delay_ms(quantum); 
107C:  MOVFF  6D,85
1080:  INCF   x85,F
1082:  DECF   x85,F
1084:  BTFSC  FD8.2
1086:  BRA    109E
1088:  CLRF   16
108A:  BTFSC  FF2.7
108C:  BSF    16.7
108E:  BCF    FF2.7
1090:  MOVLW  FF
1092:  MOVWF  x94
1094:  CALL   0246
1098:  BTFSC  16.7
109A:  BSF    FF2.7
109C:  BRA    1082
109E:  CLRF   16
10A0:  BTFSC  FF2.7
10A2:  BSF    16.7
10A4:  BCF    FF2.7
10A6:  MOVFF  6C,94
10AA:  CALL   0246
10AE:  BTFSC  16.7
10B0:  BSF    FF2.7
....................                 rb1=0; 
10B2:  BCF    F81.1
....................                 delay_ms(quantum); 
10B4:  MOVFF  6D,85
10B8:  INCF   x85,F
10BA:  DECF   x85,F
10BC:  BTFSC  FD8.2
10BE:  BRA    10D6
10C0:  CLRF   16
10C2:  BTFSC  FF2.7
10C4:  BSF    16.7
10C6:  BCF    FF2.7
10C8:  MOVLW  FF
10CA:  MOVWF  x94
10CC:  CALL   0246
10D0:  BTFSC  16.7
10D2:  BSF    FF2.7
10D4:  BRA    10BA
10D6:  CLRF   16
10D8:  BTFSC  FF2.7
10DA:  BSF    16.7
10DC:  BCF    FF2.7
10DE:  MOVFF  6C,94
10E2:  CALL   0246
10E6:  BTFSC  16.7
10E8:  BSF    FF2.7
....................                                         } 
....................              else { 
10EA:  BRA    10EE
....................                     do_proceso1(); 
10EC:  RCALL  0F30
....................                   }   
....................              if(tecla_pulsada=='2'){ 
10EE:  MOVF   1A,W
10F0:  SUBLW  32
10F2:  BNZ   10F6
....................                  
....................                    break; 
10F4:  BRA    110A
....................                   } 
....................              if(tecla_pulsada=='3'){ 
10F6:  MOVF   1A,W
10F8:  SUBLW  33
10FA:  BNZ   10FE
....................                    break; 
10FC:  BRA    110A
....................                   } 
....................              if(tecla_pulsada=='a'){ 
10FE:  MOVF   1A,W
1100:  SUBLW  61
1102:  BNZ   1106
....................                    break; 
1104:  BRA    110A
....................                   } 
....................          } 
1106:  INCF   1C,F
1108:  BRA    103C
....................   
....................      if(tecla_pulsada=='2'){ 
110A:  MOVF   1A,W
110C:  SUBLW  32
110E:  BTFSS  FD8.2
1110:  BRA    14D8
....................                for (contador2=1;contador2<=16;contador2++){ 
1112:  MOVLW  01
1114:  MOVWF  1D
1116:  MOVF   1D,W
1118:  SUBLW  10
111A:  BTFSS  FD8.0
111C:  BRA    1296
....................                     copia2=contador2; 
111E:  MOVFF  1D,20
1122:  CLRF   16
1124:  BTFSC  FF2.7
1126:  BSF    16.7
1128:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
112A:  MOVFF  6D,93
112E:  MOVFF  6C,92
1132:  CLRF   x95
1134:  MOVFF  1C,94
1138:  CALL   026C
113C:  BTFSC  16.7
113E:  BSF    FF2.7
1140:  MOVFF  02,86
1144:  MOVFF  01,85
1148:  MOVF   02,W
114A:  SUBWF  67,W
114C:  BNC   11CC
114E:  BNZ   1156
1150:  MOVF   x85,W
1152:  SUBWF  66,W
1154:  BNC   11CC
....................                       rb2=1; 
1156:  BSF    F81.2
....................                       rb1=1; 
1158:  BSF    F81.1
....................                       delay_ms(quantum); 
115A:  MOVFF  6D,85
115E:  INCF   x85,F
1160:  DECF   x85,F
1162:  BTFSC  FD8.2
1164:  BRA    117C
1166:  CLRF   16
1168:  BTFSC  FF2.7
116A:  BSF    16.7
116C:  BCF    FF2.7
116E:  MOVLW  FF
1170:  MOVWF  x94
1172:  CALL   0246
1176:  BTFSC  16.7
1178:  BSF    FF2.7
117A:  BRA    1160
117C:  CLRF   16
117E:  BTFSC  FF2.7
1180:  BSF    16.7
1182:  BCF    FF2.7
1184:  MOVFF  6C,94
1188:  CALL   0246
118C:  BTFSC  16.7
118E:  BSF    FF2.7
....................                       rb1=0; 
1190:  BCF    F81.1
....................                       rb2=0; 
1192:  BCF    F81.2
....................                       delay_ms(quantum); 
1194:  MOVFF  6D,85
1198:  INCF   x85,F
119A:  DECF   x85,F
119C:  BTFSC  FD8.2
119E:  BRA    11B6
11A0:  CLRF   16
11A2:  BTFSC  FF2.7
11A4:  BSF    16.7
11A6:  BCF    FF2.7
11A8:  MOVLW  FF
11AA:  MOVWF  x94
11AC:  CALL   0246
11B0:  BTFSC  16.7
11B2:  BSF    FF2.7
11B4:  BRA    119A
11B6:  CLRF   16
11B8:  BTFSC  FF2.7
11BA:  BSF    16.7
11BC:  BCF    FF2.7
11BE:  MOVFF  6C,94
11C2:  CALL   0246
11C6:  BTFSC  16.7
11C8:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
11CA:  BRA    1270
11CC:  CLRF   16
11CE:  BTFSC  FF2.7
11D0:  BSF    16.7
11D2:  BCF    FF2.7
....................  
....................                           if(quantum*contador2<time2){ 
11D4:  MOVFF  6D,93
11D8:  MOVFF  6C,92
11DC:  CLRF   x95
11DE:  MOVFF  1D,94
11E2:  CALL   026C
11E6:  BTFSC  16.7
11E8:  BSF    FF2.7
11EA:  MOVFF  02,86
11EE:  MOVFF  01,85
11F2:  MOVF   02,W
11F4:  SUBWF  69,W
11F6:  BNC   1270
11F8:  BNZ   1200
11FA:  MOVF   68,W
11FC:  SUBWF  x85,W
11FE:  BC    1270
....................                                rb2=1; 
1200:  BSF    F81.2
....................                                delay_ms(quantum); 
1202:  MOVFF  6D,85
1206:  INCF   x85,F
1208:  DECF   x85,F
120A:  BTFSC  FD8.2
120C:  BRA    1224
120E:  CLRF   16
1210:  BTFSC  FF2.7
1212:  BSF    16.7
1214:  BCF    FF2.7
1216:  MOVLW  FF
1218:  MOVWF  x94
121A:  CALL   0246
121E:  BTFSC  16.7
1220:  BSF    FF2.7
1222:  BRA    1208
1224:  CLRF   16
1226:  BTFSC  FF2.7
1228:  BSF    16.7
122A:  BCF    FF2.7
122C:  MOVFF  6C,94
1230:  CALL   0246
1234:  BTFSC  16.7
1236:  BSF    FF2.7
....................                                rb2=0; 
1238:  BCF    F81.2
....................                                delay_ms(quantum); 
123A:  MOVFF  6D,85
123E:  INCF   x85,F
1240:  DECF   x85,F
1242:  BTFSC  FD8.2
1244:  BRA    125C
1246:  CLRF   16
1248:  BTFSC  FF2.7
124A:  BSF    16.7
124C:  BCF    FF2.7
124E:  MOVLW  FF
1250:  MOVWF  x94
1252:  CALL   0246
1256:  BTFSC  16.7
1258:  BSF    FF2.7
125A:  BRA    1240
125C:  CLRF   16
125E:  BTFSC  FF2.7
1260:  BSF    16.7
1262:  BCF    FF2.7
1264:  MOVFF  6C,94
1268:  CALL   0246
126C:  BTFSC  16.7
126E:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
1270:  MOVF   1C,W
1272:  SUBLW  0A
1274:  BNZ   1280
1276:  MOVF   1F,W
1278:  SUBLW  09
127A:  BNC   1280
127C:  RCALL  0F30
....................                  else{ if(contador2==16) do_proceso2();} 
127E:  BRA    1288
1280:  MOVF   1D,W
1282:  SUBLW  10
1284:  BNZ   1288
1286:  RCALL  0F88
....................           
....................                  if(tecla_pulsada=='3'){ 
1288:  MOVF   1A,W
128A:  SUBLW  33
128C:  BNZ   1290
....................                       break; 
128E:  BRA    1296
....................                   } 
....................                
....................                   contador1++; 
1290:  INCF   1C,F
....................                    
....................               } 
1292:  INCF   1D,F
1294:  BRA    1116
....................  
....................               if(tecla_pulsada=='3'){ 
1296:  MOVF   1A,W
1298:  SUBLW  33
129A:  BTFSS  FD8.2
129C:  BRA    14D6
....................                       for (contador3=1;contador3<=20;contador3++){ 
129E:  MOVLW  01
12A0:  MOVWF  1E
12A2:  MOVF   1E,W
12A4:  SUBLW  14
12A6:  BTFSS  FD8.0
12A8:  BRA    14D6
....................                            copia3=contador3; 
12AA:  MOVFF  1E,21
12AE:  CLRF   16
12B0:  BTFSC  FF2.7
12B2:  BSF    16.7
12B4:  BCF    FF2.7
....................                            if(quantum*contador1<time1){ 
12B6:  MOVFF  6D,93
12BA:  MOVFF  6C,92
12BE:  CLRF   x95
12C0:  MOVFF  1C,94
12C4:  CALL   026C
12C8:  BTFSC  16.7
12CA:  BSF    FF2.7
12CC:  MOVFF  02,86
12D0:  MOVFF  01,85
12D4:  MOVF   02,W
12D6:  SUBWF  67,W
12D8:  BNC   135C
12DA:  BNZ   12E2
12DC:  MOVF   66,W
12DE:  SUBWF  x85,W
12E0:  BC    135C
....................                             rb3=1; 
12E2:  BSF    F81.3
....................                             rb2=1; 
12E4:  BSF    F81.2
....................                             rb1=1; 
12E6:  BSF    F81.1
....................                             delay_ms(quantum); 
12E8:  MOVFF  6D,85
12EC:  INCF   x85,F
12EE:  DECF   x85,F
12F0:  BTFSC  FD8.2
12F2:  BRA    130A
12F4:  CLRF   16
12F6:  BTFSC  FF2.7
12F8:  BSF    16.7
12FA:  BCF    FF2.7
12FC:  MOVLW  FF
12FE:  MOVWF  x94
1300:  CALL   0246
1304:  BTFSC  16.7
1306:  BSF    FF2.7
1308:  BRA    12EE
130A:  CLRF   16
130C:  BTFSC  FF2.7
130E:  BSF    16.7
1310:  BCF    FF2.7
1312:  MOVFF  6C,94
1316:  CALL   0246
131A:  BTFSC  16.7
131C:  BSF    FF2.7
....................                             rb3=0; 
131E:  BCF    F81.3
....................                             rb1=0; 
1320:  BCF    F81.1
....................                             rb2=0; 
1322:  BCF    F81.2
....................                             delay_ms(quantum); 
1324:  MOVFF  6D,85
1328:  INCF   x85,F
132A:  DECF   x85,F
132C:  BTFSC  FD8.2
132E:  BRA    1346
1330:  CLRF   16
1332:  BTFSC  FF2.7
1334:  BSF    16.7
1336:  BCF    FF2.7
1338:  MOVLW  FF
133A:  MOVWF  x94
133C:  CALL   0246
1340:  BTFSC  16.7
1342:  BSF    FF2.7
1344:  BRA    132A
1346:  CLRF   16
1348:  BTFSC  FF2.7
134A:  BSF    16.7
134C:  BCF    FF2.7
134E:  MOVFF  6C,94
1352:  CALL   0246
1356:  BTFSC  16.7
1358:  BSF    FF2.7
....................                                                }                                              
....................                    else  { 
135A:  BRA    14AA
135C:  CLRF   16
135E:  BTFSC  FF2.7
1360:  BSF    16.7
1362:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<time2){ 
1364:  MOVFF  6D,93
1368:  MOVFF  6C,92
136C:  CLRF   x95
136E:  MOVFF  1D,94
1372:  CALL   026C
1376:  BTFSC  16.7
1378:  BSF    FF2.7
137A:  MOVFF  02,86
137E:  MOVFF  01,85
1382:  MOVF   02,W
1384:  SUBWF  69,W
1386:  BNC   1406
1388:  BNZ   1390
138A:  MOVF   68,W
138C:  SUBWF  x85,W
138E:  BC    1406
....................                                rb3=1; 
1390:  BSF    F81.3
....................                                rb2=1; 
1392:  BSF    F81.2
....................                                delay_ms(quantum); 
1394:  MOVFF  6D,85
1398:  INCF   x85,F
139A:  DECF   x85,F
139C:  BTFSC  FD8.2
139E:  BRA    13B6
13A0:  CLRF   16
13A2:  BTFSC  FF2.7
13A4:  BSF    16.7
13A6:  BCF    FF2.7
13A8:  MOVLW  FF
13AA:  MOVWF  x94
13AC:  CALL   0246
13B0:  BTFSC  16.7
13B2:  BSF    FF2.7
13B4:  BRA    139A
13B6:  CLRF   16
13B8:  BTFSC  FF2.7
13BA:  BSF    16.7
13BC:  BCF    FF2.7
13BE:  MOVFF  6C,94
13C2:  CALL   0246
13C6:  BTFSC  16.7
13C8:  BSF    FF2.7
....................                                rb3=0; 
13CA:  BCF    F81.3
....................                                rb2=0; 
13CC:  BCF    F81.2
....................                                delay_ms(quantum); 
13CE:  MOVFF  6D,85
13D2:  INCF   x85,F
13D4:  DECF   x85,F
13D6:  BTFSC  FD8.2
13D8:  BRA    13F0
13DA:  CLRF   16
13DC:  BTFSC  FF2.7
13DE:  BSF    16.7
13E0:  BCF    FF2.7
13E2:  MOVLW  FF
13E4:  MOVWF  x94
13E6:  CALL   0246
13EA:  BTFSC  16.7
13EC:  BSF    FF2.7
13EE:  BRA    13D4
13F0:  CLRF   16
13F2:  BTFSC  FF2.7
13F4:  BSF    16.7
13F6:  BCF    FF2.7
13F8:  MOVFF  6C,94
13FC:  CALL   0246
1400:  BTFSC  16.7
1402:  BSF    FF2.7
....................                                                     }  
....................                      else { 
1404:  BRA    14AA
1406:  CLRF   16
1408:  BTFSC  FF2.7
140A:  BSF    16.7
140C:  BCF    FF2.7
....................                          if(quantum*contador3<time3){ 
140E:  MOVFF  6D,93
1412:  MOVFF  6C,92
1416:  CLRF   x95
1418:  MOVFF  1E,94
141C:  CALL   026C
1420:  BTFSC  16.7
1422:  BSF    FF2.7
1424:  MOVFF  02,86
1428:  MOVFF  01,85
142C:  MOVF   02,W
142E:  SUBWF  6B,W
1430:  BNC   14AA
1432:  BNZ   143A
1434:  MOVF   6A,W
1436:  SUBWF  x85,W
1438:  BC    14AA
....................                                rb3=1; 
143A:  BSF    F81.3
....................                                delay_ms(quantum); 
143C:  MOVFF  6D,85
1440:  INCF   x85,F
1442:  DECF   x85,F
1444:  BTFSC  FD8.2
1446:  BRA    145E
1448:  CLRF   16
144A:  BTFSC  FF2.7
144C:  BSF    16.7
144E:  BCF    FF2.7
1450:  MOVLW  FF
1452:  MOVWF  x94
1454:  CALL   0246
1458:  BTFSC  16.7
145A:  BSF    FF2.7
145C:  BRA    1442
145E:  CLRF   16
1460:  BTFSC  FF2.7
1462:  BSF    16.7
1464:  BCF    FF2.7
1466:  MOVFF  6C,94
146A:  CALL   0246
146E:  BTFSC  16.7
1470:  BSF    FF2.7
....................                                rb3=0; 
1472:  BCF    F81.3
....................                                delay_ms(quantum); 
1474:  MOVFF  6D,85
1478:  INCF   x85,F
147A:  DECF   x85,F
147C:  BTFSC  FD8.2
147E:  BRA    1496
1480:  CLRF   16
1482:  BTFSC  FF2.7
1484:  BSF    16.7
1486:  BCF    FF2.7
1488:  MOVLW  FF
148A:  MOVWF  x94
148C:  CALL   0246
1490:  BTFSC  16.7
1492:  BSF    FF2.7
1494:  BRA    147A
1496:  CLRF   16
1498:  BTFSC  FF2.7
149A:  BSF    16.7
149C:  BCF    FF2.7
149E:  MOVFF  6C,94
14A2:  CALL   0246
14A6:  BTFSC  16.7
14A8:  BSF    FF2.7
....................                                                      }  
....................                              } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1();                 
14AA:  MOVF   1C,W
14AC:  SUBLW  0A
14AE:  BNZ   14B8
14B0:  MOVF   1F,W
14B2:  SUBLW  09
14B4:  BNC   14B8
14B6:  RCALL  0F30
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
14B8:  MOVF   1D,W
14BA:  SUBLW  10
14BC:  BNZ   14C6
14BE:  MOVF   20,W
14C0:  SUBLW  0F
14C2:  BNC   14C6
14C4:  RCALL  0F88
....................                  if(contador3==20 )do_proceso3(); 
14C6:  MOVF   1E,W
14C8:  SUBLW  14
14CA:  BNZ   14CE
14CC:  RCALL  0FE0
....................  
....................                   contador1++; 
14CE:  INCF   1C,F
....................                   contador2++; 
14D0:  INCF   1D,F
....................                  
....................               } 
14D2:  INCF   1E,F
14D4:  BRA    12A2
....................                     
....................                    
....................    } 
....................          
....................                
.................... } 
....................           else { 
14D6:  BRA    1AEA
....................           if(tecla_pulsada=='3'){ 
14D8:  MOVF   1A,W
14DA:  SUBLW  33
14DC:  BTFSS  FD8.2
14DE:  BRA    1AEA
....................                for (contador3=1;contador3<=20;contador3++){ 
14E0:  MOVLW  01
14E2:  MOVWF  1E
14E4:  MOVF   1E,W
14E6:  SUBLW  14
14E8:  BTFSS  FD8.0
14EA:  BRA    1662
....................                     copia3=contador3; 
14EC:  MOVFF  1E,21
14F0:  CLRF   16
14F2:  BTFSC  FF2.7
14F4:  BSF    16.7
14F6:  BCF    FF2.7
....................                     if(quantum*contador1<time1){ 
14F8:  MOVFF  6D,93
14FC:  MOVFF  6C,92
1500:  CLRF   x95
1502:  MOVFF  1C,94
1506:  CALL   026C
150A:  BTFSC  16.7
150C:  BSF    FF2.7
150E:  MOVFF  02,86
1512:  MOVFF  01,85
1516:  MOVF   02,W
1518:  SUBWF  67,W
151A:  BNC   159A
151C:  BNZ   1524
151E:  MOVF   66,W
1520:  SUBWF  x85,W
1522:  BC    159A
....................                       rb3=1; 
1524:  BSF    F81.3
....................                       rb1=1; 
1526:  BSF    F81.1
....................                       delay_ms(quantum); 
1528:  MOVFF  6D,85
152C:  INCF   x85,F
152E:  DECF   x85,F
1530:  BTFSC  FD8.2
1532:  BRA    154A
1534:  CLRF   16
1536:  BTFSC  FF2.7
1538:  BSF    16.7
153A:  BCF    FF2.7
153C:  MOVLW  FF
153E:  MOVWF  x94
1540:  CALL   0246
1544:  BTFSC  16.7
1546:  BSF    FF2.7
1548:  BRA    152E
154A:  CLRF   16
154C:  BTFSC  FF2.7
154E:  BSF    16.7
1550:  BCF    FF2.7
1552:  MOVFF  6C,94
1556:  CALL   0246
155A:  BTFSC  16.7
155C:  BSF    FF2.7
....................                       rb3=0; 
155E:  BCF    F81.3
....................                       rb1=0; 
1560:  BCF    F81.1
....................                       delay_ms(quantum); 
1562:  MOVFF  6D,85
1566:  INCF   x85,F
1568:  DECF   x85,F
156A:  BTFSC  FD8.2
156C:  BRA    1584
156E:  CLRF   16
1570:  BTFSC  FF2.7
1572:  BSF    16.7
1574:  BCF    FF2.7
1576:  MOVLW  FF
1578:  MOVWF  x94
157A:  CALL   0246
157E:  BTFSC  16.7
1580:  BSF    FF2.7
1582:  BRA    1568
1584:  CLRF   16
1586:  BTFSC  FF2.7
1588:  BSF    16.7
158A:  BCF    FF2.7
158C:  MOVFF  6C,94
1590:  CALL   0246
1594:  BTFSC  16.7
1596:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
1598:  BRA    163E
159A:  CLRF   16
159C:  BTFSC  FF2.7
159E:  BSF    16.7
15A0:  BCF    FF2.7
....................                     
....................                           if(quantum*contador3<=time3){ 
15A2:  MOVFF  6D,93
15A6:  MOVFF  6C,92
15AA:  CLRF   x95
15AC:  MOVFF  1E,94
15B0:  CALL   026C
15B4:  BTFSC  16.7
15B6:  BSF    FF2.7
15B8:  MOVFF  02,86
15BC:  MOVFF  01,85
15C0:  MOVF   02,W
15C2:  SUBWF  6B,W
15C4:  BNC   163E
15C6:  BNZ   15CE
15C8:  MOVF   x85,W
15CA:  SUBWF  6A,W
15CC:  BNC   163E
....................                                rb3=1; 
15CE:  BSF    F81.3
....................                                delay_ms(quantum); 
15D0:  MOVFF  6D,85
15D4:  INCF   x85,F
15D6:  DECF   x85,F
15D8:  BTFSC  FD8.2
15DA:  BRA    15F2
15DC:  CLRF   16
15DE:  BTFSC  FF2.7
15E0:  BSF    16.7
15E2:  BCF    FF2.7
15E4:  MOVLW  FF
15E6:  MOVWF  x94
15E8:  CALL   0246
15EC:  BTFSC  16.7
15EE:  BSF    FF2.7
15F0:  BRA    15D6
15F2:  CLRF   16
15F4:  BTFSC  FF2.7
15F6:  BSF    16.7
15F8:  BCF    FF2.7
15FA:  MOVFF  6C,94
15FE:  CALL   0246
1602:  BTFSC  16.7
1604:  BSF    FF2.7
....................                                rb3=0; 
1606:  BCF    F81.3
....................                                delay_ms(quantum); 
1608:  MOVFF  6D,85
160C:  INCF   x85,F
160E:  DECF   x85,F
1610:  BTFSC  FD8.2
1612:  BRA    162A
1614:  CLRF   16
1616:  BTFSC  FF2.7
1618:  BSF    16.7
161A:  BCF    FF2.7
161C:  MOVLW  FF
161E:  MOVWF  x94
1620:  CALL   0246
1624:  BTFSC  16.7
1626:  BSF    FF2.7
1628:  BRA    160E
162A:  CLRF   16
162C:  BTFSC  FF2.7
162E:  BSF    16.7
1630:  BCF    FF2.7
1632:  MOVFF  6C,94
1636:  CALL   0246
163A:  BTFSC  16.7
163C:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
163E:  MOVF   1C,W
1640:  SUBLW  0A
1642:  BNZ   164C
1644:  MOVF   1F,W
1646:  SUBLW  09
1648:  BNC   164C
164A:  RCALL  0F30
....................                  if(contador3==20 )do_proceso3(); 
164C:  MOVF   1E,W
164E:  SUBLW  14
1650:  BNZ   1654
1652:  RCALL  0FE0
....................                   
....................                  if(tecla_pulsada=='2'){ 
1654:  MOVF   1A,W
1656:  SUBLW  32
1658:  BNZ   165C
....................                       break; 
165A:  BRA    1662
....................                   } 
....................                   contador1++; 
165C:  INCF   1C,F
....................  
....................                  } 
165E:  INCF   1E,F
1660:  BRA    14E4
....................                  if(tecla_pulsada=='2'){ 
1662:  MOVF   1A,W
1664:  SUBLW  32
1666:  BTFSS  FD8.2
1668:  BRA    1AEA
....................                          if(copia3<=4){///////////// 
166A:  MOVF   21,W
166C:  SUBLW  04
166E:  BTFSS  FD8.0
1670:  BRA    18AC
....................                            for (contador3=copia3;contador3<=20;contador3++){ 
1672:  MOVFF  21,1E
1676:  MOVF   1E,W
1678:  SUBLW  14
167A:  BTFSS  FD8.0
167C:  BRA    18AA
....................                     copia3=contador3; 
167E:  MOVFF  1E,21
1682:  CLRF   16
1684:  BTFSC  FF2.7
1686:  BSF    16.7
1688:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
168A:  MOVFF  6D,93
168E:  MOVFF  6C,92
1692:  CLRF   x95
1694:  MOVFF  1C,94
1698:  CALL   026C
169C:  BTFSC  16.7
169E:  BSF    FF2.7
16A0:  MOVFF  02,86
16A4:  MOVFF  01,85
16A8:  MOVF   02,W
16AA:  SUBWF  67,W
16AC:  BNC   1730
16AE:  BNZ   16B6
16B0:  MOVF   x85,W
16B2:  SUBWF  66,W
16B4:  BNC   1730
....................                       rb2=1; 
16B6:  BSF    F81.2
....................                       rb3=1; 
16B8:  BSF    F81.3
....................                       rb1=1; 
16BA:  BSF    F81.1
....................                       delay_ms(quantum); 
16BC:  MOVFF  6D,85
16C0:  INCF   x85,F
16C2:  DECF   x85,F
16C4:  BTFSC  FD8.2
16C6:  BRA    16DE
16C8:  CLRF   16
16CA:  BTFSC  FF2.7
16CC:  BSF    16.7
16CE:  BCF    FF2.7
16D0:  MOVLW  FF
16D2:  MOVWF  x94
16D4:  CALL   0246
16D8:  BTFSC  16.7
16DA:  BSF    FF2.7
16DC:  BRA    16C2
16DE:  CLRF   16
16E0:  BTFSC  FF2.7
16E2:  BSF    16.7
16E4:  BCF    FF2.7
16E6:  MOVFF  6C,94
16EA:  CALL   0246
16EE:  BTFSC  16.7
16F0:  BSF    FF2.7
....................                       rb2=0; 
16F2:  BCF    F81.2
....................                       rb3=0; 
16F4:  BCF    F81.3
....................                       rb1=0; 
16F6:  BCF    F81.1
....................                       delay_ms(quantum); 
16F8:  MOVFF  6D,85
16FC:  INCF   x85,F
16FE:  DECF   x85,F
1700:  BTFSC  FD8.2
1702:  BRA    171A
1704:  CLRF   16
1706:  BTFSC  FF2.7
1708:  BSF    16.7
170A:  BCF    FF2.7
170C:  MOVLW  FF
170E:  MOVWF  x94
1710:  CALL   0246
1714:  BTFSC  16.7
1716:  BSF    FF2.7
1718:  BRA    16FE
171A:  CLRF   16
171C:  BTFSC  FF2.7
171E:  BSF    16.7
1720:  BCF    FF2.7
1722:  MOVFF  6C,94
1726:  CALL   0246
172A:  BTFSC  16.7
172C:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
172E:  BRA    187E
1730:  CLRF   16
1732:  BTFSC  FF2.7
1734:  BSF    16.7
1736:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<=time2){ 
1738:  MOVFF  6D,93
173C:  MOVFF  6C,92
1740:  CLRF   x95
1742:  MOVFF  1D,94
1746:  CALL   026C
174A:  BTFSC  16.7
174C:  BSF    FF2.7
174E:  MOVFF  02,86
1752:  MOVFF  01,85
1756:  MOVF   02,W
1758:  SUBWF  69,W
175A:  BNC   17DA
175C:  BNZ   1764
175E:  MOVF   x85,W
1760:  SUBWF  68,W
1762:  BNC   17DA
....................                                rb2=1; 
1764:  BSF    F81.2
....................                                rb3=1; 
1766:  BSF    F81.3
....................                                delay_ms(quantum); 
1768:  MOVFF  6D,85
176C:  INCF   x85,F
176E:  DECF   x85,F
1770:  BTFSC  FD8.2
1772:  BRA    178A
1774:  CLRF   16
1776:  BTFSC  FF2.7
1778:  BSF    16.7
177A:  BCF    FF2.7
177C:  MOVLW  FF
177E:  MOVWF  x94
1780:  CALL   0246
1784:  BTFSC  16.7
1786:  BSF    FF2.7
1788:  BRA    176E
178A:  CLRF   16
178C:  BTFSC  FF2.7
178E:  BSF    16.7
1790:  BCF    FF2.7
1792:  MOVFF  6C,94
1796:  CALL   0246
179A:  BTFSC  16.7
179C:  BSF    FF2.7
....................                                rb2=0; 
179E:  BCF    F81.2
....................                                rb3=0; 
17A0:  BCF    F81.3
....................                                delay_ms(quantum); 
17A2:  MOVFF  6D,85
17A6:  INCF   x85,F
17A8:  DECF   x85,F
17AA:  BTFSC  FD8.2
17AC:  BRA    17C4
17AE:  CLRF   16
17B0:  BTFSC  FF2.7
17B2:  BSF    16.7
17B4:  BCF    FF2.7
17B6:  MOVLW  FF
17B8:  MOVWF  x94
17BA:  CALL   0246
17BE:  BTFSC  16.7
17C0:  BSF    FF2.7
17C2:  BRA    17A8
17C4:  CLRF   16
17C6:  BTFSC  FF2.7
17C8:  BSF    16.7
17CA:  BCF    FF2.7
17CC:  MOVFF  6C,94
17D0:  CALL   0246
17D4:  BTFSC  16.7
17D6:  BSF    FF2.7
....................                                                      }  
....................                              else{ 
17D8:  BRA    187E
17DA:  CLRF   16
17DC:  BTFSC  FF2.7
17DE:  BSF    16.7
17E0:  BCF    FF2.7
....................                                         if(quantum*contador3<=time3){ 
17E2:  MOVFF  6D,93
17E6:  MOVFF  6C,92
17EA:  CLRF   x95
17EC:  MOVFF  1E,94
17F0:  CALL   026C
17F4:  BTFSC  16.7
17F6:  BSF    FF2.7
17F8:  MOVFF  02,86
17FC:  MOVFF  01,85
1800:  MOVF   02,W
1802:  SUBWF  6B,W
1804:  BNC   187E
1806:  BNZ   180E
1808:  MOVF   x85,W
180A:  SUBWF  6A,W
180C:  BNC   187E
....................                                rb3=1; 
180E:  BSF    F81.3
....................                                
....................                                delay_ms(quantum); 
1810:  MOVFF  6D,85
1814:  INCF   x85,F
1816:  DECF   x85,F
1818:  BTFSC  FD8.2
181A:  BRA    1832
181C:  CLRF   16
181E:  BTFSC  FF2.7
1820:  BSF    16.7
1822:  BCF    FF2.7
1824:  MOVLW  FF
1826:  MOVWF  x94
1828:  CALL   0246
182C:  BTFSC  16.7
182E:  BSF    FF2.7
1830:  BRA    1816
1832:  CLRF   16
1834:  BTFSC  FF2.7
1836:  BSF    16.7
1838:  BCF    FF2.7
183A:  MOVFF  6C,94
183E:  CALL   0246
1842:  BTFSC  16.7
1844:  BSF    FF2.7
....................                                rb3=0; 
1846:  BCF    F81.3
....................                                
....................                                delay_ms(quantum); 
1848:  MOVFF  6D,85
184C:  INCF   x85,F
184E:  DECF   x85,F
1850:  BTFSC  FD8.2
1852:  BRA    186A
1854:  CLRF   16
1856:  BTFSC  FF2.7
1858:  BSF    16.7
185A:  BCF    FF2.7
185C:  MOVLW  FF
185E:  MOVWF  x94
1860:  CALL   0246
1864:  BTFSC  16.7
1866:  BSF    FF2.7
1868:  BRA    184E
186A:  CLRF   16
186C:  BTFSC  FF2.7
186E:  BSF    16.7
1870:  BCF    FF2.7
1872:  MOVFF  6C,94
1876:  CALL   0246
187A:  BTFSC  16.7
187C:  BSF    FF2.7
....................                                                      }                
....................                                                       
....................                                                      } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
187E:  MOVF   1C,W
1880:  SUBLW  0A
1882:  BNZ   188E
1884:  MOVF   1F,W
1886:  SUBLW  09
1888:  BNC   188E
188A:  CALL   0F30
....................                  if(contador3==20 )do_proceso3(); 
188E:  MOVF   1E,W
1890:  SUBLW  14
1892:  BNZ   1898
1894:  CALL   0FE0
....................                  if(contador2==16 )do_proceso2(); 
1898:  MOVF   1D,W
189A:  SUBLW  10
189C:  BNZ   18A2
189E:  CALL   0F88
....................                   contador1++; 
18A2:  INCF   1C,F
....................                   contador2++; 
18A4:  INCF   1D,F
....................  
....................                  } 
18A6:  INCF   1E,F
18A8:  BRA    1676
....................                          } 
....................                          else{ 
18AA:  BRA    1AEA
....................                               for (contador2=1;contador2<=16;contador2++){ 
18AC:  MOVLW  01
18AE:  MOVWF  1D
18B0:  MOVF   1D,W
18B2:  SUBLW  10
18B4:  BTFSS  FD8.0
18B6:  BRA    1AEA
....................                     copia2=contador2; 
18B8:  MOVFF  1D,20
18BC:  CLRF   16
18BE:  BTFSC  FF2.7
18C0:  BSF    16.7
18C2:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
18C4:  MOVFF  6D,93
18C8:  MOVFF  6C,92
18CC:  CLRF   x95
18CE:  MOVFF  1C,94
18D2:  CALL   026C
18D6:  BTFSC  16.7
18D8:  BSF    FF2.7
18DA:  MOVFF  02,86
18DE:  MOVFF  01,85
18E2:  MOVF   02,W
18E4:  SUBWF  67,W
18E6:  BNC   196A
18E8:  BNZ   18F0
18EA:  MOVF   x85,W
18EC:  SUBWF  66,W
18EE:  BNC   196A
....................                       rb2=1; 
18F0:  BSF    F81.2
....................                       rb3=1; 
18F2:  BSF    F81.3
....................                       rb1=1; 
18F4:  BSF    F81.1
....................                       delay_ms(quantum); 
18F6:  MOVFF  6D,85
18FA:  INCF   x85,F
18FC:  DECF   x85,F
18FE:  BTFSC  FD8.2
1900:  BRA    1918
1902:  CLRF   16
1904:  BTFSC  FF2.7
1906:  BSF    16.7
1908:  BCF    FF2.7
190A:  MOVLW  FF
190C:  MOVWF  x94
190E:  CALL   0246
1912:  BTFSC  16.7
1914:  BSF    FF2.7
1916:  BRA    18FC
1918:  CLRF   16
191A:  BTFSC  FF2.7
191C:  BSF    16.7
191E:  BCF    FF2.7
1920:  MOVFF  6C,94
1924:  CALL   0246
1928:  BTFSC  16.7
192A:  BSF    FF2.7
....................                       rb2=0; 
192C:  BCF    F81.2
....................                       rb3=0; 
192E:  BCF    F81.3
....................                       rb1=0; 
1930:  BCF    F81.1
....................                       delay_ms(quantum); 
1932:  MOVFF  6D,85
1936:  INCF   x85,F
1938:  DECF   x85,F
193A:  BTFSC  FD8.2
193C:  BRA    1954
193E:  CLRF   16
1940:  BTFSC  FF2.7
1942:  BSF    16.7
1944:  BCF    FF2.7
1946:  MOVLW  FF
1948:  MOVWF  x94
194A:  CALL   0246
194E:  BTFSC  16.7
1950:  BSF    FF2.7
1952:  BRA    1938
1954:  CLRF   16
1956:  BTFSC  FF2.7
1958:  BSF    16.7
195A:  BCF    FF2.7
195C:  MOVFF  6C,94
1960:  CALL   0246
1964:  BTFSC  16.7
1966:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
1968:  BRA    1AB8
196A:  CLRF   16
196C:  BTFSC  FF2.7
196E:  BSF    16.7
1970:  BCF    FF2.7
....................                     
....................                           if(quantum*contador3<=time3){ 
1972:  MOVFF  6D,93
1976:  MOVFF  6C,92
197A:  CLRF   x95
197C:  MOVFF  1E,94
1980:  CALL   026C
1984:  BTFSC  16.7
1986:  BSF    FF2.7
1988:  MOVFF  02,86
198C:  MOVFF  01,85
1990:  MOVF   02,W
1992:  SUBWF  6B,W
1994:  BNC   1A14
1996:  BNZ   199E
1998:  MOVF   x85,W
199A:  SUBWF  6A,W
199C:  BNC   1A14
....................                                rb2=1; 
199E:  BSF    F81.2
....................                                rb3=1; 
19A0:  BSF    F81.3
....................                                delay_ms(quantum); 
19A2:  MOVFF  6D,85
19A6:  INCF   x85,F
19A8:  DECF   x85,F
19AA:  BTFSC  FD8.2
19AC:  BRA    19C4
19AE:  CLRF   16
19B0:  BTFSC  FF2.7
19B2:  BSF    16.7
19B4:  BCF    FF2.7
19B6:  MOVLW  FF
19B8:  MOVWF  x94
19BA:  CALL   0246
19BE:  BTFSC  16.7
19C0:  BSF    FF2.7
19C2:  BRA    19A8
19C4:  CLRF   16
19C6:  BTFSC  FF2.7
19C8:  BSF    16.7
19CA:  BCF    FF2.7
19CC:  MOVFF  6C,94
19D0:  CALL   0246
19D4:  BTFSC  16.7
19D6:  BSF    FF2.7
....................                                rb2=0; 
19D8:  BCF    F81.2
....................                                rb3=0; 
19DA:  BCF    F81.3
....................                                delay_ms(quantum); 
19DC:  MOVFF  6D,85
19E0:  INCF   x85,F
19E2:  DECF   x85,F
19E4:  BTFSC  FD8.2
19E6:  BRA    19FE
19E8:  CLRF   16
19EA:  BTFSC  FF2.7
19EC:  BSF    16.7
19EE:  BCF    FF2.7
19F0:  MOVLW  FF
19F2:  MOVWF  x94
19F4:  CALL   0246
19F8:  BTFSC  16.7
19FA:  BSF    FF2.7
19FC:  BRA    19E2
19FE:  CLRF   16
1A00:  BTFSC  FF2.7
1A02:  BSF    16.7
1A04:  BCF    FF2.7
1A06:  MOVFF  6C,94
1A0A:  CALL   0246
1A0E:  BTFSC  16.7
1A10:  BSF    FF2.7
....................                                                      }  
....................                              else{ 
1A12:  BRA    1AB8
1A14:  CLRF   16
1A16:  BTFSC  FF2.7
1A18:  BSF    16.7
1A1A:  BCF    FF2.7
....................                                         if(quantum*contador2<=time2){ 
1A1C:  MOVFF  6D,93
1A20:  MOVFF  6C,92
1A24:  CLRF   x95
1A26:  MOVFF  1D,94
1A2A:  CALL   026C
1A2E:  BTFSC  16.7
1A30:  BSF    FF2.7
1A32:  MOVFF  02,86
1A36:  MOVFF  01,85
1A3A:  MOVF   02,W
1A3C:  SUBWF  69,W
1A3E:  BNC   1AB8
1A40:  BNZ   1A48
1A42:  MOVF   x85,W
1A44:  SUBWF  68,W
1A46:  BNC   1AB8
....................                                rb2=1; 
1A48:  BSF    F81.2
....................                                
....................                                delay_ms(quantum); 
1A4A:  MOVFF  6D,85
1A4E:  INCF   x85,F
1A50:  DECF   x85,F
1A52:  BTFSC  FD8.2
1A54:  BRA    1A6C
1A56:  CLRF   16
1A58:  BTFSC  FF2.7
1A5A:  BSF    16.7
1A5C:  BCF    FF2.7
1A5E:  MOVLW  FF
1A60:  MOVWF  x94
1A62:  CALL   0246
1A66:  BTFSC  16.7
1A68:  BSF    FF2.7
1A6A:  BRA    1A50
1A6C:  CLRF   16
1A6E:  BTFSC  FF2.7
1A70:  BSF    16.7
1A72:  BCF    FF2.7
1A74:  MOVFF  6C,94
1A78:  CALL   0246
1A7C:  BTFSC  16.7
1A7E:  BSF    FF2.7
....................                                rb2=0; 
1A80:  BCF    F81.2
....................                                
....................                                delay_ms(quantum); 
1A82:  MOVFF  6D,85
1A86:  INCF   x85,F
1A88:  DECF   x85,F
1A8A:  BTFSC  FD8.2
1A8C:  BRA    1AA4
1A8E:  CLRF   16
1A90:  BTFSC  FF2.7
1A92:  BSF    16.7
1A94:  BCF    FF2.7
1A96:  MOVLW  FF
1A98:  MOVWF  x94
1A9A:  CALL   0246
1A9E:  BTFSC  16.7
1AA0:  BSF    FF2.7
1AA2:  BRA    1A88
1AA4:  CLRF   16
1AA6:  BTFSC  FF2.7
1AA8:  BSF    16.7
1AAA:  BCF    FF2.7
1AAC:  MOVFF  6C,94
1AB0:  CALL   0246
1AB4:  BTFSC  16.7
1AB6:  BSF    FF2.7
....................                                                      }                
....................                                                       
....................                                                      } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
1AB8:  MOVF   1C,W
1ABA:  SUBLW  0A
1ABC:  BNZ   1AC8
1ABE:  MOVF   1F,W
1AC0:  SUBLW  09
1AC2:  BNC   1AC8
1AC4:  CALL   0F30
....................                  if(contador3==20 && copia3<20)do_proceso3(); 
1AC8:  MOVF   1E,W
1ACA:  SUBLW  14
1ACC:  BNZ   1AD8
1ACE:  MOVF   21,W
1AD0:  SUBLW  13
1AD2:  BNC   1AD8
1AD4:  CALL   0FE0
....................                  if(contador2==16 )do_proceso2(); 
1AD8:  MOVF   1D,W
1ADA:  SUBLW  10
1ADC:  BNZ   1AE2
1ADE:  CALL   0F88
....................                   contador1++; 
1AE2:  INCF   1C,F
....................                   contador3++; 
1AE4:  INCF   1E,F
....................  
....................                  } 
1AE6:  INCF   1D,F
1AE8:  BRA    18B0
....................                              } 
....................                   
....................                                        } 
....................               } 
.................... }   
....................           } 
1AEA:  GOTO   3C2C (RETURN)
....................            
.................... //////////////////////////////////////////// 
.................... void do_proceso22(){ 
.................... for (contador2=1;contador2<=16;contador2++){ 
1AEE:  MOVLW  01
1AF0:  MOVWF  1D
1AF2:  MOVF   1D,W
1AF4:  SUBLW  10
1AF6:  BNC   1BBA
....................              copia2=contador2; 
1AF8:  MOVFF  1D,20
1AFC:  CLRF   16
1AFE:  BTFSC  FF2.7
1B00:  BSF    16.7
1B02:  BCF    FF2.7
....................              if(quantum*contador2<time2){ 
1B04:  MOVFF  6D,93
1B08:  MOVFF  6C,92
1B0C:  CLRF   x95
1B0E:  MOVFF  1D,94
1B12:  CALL   026C
1B16:  BTFSC  16.7
1B18:  BSF    FF2.7
1B1A:  MOVFF  02,86
1B1E:  MOVFF  01,85
1B22:  MOVF   02,W
1B24:  SUBWF  69,W
1B26:  BNC   1BA2
1B28:  BNZ   1B30
1B2A:  MOVF   68,W
1B2C:  SUBWF  x85,W
1B2E:  BC    1BA2
....................                 rb2=1; 
1B30:  BSF    F81.2
....................                 delay_ms(quantum); 
1B32:  MOVFF  6D,85
1B36:  INCF   x85,F
1B38:  DECF   x85,F
1B3A:  BTFSC  FD8.2
1B3C:  BRA    1B54
1B3E:  CLRF   16
1B40:  BTFSC  FF2.7
1B42:  BSF    16.7
1B44:  BCF    FF2.7
1B46:  MOVLW  FF
1B48:  MOVWF  x94
1B4A:  CALL   0246
1B4E:  BTFSC  16.7
1B50:  BSF    FF2.7
1B52:  BRA    1B38
1B54:  CLRF   16
1B56:  BTFSC  FF2.7
1B58:  BSF    16.7
1B5A:  BCF    FF2.7
1B5C:  MOVFF  6C,94
1B60:  CALL   0246
1B64:  BTFSC  16.7
1B66:  BSF    FF2.7
....................                 rb2=0; 
1B68:  BCF    F81.2
....................                 delay_ms(quantum); 
1B6A:  MOVFF  6D,85
1B6E:  INCF   x85,F
1B70:  DECF   x85,F
1B72:  BTFSC  FD8.2
1B74:  BRA    1B8C
1B76:  CLRF   16
1B78:  BTFSC  FF2.7
1B7A:  BSF    16.7
1B7C:  BCF    FF2.7
1B7E:  MOVLW  FF
1B80:  MOVWF  x94
1B82:  CALL   0246
1B86:  BTFSC  16.7
1B88:  BSF    FF2.7
1B8A:  BRA    1B70
1B8C:  CLRF   16
1B8E:  BTFSC  FF2.7
1B90:  BSF    16.7
1B92:  BCF    FF2.7
1B94:  MOVFF  6C,94
1B98:  CALL   0246
1B9C:  BTFSC  16.7
1B9E:  BSF    FF2.7
....................                                         } 
....................              else { 
1BA0:  BRA    1BA6
....................                     do_proceso2(); 
1BA2:  CALL   0F88
....................                    }   
....................              if(tecla_pulsada=='1'){ 
1BA6:  MOVF   1A,W
1BA8:  SUBLW  31
1BAA:  BNZ   1BAE
....................                    break; 
1BAC:  BRA    1BBA
....................                   } 
....................              if(tecla_pulsada=='3'){ 
1BAE:  MOVF   1A,W
1BB0:  SUBLW  33
1BB2:  BNZ   1BB6
....................                    break; 
1BB4:  BRA    1BBA
....................                   } 
....................          } 
1BB6:  INCF   1D,F
1BB8:  BRA    1AF2
....................   
....................      if(tecla_pulsada=='1'){ 
1BBA:  MOVF   1A,W
1BBC:  SUBLW  31
1BBE:  BTFSS  FD8.2
1BC0:  BRA    21D4
....................                if(copia2<=6){ 
1BC2:  MOVF   20,W
1BC4:  SUBLW  06
1BC6:  BTFSS  FD8.0
1BC8:  BRA    1D52
....................                for (contador2=copia2;contador2<=16;contador2++){ 
1BCA:  MOVFF  20,1D
1BCE:  MOVF   1D,W
1BD0:  SUBLW  10
1BD2:  BTFSS  FD8.0
1BD4:  BRA    1D50
....................                     copia2=contador2; 
1BD6:  MOVFF  1D,20
1BDA:  CLRF   16
1BDC:  BTFSC  FF2.7
1BDE:  BSF    16.7
1BE0:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
1BE2:  MOVFF  6D,93
1BE6:  MOVFF  6C,92
1BEA:  CLRF   x95
1BEC:  MOVFF  1C,94
1BF0:  CALL   026C
1BF4:  BTFSC  16.7
1BF6:  BSF    FF2.7
1BF8:  MOVFF  02,86
1BFC:  MOVFF  01,85
1C00:  MOVF   02,W
1C02:  SUBWF  67,W
1C04:  BNC   1C84
1C06:  BNZ   1C0E
1C08:  MOVF   x85,W
1C0A:  SUBWF  66,W
1C0C:  BNC   1C84
....................                       rb2=1; 
1C0E:  BSF    F81.2
....................                       rb1=1; 
1C10:  BSF    F81.1
....................                       delay_ms(quantum); 
1C12:  MOVFF  6D,85
1C16:  INCF   x85,F
1C18:  DECF   x85,F
1C1A:  BTFSC  FD8.2
1C1C:  BRA    1C34
1C1E:  CLRF   16
1C20:  BTFSC  FF2.7
1C22:  BSF    16.7
1C24:  BCF    FF2.7
1C26:  MOVLW  FF
1C28:  MOVWF  x94
1C2A:  CALL   0246
1C2E:  BTFSC  16.7
1C30:  BSF    FF2.7
1C32:  BRA    1C18
1C34:  CLRF   16
1C36:  BTFSC  FF2.7
1C38:  BSF    16.7
1C3A:  BCF    FF2.7
1C3C:  MOVFF  6C,94
1C40:  CALL   0246
1C44:  BTFSC  16.7
1C46:  BSF    FF2.7
....................                       rb1=0; 
1C48:  BCF    F81.1
....................                       rb2=0; 
1C4A:  BCF    F81.2
....................                       delay_ms(quantum); 
1C4C:  MOVFF  6D,85
1C50:  INCF   x85,F
1C52:  DECF   x85,F
1C54:  BTFSC  FD8.2
1C56:  BRA    1C6E
1C58:  CLRF   16
1C5A:  BTFSC  FF2.7
1C5C:  BSF    16.7
1C5E:  BCF    FF2.7
1C60:  MOVLW  FF
1C62:  MOVWF  x94
1C64:  CALL   0246
1C68:  BTFSC  16.7
1C6A:  BSF    FF2.7
1C6C:  BRA    1C52
1C6E:  CLRF   16
1C70:  BTFSC  FF2.7
1C72:  BSF    16.7
1C74:  BCF    FF2.7
1C76:  MOVFF  6C,94
1C7A:  CALL   0246
1C7E:  BTFSC  16.7
1C80:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
1C82:  BRA    1D28
1C84:  CLRF   16
1C86:  BTFSC  FF2.7
1C88:  BSF    16.7
1C8A:  BCF    FF2.7
....................  
....................                           if(quantum*contador2<time2){ 
1C8C:  MOVFF  6D,93
1C90:  MOVFF  6C,92
1C94:  CLRF   x95
1C96:  MOVFF  1D,94
1C9A:  CALL   026C
1C9E:  BTFSC  16.7
1CA0:  BSF    FF2.7
1CA2:  MOVFF  02,86
1CA6:  MOVFF  01,85
1CAA:  MOVF   02,W
1CAC:  SUBWF  69,W
1CAE:  BNC   1D28
1CB0:  BNZ   1CB8
1CB2:  MOVF   68,W
1CB4:  SUBWF  x85,W
1CB6:  BC    1D28
....................                                rb2=1; 
1CB8:  BSF    F81.2
....................                                delay_ms(quantum); 
1CBA:  MOVFF  6D,85
1CBE:  INCF   x85,F
1CC0:  DECF   x85,F
1CC2:  BTFSC  FD8.2
1CC4:  BRA    1CDC
1CC6:  CLRF   16
1CC8:  BTFSC  FF2.7
1CCA:  BSF    16.7
1CCC:  BCF    FF2.7
1CCE:  MOVLW  FF
1CD0:  MOVWF  x94
1CD2:  CALL   0246
1CD6:  BTFSC  16.7
1CD8:  BSF    FF2.7
1CDA:  BRA    1CC0
1CDC:  CLRF   16
1CDE:  BTFSC  FF2.7
1CE0:  BSF    16.7
1CE2:  BCF    FF2.7
1CE4:  MOVFF  6C,94
1CE8:  CALL   0246
1CEC:  BTFSC  16.7
1CEE:  BSF    FF2.7
....................                                rb2=0; 
1CF0:  BCF    F81.2
....................                                delay_ms(quantum); 
1CF2:  MOVFF  6D,85
1CF6:  INCF   x85,F
1CF8:  DECF   x85,F
1CFA:  BTFSC  FD8.2
1CFC:  BRA    1D14
1CFE:  CLRF   16
1D00:  BTFSC  FF2.7
1D02:  BSF    16.7
1D04:  BCF    FF2.7
1D06:  MOVLW  FF
1D08:  MOVWF  x94
1D0A:  CALL   0246
1D0E:  BTFSC  16.7
1D10:  BSF    FF2.7
1D12:  BRA    1CF8
1D14:  CLRF   16
1D16:  BTFSC  FF2.7
1D18:  BSF    16.7
1D1A:  BCF    FF2.7
1D1C:  MOVFF  6C,94
1D20:  CALL   0246
1D24:  BTFSC  16.7
1D26:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
1D28:  MOVF   1C,W
1D2A:  SUBLW  0A
1D2C:  BNZ   1D38
1D2E:  MOVF   1F,W
1D30:  SUBLW  09
1D32:  BNC   1D38
1D34:  CALL   0F30
....................                  if(contador2==16 ) do_proceso2(); 
1D38:  MOVF   1D,W
1D3A:  SUBLW  10
1D3C:  BNZ   1D42
1D3E:  CALL   0F88
....................           
....................                  if(tecla_pulsada=='3'){ 
1D42:  MOVF   1A,W
1D44:  SUBLW  33
1D46:  BNZ   1D4A
....................                       break; 
1D48:  BRA    1D50
....................                   } 
....................                
....................                   contador1++; 
1D4A:  INCF   1C,F
....................                    
....................               } 
1D4C:  INCF   1D,F
1D4E:  BRA    1BCE
....................              } 
....................                        else{ 
1D50:  BRA    1EDE
....................                         for (contador1=1;contador1<=10;contador1++){ 
1D52:  MOVLW  01
1D54:  MOVWF  1C
1D56:  MOVF   1C,W
1D58:  SUBLW  0A
1D5A:  BTFSS  FD8.0
1D5C:  BRA    1EDE
....................                     copia1=contador1; 
1D5E:  MOVFF  1C,1F
1D62:  CLRF   16
1D64:  BTFSC  FF2.7
1D66:  BSF    16.7
1D68:  BCF    FF2.7
....................                     if(quantum*contador2<=time2){ 
1D6A:  MOVFF  6D,93
1D6E:  MOVFF  6C,92
1D72:  CLRF   x95
1D74:  MOVFF  1D,94
1D78:  CALL   026C
1D7C:  BTFSC  16.7
1D7E:  BSF    FF2.7
1D80:  MOVFF  02,86
1D84:  MOVFF  01,85
1D88:  MOVF   02,W
1D8A:  SUBWF  69,W
1D8C:  BNC   1E0C
1D8E:  BNZ   1D96
1D90:  MOVF   x85,W
1D92:  SUBWF  68,W
1D94:  BNC   1E0C
....................                       rb2=1; 
1D96:  BSF    F81.2
....................                       rb1=1; 
1D98:  BSF    F81.1
....................                       delay_ms(quantum); 
1D9A:  MOVFF  6D,85
1D9E:  INCF   x85,F
1DA0:  DECF   x85,F
1DA2:  BTFSC  FD8.2
1DA4:  BRA    1DBC
1DA6:  CLRF   16
1DA8:  BTFSC  FF2.7
1DAA:  BSF    16.7
1DAC:  BCF    FF2.7
1DAE:  MOVLW  FF
1DB0:  MOVWF  x94
1DB2:  CALL   0246
1DB6:  BTFSC  16.7
1DB8:  BSF    FF2.7
1DBA:  BRA    1DA0
1DBC:  CLRF   16
1DBE:  BTFSC  FF2.7
1DC0:  BSF    16.7
1DC2:  BCF    FF2.7
1DC4:  MOVFF  6C,94
1DC8:  CALL   0246
1DCC:  BTFSC  16.7
1DCE:  BSF    FF2.7
....................                       rb1=0; 
1DD0:  BCF    F81.1
....................                       rb2=0; 
1DD2:  BCF    F81.2
....................                       delay_ms(quantum); 
1DD4:  MOVFF  6D,85
1DD8:  INCF   x85,F
1DDA:  DECF   x85,F
1DDC:  BTFSC  FD8.2
1DDE:  BRA    1DF6
1DE0:  CLRF   16
1DE2:  BTFSC  FF2.7
1DE4:  BSF    16.7
1DE6:  BCF    FF2.7
1DE8:  MOVLW  FF
1DEA:  MOVWF  x94
1DEC:  CALL   0246
1DF0:  BTFSC  16.7
1DF2:  BSF    FF2.7
1DF4:  BRA    1DDA
1DF6:  CLRF   16
1DF8:  BTFSC  FF2.7
1DFA:  BSF    16.7
1DFC:  BCF    FF2.7
1DFE:  MOVFF  6C,94
1E02:  CALL   0246
1E06:  BTFSC  16.7
1E08:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
1E0A:  BRA    1EB0
1E0C:  CLRF   16
1E0E:  BTFSC  FF2.7
1E10:  BSF    16.7
1E12:  BCF    FF2.7
....................  
....................                           if(quantum*contador1<time1){ 
1E14:  MOVFF  6D,93
1E18:  MOVFF  6C,92
1E1C:  CLRF   x95
1E1E:  MOVFF  1C,94
1E22:  CALL   026C
1E26:  BTFSC  16.7
1E28:  BSF    FF2.7
1E2A:  MOVFF  02,86
1E2E:  MOVFF  01,85
1E32:  MOVF   02,W
1E34:  SUBWF  67,W
1E36:  BNC   1EB0
1E38:  BNZ   1E40
1E3A:  MOVF   66,W
1E3C:  SUBWF  x85,W
1E3E:  BC    1EB0
....................                                rb1=1; 
1E40:  BSF    F81.1
....................                                delay_ms(quantum); 
1E42:  MOVFF  6D,85
1E46:  INCF   x85,F
1E48:  DECF   x85,F
1E4A:  BTFSC  FD8.2
1E4C:  BRA    1E64
1E4E:  CLRF   16
1E50:  BTFSC  FF2.7
1E52:  BSF    16.7
1E54:  BCF    FF2.7
1E56:  MOVLW  FF
1E58:  MOVWF  x94
1E5A:  CALL   0246
1E5E:  BTFSC  16.7
1E60:  BSF    FF2.7
1E62:  BRA    1E48
1E64:  CLRF   16
1E66:  BTFSC  FF2.7
1E68:  BSF    16.7
1E6A:  BCF    FF2.7
1E6C:  MOVFF  6C,94
1E70:  CALL   0246
1E74:  BTFSC  16.7
1E76:  BSF    FF2.7
....................                                rb1=0; 
1E78:  BCF    F81.1
....................                                delay_ms(quantum); 
1E7A:  MOVFF  6D,85
1E7E:  INCF   x85,F
1E80:  DECF   x85,F
1E82:  BTFSC  FD8.2
1E84:  BRA    1E9C
1E86:  CLRF   16
1E88:  BTFSC  FF2.7
1E8A:  BSF    16.7
1E8C:  BCF    FF2.7
1E8E:  MOVLW  FF
1E90:  MOVWF  x94
1E92:  CALL   0246
1E96:  BTFSC  16.7
1E98:  BSF    FF2.7
1E9A:  BRA    1E80
1E9C:  CLRF   16
1E9E:  BTFSC  FF2.7
1EA0:  BSF    16.7
1EA2:  BCF    FF2.7
1EA4:  MOVFF  6C,94
1EA8:  CALL   0246
1EAC:  BTFSC  16.7
1EAE:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
1EB0:  MOVF   1C,W
1EB2:  SUBLW  0A
1EB4:  BNZ   1EC0
1EB6:  MOVF   1F,W
1EB8:  SUBLW  09
1EBA:  BNC   1EC0
1EBC:  CALL   0F30
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
1EC0:  MOVF   1D,W
1EC2:  SUBLW  10
1EC4:  BNZ   1ED0
1EC6:  MOVF   20,W
1EC8:  SUBLW  0F
1ECA:  BNC   1ED0
1ECC:  CALL   0F88
....................           
....................                  if(tecla_pulsada=='3'){ 
1ED0:  MOVF   1A,W
1ED2:  SUBLW  33
1ED4:  BNZ   1ED8
....................                       break; 
1ED6:  BRA    1EDE
....................                   } 
....................                
....................                   contador2++; 
1ED8:  INCF   1D,F
....................                    
....................               } 
1EDA:  INCF   1C,F
1EDC:  BRA    1D56
....................                         
....................                         
....................           } 
....................               if(tecla_pulsada=='3'){ 
1EDE:  MOVF   1A,W
1EE0:  SUBLW  33
1EE2:  BTFSS  FD8.2
1EE4:  BRA    21D2
....................                       for (contador3=1;contador3<=20;contador3++){ 
1EE6:  MOVLW  01
1EE8:  MOVWF  1E
1EEA:  MOVF   1E,W
1EEC:  SUBLW  14
1EEE:  BTFSS  FD8.0
1EF0:  BRA    21D2
....................                            copia3=contador3; 
1EF2:  MOVFF  1E,21
1EF6:  CLRF   16
1EF8:  BTFSC  FF2.7
1EFA:  BSF    16.7
1EFC:  BCF    FF2.7
....................                            if(quantum*contador1<time1){ 
1EFE:  MOVFF  6D,93
1F02:  MOVFF  6C,92
1F06:  CLRF   x95
1F08:  MOVFF  1C,94
1F0C:  CALL   026C
1F10:  BTFSC  16.7
1F12:  BSF    FF2.7
1F14:  MOVFF  02,86
1F18:  MOVFF  01,85
1F1C:  MOVF   02,W
1F1E:  SUBWF  67,W
1F20:  BTFSS  FD8.0
1F22:  BRA    2052
1F24:  BNZ   1F2E
1F26:  MOVF   66,W
1F28:  SUBWF  x85,W
1F2A:  BTFSC  FD8.0
1F2C:  BRA    2052
1F2E:  CLRF   16
1F30:  BTFSC  FF2.7
1F32:  BSF    16.7
1F34:  BCF    FF2.7
....................                            if(quantum*contador2<=time2){ 
1F36:  MOVFF  6D,93
1F3A:  MOVFF  6C,92
1F3E:  CLRF   x95
1F40:  MOVFF  1D,94
1F44:  CALL   026C
1F48:  BTFSC  16.7
1F4A:  BSF    FF2.7
1F4C:  MOVFF  02,86
1F50:  MOVFF  01,85
1F54:  MOVF   02,W
1F56:  SUBWF  69,W
1F58:  BNC   1FDC
1F5A:  BNZ   1F62
1F5C:  MOVF   x85,W
1F5E:  SUBWF  68,W
1F60:  BNC   1FDC
....................                              rb2=1; 
1F62:  BSF    F81.2
....................                              rb3=1; 
1F64:  BSF    F81.3
....................                              rb1=1; 
1F66:  BSF    F81.1
....................                              delay_ms(quantum); 
1F68:  MOVFF  6D,85
1F6C:  INCF   x85,F
1F6E:  DECF   x85,F
1F70:  BTFSC  FD8.2
1F72:  BRA    1F8A
1F74:  CLRF   16
1F76:  BTFSC  FF2.7
1F78:  BSF    16.7
1F7A:  BCF    FF2.7
1F7C:  MOVLW  FF
1F7E:  MOVWF  x94
1F80:  CALL   0246
1F84:  BTFSC  16.7
1F86:  BSF    FF2.7
1F88:  BRA    1F6E
1F8A:  CLRF   16
1F8C:  BTFSC  FF2.7
1F8E:  BSF    16.7
1F90:  BCF    FF2.7
1F92:  MOVFF  6C,94
1F96:  CALL   0246
1F9A:  BTFSC  16.7
1F9C:  BSF    FF2.7
....................                              rb2=0; 
1F9E:  BCF    F81.2
....................                              rb3=0; 
1FA0:  BCF    F81.3
....................                              rb1=0; 
1FA2:  BCF    F81.1
....................                              delay_ms(quantum); 
1FA4:  MOVFF  6D,85
1FA8:  INCF   x85,F
1FAA:  DECF   x85,F
1FAC:  BTFSC  FD8.2
1FAE:  BRA    1FC6
1FB0:  CLRF   16
1FB2:  BTFSC  FF2.7
1FB4:  BSF    16.7
1FB6:  BCF    FF2.7
1FB8:  MOVLW  FF
1FBA:  MOVWF  x94
1FBC:  CALL   0246
1FC0:  BTFSC  16.7
1FC2:  BSF    FF2.7
1FC4:  BRA    1FAA
1FC6:  CLRF   16
1FC8:  BTFSC  FF2.7
1FCA:  BSF    16.7
1FCC:  BCF    FF2.7
1FCE:  MOVFF  6C,94
1FD2:  CALL   0246
1FD6:  BTFSC  16.7
1FD8:  BSF    FF2.7
....................                           } 
....................                           else{    
1FDA:  BRA    2050
....................                              rb3=1; 
1FDC:  BSF    F81.3
....................                              rb1=1; 
1FDE:  BSF    F81.1
....................                              delay_ms(quantum); 
1FE0:  MOVFF  6D,85
1FE4:  INCF   x85,F
1FE6:  DECF   x85,F
1FE8:  BTFSC  FD8.2
1FEA:  BRA    2002
1FEC:  CLRF   16
1FEE:  BTFSC  FF2.7
1FF0:  BSF    16.7
1FF2:  BCF    FF2.7
1FF4:  MOVLW  FF
1FF6:  MOVWF  x94
1FF8:  CALL   0246
1FFC:  BTFSC  16.7
1FFE:  BSF    FF2.7
2000:  BRA    1FE6
2002:  CLRF   16
2004:  BTFSC  FF2.7
2006:  BSF    16.7
2008:  BCF    FF2.7
200A:  MOVFF  6C,94
200E:  CALL   0246
2012:  BTFSC  16.7
2014:  BSF    FF2.7
....................                              rb3=0; 
2016:  BCF    F81.3
....................                              rb1=0; 
2018:  BCF    F81.1
....................                              delay_ms(quantum); 
201A:  MOVFF  6D,85
201E:  INCF   x85,F
2020:  DECF   x85,F
2022:  BTFSC  FD8.2
2024:  BRA    203C
2026:  CLRF   16
2028:  BTFSC  FF2.7
202A:  BSF    16.7
202C:  BCF    FF2.7
202E:  MOVLW  FF
2030:  MOVWF  x94
2032:  CALL   0246
2036:  BTFSC  16.7
2038:  BSF    FF2.7
203A:  BRA    2020
203C:  CLRF   16
203E:  BTFSC  FF2.7
2040:  BSF    16.7
2042:  BCF    FF2.7
2044:  MOVFF  6C,94
2048:  CALL   0246
204C:  BTFSC  16.7
204E:  BSF    FF2.7
....................                           } 
....................                                                }                                              
....................                    else  { 
2050:  BRA    21A0
2052:  CLRF   16
2054:  BTFSC  FF2.7
2056:  BSF    16.7
2058:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<time2){ 
205A:  MOVFF  6D,93
205E:  MOVFF  6C,92
2062:  CLRF   x95
2064:  MOVFF  1D,94
2068:  CALL   026C
206C:  BTFSC  16.7
206E:  BSF    FF2.7
2070:  MOVFF  02,86
2074:  MOVFF  01,85
2078:  MOVF   02,W
207A:  SUBWF  69,W
207C:  BNC   20FC
207E:  BNZ   2086
2080:  MOVF   68,W
2082:  SUBWF  x85,W
2084:  BC    20FC
....................                                rb3=1; 
2086:  BSF    F81.3
....................                                rb2=1; 
2088:  BSF    F81.2
....................                                delay_ms(quantum); 
208A:  MOVFF  6D,85
208E:  INCF   x85,F
2090:  DECF   x85,F
2092:  BTFSC  FD8.2
2094:  BRA    20AC
2096:  CLRF   16
2098:  BTFSC  FF2.7
209A:  BSF    16.7
209C:  BCF    FF2.7
209E:  MOVLW  FF
20A0:  MOVWF  x94
20A2:  CALL   0246
20A6:  BTFSC  16.7
20A8:  BSF    FF2.7
20AA:  BRA    2090
20AC:  CLRF   16
20AE:  BTFSC  FF2.7
20B0:  BSF    16.7
20B2:  BCF    FF2.7
20B4:  MOVFF  6C,94
20B8:  CALL   0246
20BC:  BTFSC  16.7
20BE:  BSF    FF2.7
....................                                rb3=0; 
20C0:  BCF    F81.3
....................                                rb2=0; 
20C2:  BCF    F81.2
....................                                delay_ms(quantum); 
20C4:  MOVFF  6D,85
20C8:  INCF   x85,F
20CA:  DECF   x85,F
20CC:  BTFSC  FD8.2
20CE:  BRA    20E6
20D0:  CLRF   16
20D2:  BTFSC  FF2.7
20D4:  BSF    16.7
20D6:  BCF    FF2.7
20D8:  MOVLW  FF
20DA:  MOVWF  x94
20DC:  CALL   0246
20E0:  BTFSC  16.7
20E2:  BSF    FF2.7
20E4:  BRA    20CA
20E6:  CLRF   16
20E8:  BTFSC  FF2.7
20EA:  BSF    16.7
20EC:  BCF    FF2.7
20EE:  MOVFF  6C,94
20F2:  CALL   0246
20F6:  BTFSC  16.7
20F8:  BSF    FF2.7
....................                                                     }  
....................                      else{ 
20FA:  BRA    21A0
20FC:  CLRF   16
20FE:  BTFSC  FF2.7
2100:  BSF    16.7
2102:  BCF    FF2.7
....................                          if(quantum*contador3<time3){ 
2104:  MOVFF  6D,93
2108:  MOVFF  6C,92
210C:  CLRF   x95
210E:  MOVFF  1E,94
2112:  CALL   026C
2116:  BTFSC  16.7
2118:  BSF    FF2.7
211A:  MOVFF  02,86
211E:  MOVFF  01,85
2122:  MOVF   02,W
2124:  SUBWF  6B,W
2126:  BNC   21A0
2128:  BNZ   2130
212A:  MOVF   6A,W
212C:  SUBWF  x85,W
212E:  BC    21A0
....................                                rb3=1; 
2130:  BSF    F81.3
....................                                delay_ms(quantum); 
2132:  MOVFF  6D,85
2136:  INCF   x85,F
2138:  DECF   x85,F
213A:  BTFSC  FD8.2
213C:  BRA    2154
213E:  CLRF   16
2140:  BTFSC  FF2.7
2142:  BSF    16.7
2144:  BCF    FF2.7
2146:  MOVLW  FF
2148:  MOVWF  x94
214A:  CALL   0246
214E:  BTFSC  16.7
2150:  BSF    FF2.7
2152:  BRA    2138
2154:  CLRF   16
2156:  BTFSC  FF2.7
2158:  BSF    16.7
215A:  BCF    FF2.7
215C:  MOVFF  6C,94
2160:  CALL   0246
2164:  BTFSC  16.7
2166:  BSF    FF2.7
....................                                rb3=0; 
2168:  BCF    F81.3
....................                                delay_ms(quantum); 
216A:  MOVFF  6D,85
216E:  INCF   x85,F
2170:  DECF   x85,F
2172:  BTFSC  FD8.2
2174:  BRA    218C
2176:  CLRF   16
2178:  BTFSC  FF2.7
217A:  BSF    16.7
217C:  BCF    FF2.7
217E:  MOVLW  FF
2180:  MOVWF  x94
2182:  CALL   0246
2186:  BTFSC  16.7
2188:  BSF    FF2.7
218A:  BRA    2170
218C:  CLRF   16
218E:  BTFSC  FF2.7
2190:  BSF    16.7
2192:  BCF    FF2.7
2194:  MOVFF  6C,94
2198:  CALL   0246
219C:  BTFSC  16.7
219E:  BSF    FF2.7
....................                                                      }  
....................                            } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1();                 
21A0:  MOVF   1C,W
21A2:  SUBLW  0A
21A4:  BNZ   21B0
21A6:  MOVF   1F,W
21A8:  SUBLW  09
21AA:  BNC   21B0
21AC:  CALL   0F30
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
21B0:  MOVF   1D,W
21B2:  SUBLW  10
21B4:  BNZ   21C0
21B6:  MOVF   20,W
21B8:  SUBLW  0F
21BA:  BNC   21C0
21BC:  CALL   0F88
....................                  if(contador3==20 )do_proceso3(); 
21C0:  MOVF   1E,W
21C2:  SUBLW  14
21C4:  BNZ   21CA
21C6:  CALL   0FE0
....................  
....................                   contador1++; 
21CA:  INCF   1C,F
....................                   contador2++; 
21CC:  INCF   1D,F
....................                  
....................               }                                   
21CE:  INCF   1E,F
21D0:  BRA    1EEA
....................          }       
....................      }   
....................      //       
....................          else{ 
21D2:  BRA    259C
....................           if(tecla_pulsada=='3'){ 
21D4:  MOVF   1A,W
21D6:  SUBLW  33
21D8:  BTFSS  FD8.2
21DA:  BRA    259C
....................                for (contador3=1;contador3<=20;contador3++){ 
21DC:  MOVLW  01
21DE:  MOVWF  1E
21E0:  MOVF   1E,W
21E2:  SUBLW  14
21E4:  BTFSS  FD8.0
21E6:  BRA    2362
....................                     copia3=contador3; 
21E8:  MOVFF  1E,21
21EC:  CLRF   16
21EE:  BTFSC  FF2.7
21F0:  BSF    16.7
21F2:  BCF    FF2.7
....................                     if(quantum*contador2<time2){ 
21F4:  MOVFF  6D,93
21F8:  MOVFF  6C,92
21FC:  CLRF   x95
21FE:  MOVFF  1D,94
2202:  CALL   026C
2206:  BTFSC  16.7
2208:  BSF    FF2.7
220A:  MOVFF  02,86
220E:  MOVFF  01,85
2212:  MOVF   02,W
2214:  SUBWF  69,W
2216:  BNC   2296
2218:  BNZ   2220
221A:  MOVF   68,W
221C:  SUBWF  x85,W
221E:  BC    2296
....................                       rb3=1; 
2220:  BSF    F81.3
....................                       rb2=1; 
2222:  BSF    F81.2
....................                       delay_ms(quantum); 
2224:  MOVFF  6D,85
2228:  INCF   x85,F
222A:  DECF   x85,F
222C:  BTFSC  FD8.2
222E:  BRA    2246
2230:  CLRF   16
2232:  BTFSC  FF2.7
2234:  BSF    16.7
2236:  BCF    FF2.7
2238:  MOVLW  FF
223A:  MOVWF  x94
223C:  CALL   0246
2240:  BTFSC  16.7
2242:  BSF    FF2.7
2244:  BRA    222A
2246:  CLRF   16
2248:  BTFSC  FF2.7
224A:  BSF    16.7
224C:  BCF    FF2.7
224E:  MOVFF  6C,94
2252:  CALL   0246
2256:  BTFSC  16.7
2258:  BSF    FF2.7
....................                       rb3=0; 
225A:  BCF    F81.3
....................                       rb2=0; 
225C:  BCF    F81.2
....................                       delay_ms(quantum); 
225E:  MOVFF  6D,85
2262:  INCF   x85,F
2264:  DECF   x85,F
2266:  BTFSC  FD8.2
2268:  BRA    2280
226A:  CLRF   16
226C:  BTFSC  FF2.7
226E:  BSF    16.7
2270:  BCF    FF2.7
2272:  MOVLW  FF
2274:  MOVWF  x94
2276:  CALL   0246
227A:  BTFSC  16.7
227C:  BSF    FF2.7
227E:  BRA    2264
2280:  CLRF   16
2282:  BTFSC  FF2.7
2284:  BSF    16.7
2286:  BCF    FF2.7
2288:  MOVFF  6C,94
228C:  CALL   0246
2290:  BTFSC  16.7
2292:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
2294:  BRA    233A
2296:  CLRF   16
2298:  BTFSC  FF2.7
229A:  BSF    16.7
229C:  BCF    FF2.7
....................                     
....................                           if(quantum*contador3<=time3){ 
229E:  MOVFF  6D,93
22A2:  MOVFF  6C,92
22A6:  CLRF   x95
22A8:  MOVFF  1E,94
22AC:  CALL   026C
22B0:  BTFSC  16.7
22B2:  BSF    FF2.7
22B4:  MOVFF  02,86
22B8:  MOVFF  01,85
22BC:  MOVF   02,W
22BE:  SUBWF  6B,W
22C0:  BNC   233A
22C2:  BNZ   22CA
22C4:  MOVF   x85,W
22C6:  SUBWF  6A,W
22C8:  BNC   233A
....................                                rb3=1; 
22CA:  BSF    F81.3
....................                                delay_ms(quantum); 
22CC:  MOVFF  6D,85
22D0:  INCF   x85,F
22D2:  DECF   x85,F
22D4:  BTFSC  FD8.2
22D6:  BRA    22EE
22D8:  CLRF   16
22DA:  BTFSC  FF2.7
22DC:  BSF    16.7
22DE:  BCF    FF2.7
22E0:  MOVLW  FF
22E2:  MOVWF  x94
22E4:  CALL   0246
22E8:  BTFSC  16.7
22EA:  BSF    FF2.7
22EC:  BRA    22D2
22EE:  CLRF   16
22F0:  BTFSC  FF2.7
22F2:  BSF    16.7
22F4:  BCF    FF2.7
22F6:  MOVFF  6C,94
22FA:  CALL   0246
22FE:  BTFSC  16.7
2300:  BSF    FF2.7
....................                                rb3=0; 
2302:  BCF    F81.3
....................                                delay_ms(quantum); 
2304:  MOVFF  6D,85
2308:  INCF   x85,F
230A:  DECF   x85,F
230C:  BTFSC  FD8.2
230E:  BRA    2326
2310:  CLRF   16
2312:  BTFSC  FF2.7
2314:  BSF    16.7
2316:  BCF    FF2.7
2318:  MOVLW  FF
231A:  MOVWF  x94
231C:  CALL   0246
2320:  BTFSC  16.7
2322:  BSF    FF2.7
2324:  BRA    230A
2326:  CLRF   16
2328:  BTFSC  FF2.7
232A:  BSF    16.7
232C:  BCF    FF2.7
232E:  MOVFF  6C,94
2332:  CALL   0246
2336:  BTFSC  16.7
2338:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
233A:  MOVF   1D,W
233C:  SUBLW  10
233E:  BNZ   234A
2340:  MOVF   20,W
2342:  SUBLW  0F
2344:  BNC   234A
2346:  CALL   0F88
....................                  if(contador3==20 )do_proceso3(); 
234A:  MOVF   1E,W
234C:  SUBLW  14
234E:  BNZ   2354
2350:  CALL   0FE0
....................                   
....................                  if(tecla_pulsada=='1'){ 
2354:  MOVF   1A,W
2356:  SUBLW  31
2358:  BNZ   235C
....................                       break; 
235A:  BRA    2362
....................                   } 
....................                   contador2++; 
235C:  INCF   1D,F
....................  
....................                  } 
235E:  INCF   1E,F
2360:  BRA    21E0
....................                  if(tecla_pulsada=='1'){ 
2362:  MOVF   1A,W
2364:  SUBLW  31
2366:  BTFSS  FD8.2
2368:  BRA    259C
....................                           
....................                          for (contador3=copia3;contador3<=20;contador3++){ 
236A:  MOVFF  21,1E
236E:  MOVF   1E,W
2370:  SUBLW  14
2372:  BTFSS  FD8.0
2374:  BRA    259C
....................                               copia3=contador3; 
2376:  MOVFF  1E,21
237A:  CLRF   16
237C:  BTFSC  FF2.7
237E:  BSF    16.7
2380:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
2382:  MOVFF  6D,93
2386:  MOVFF  6C,92
238A:  CLRF   x95
238C:  MOVFF  1C,94
2390:  CALL   026C
2394:  BTFSC  16.7
2396:  BSF    FF2.7
2398:  MOVFF  02,86
239C:  MOVFF  01,85
23A0:  MOVF   02,W
23A2:  SUBWF  67,W
23A4:  BNC   2428
23A6:  BNZ   23AE
23A8:  MOVF   x85,W
23AA:  SUBWF  66,W
23AC:  BNC   2428
....................                            
....................                              rb2=1; 
23AE:  BSF    F81.2
....................                              rb3=1; 
23B0:  BSF    F81.3
....................                              rb1=1; 
23B2:  BSF    F81.1
....................                              delay_ms(quantum); 
23B4:  MOVFF  6D,85
23B8:  INCF   x85,F
23BA:  DECF   x85,F
23BC:  BTFSC  FD8.2
23BE:  BRA    23D6
23C0:  CLRF   16
23C2:  BTFSC  FF2.7
23C4:  BSF    16.7
23C6:  BCF    FF2.7
23C8:  MOVLW  FF
23CA:  MOVWF  x94
23CC:  CALL   0246
23D0:  BTFSC  16.7
23D2:  BSF    FF2.7
23D4:  BRA    23BA
23D6:  CLRF   16
23D8:  BTFSC  FF2.7
23DA:  BSF    16.7
23DC:  BCF    FF2.7
23DE:  MOVFF  6C,94
23E2:  CALL   0246
23E6:  BTFSC  16.7
23E8:  BSF    FF2.7
....................                              rb2=0; 
23EA:  BCF    F81.2
....................                              rb3=0; 
23EC:  BCF    F81.3
....................                              rb1=0; 
23EE:  BCF    F81.1
....................                              delay_ms(quantum); 
23F0:  MOVFF  6D,85
23F4:  INCF   x85,F
23F6:  DECF   x85,F
23F8:  BTFSC  FD8.2
23FA:  BRA    2412
23FC:  CLRF   16
23FE:  BTFSC  FF2.7
2400:  BSF    16.7
2402:  BCF    FF2.7
2404:  MOVLW  FF
2406:  MOVWF  x94
2408:  CALL   0246
240C:  BTFSC  16.7
240E:  BSF    FF2.7
2410:  BRA    23F6
2412:  CLRF   16
2414:  BTFSC  FF2.7
2416:  BSF    16.7
2418:  BCF    FF2.7
241A:  MOVFF  6C,94
241E:  CALL   0246
2422:  BTFSC  16.7
2424:  BSF    FF2.7
....................                           
....................                                                } 
....................                                                 
....................                    else  { 
2426:  BRA    2576
2428:  CLRF   16
242A:  BTFSC  FF2.7
242C:  BSF    16.7
242E:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<=time2){ 
2430:  MOVFF  6D,93
2434:  MOVFF  6C,92
2438:  CLRF   x95
243A:  MOVFF  1D,94
243E:  CALL   026C
2442:  BTFSC  16.7
2444:  BSF    FF2.7
2446:  MOVFF  02,86
244A:  MOVFF  01,85
244E:  MOVF   02,W
2450:  SUBWF  69,W
2452:  BNC   24D2
2454:  BNZ   245C
2456:  MOVF   x85,W
2458:  SUBWF  68,W
245A:  BNC   24D2
....................                                rb2=1; 
245C:  BSF    F81.2
....................                                rb3=1; 
245E:  BSF    F81.3
....................                                delay_ms(quantum); 
2460:  MOVFF  6D,85
2464:  INCF   x85,F
2466:  DECF   x85,F
2468:  BTFSC  FD8.2
246A:  BRA    2482
246C:  CLRF   16
246E:  BTFSC  FF2.7
2470:  BSF    16.7
2472:  BCF    FF2.7
2474:  MOVLW  FF
2476:  MOVWF  x94
2478:  CALL   0246
247C:  BTFSC  16.7
247E:  BSF    FF2.7
2480:  BRA    2466
2482:  CLRF   16
2484:  BTFSC  FF2.7
2486:  BSF    16.7
2488:  BCF    FF2.7
248A:  MOVFF  6C,94
248E:  CALL   0246
2492:  BTFSC  16.7
2494:  BSF    FF2.7
....................                                rb2=0; 
2496:  BCF    F81.2
....................                                rb3=0; 
2498:  BCF    F81.3
....................                                delay_ms(quantum); 
249A:  MOVFF  6D,85
249E:  INCF   x85,F
24A0:  DECF   x85,F
24A2:  BTFSC  FD8.2
24A4:  BRA    24BC
24A6:  CLRF   16
24A8:  BTFSC  FF2.7
24AA:  BSF    16.7
24AC:  BCF    FF2.7
24AE:  MOVLW  FF
24B0:  MOVWF  x94
24B2:  CALL   0246
24B6:  BTFSC  16.7
24B8:  BSF    FF2.7
24BA:  BRA    24A0
24BC:  CLRF   16
24BE:  BTFSC  FF2.7
24C0:  BSF    16.7
24C2:  BCF    FF2.7
24C4:  MOVFF  6C,94
24C8:  CALL   0246
24CC:  BTFSC  16.7
24CE:  BSF    FF2.7
....................                                                      }  
....................                              else{ 
24D0:  BRA    2576
24D2:  CLRF   16
24D4:  BTFSC  FF2.7
24D6:  BSF    16.7
24D8:  BCF    FF2.7
....................                                         if(quantum*contador3<=time3){ 
24DA:  MOVFF  6D,93
24DE:  MOVFF  6C,92
24E2:  CLRF   x95
24E4:  MOVFF  1E,94
24E8:  CALL   026C
24EC:  BTFSC  16.7
24EE:  BSF    FF2.7
24F0:  MOVFF  02,86
24F4:  MOVFF  01,85
24F8:  MOVF   02,W
24FA:  SUBWF  6B,W
24FC:  BNC   2576
24FE:  BNZ   2506
2500:  MOVF   x85,W
2502:  SUBWF  6A,W
2504:  BNC   2576
....................                                rb3=1; 
2506:  BSF    F81.3
....................                                
....................                                delay_ms(quantum); 
2508:  MOVFF  6D,85
250C:  INCF   x85,F
250E:  DECF   x85,F
2510:  BTFSC  FD8.2
2512:  BRA    252A
2514:  CLRF   16
2516:  BTFSC  FF2.7
2518:  BSF    16.7
251A:  BCF    FF2.7
251C:  MOVLW  FF
251E:  MOVWF  x94
2520:  CALL   0246
2524:  BTFSC  16.7
2526:  BSF    FF2.7
2528:  BRA    250E
252A:  CLRF   16
252C:  BTFSC  FF2.7
252E:  BSF    16.7
2530:  BCF    FF2.7
2532:  MOVFF  6C,94
2536:  CALL   0246
253A:  BTFSC  16.7
253C:  BSF    FF2.7
....................                                rb3=0; 
253E:  BCF    F81.3
....................                                
....................                                delay_ms(quantum); 
2540:  MOVFF  6D,85
2544:  INCF   x85,F
2546:  DECF   x85,F
2548:  BTFSC  FD8.2
254A:  BRA    2562
254C:  CLRF   16
254E:  BTFSC  FF2.7
2550:  BSF    16.7
2552:  BCF    FF2.7
2554:  MOVLW  FF
2556:  MOVWF  x94
2558:  CALL   0246
255C:  BTFSC  16.7
255E:  BSF    FF2.7
2560:  BRA    2546
2562:  CLRF   16
2564:  BTFSC  FF2.7
2566:  BSF    16.7
2568:  BCF    FF2.7
256A:  MOVFF  6C,94
256E:  CALL   0246
2572:  BTFSC  16.7
2574:  BSF    FF2.7
....................                                                      }                
....................                                                       
....................                                                      } 
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
2576:  MOVF   1C,W
2578:  SUBLW  0A
257A:  BNZ   2580
257C:  CALL   0F30
....................                  if(contador3==20 )do_proceso3(); 
2580:  MOVF   1E,W
2582:  SUBLW  14
2584:  BNZ   258A
2586:  CALL   0FE0
....................                  if(contador2==16 )do_proceso2(); 
258A:  MOVF   1D,W
258C:  SUBLW  10
258E:  BNZ   2594
2590:  CALL   0F88
....................                   contador1++; 
2594:  INCF   1C,F
....................                   contador2++; 
2596:  INCF   1D,F
....................  
....................                  } 
2598:  INCF   1E,F
259A:  BRA    236E
....................                           
....................                          
....................                   
....................                                        } 
....................               } 
....................        }    
....................    } 
259C:  GOTO   3C44 (RETURN)
....................            
.................... //////////////////////////////////////// 
.................... void do_proceso33(){ 
.................... for (contador3=1;contador2<=20;contador3++){ 
25A0:  MOVLW  01
25A2:  MOVWF  1E
25A4:  MOVF   1D,W
25A6:  SUBLW  14
25A8:  BNC   266C
....................              copia3=contador3; 
25AA:  MOVFF  1E,21
25AE:  CLRF   16
25B0:  BTFSC  FF2.7
25B2:  BSF    16.7
25B4:  BCF    FF2.7
....................              if(quantum*contador3<time3){ 
25B6:  MOVFF  6D,93
25BA:  MOVFF  6C,92
25BE:  CLRF   x95
25C0:  MOVFF  1E,94
25C4:  CALL   026C
25C8:  BTFSC  16.7
25CA:  BSF    FF2.7
25CC:  MOVFF  02,86
25D0:  MOVFF  01,85
25D4:  MOVF   02,W
25D6:  SUBWF  6B,W
25D8:  BNC   2654
25DA:  BNZ   25E2
25DC:  MOVF   6A,W
25DE:  SUBWF  x85,W
25E0:  BC    2654
....................                 rb3=1; 
25E2:  BSF    F81.3
....................                 delay_ms(quantum); 
25E4:  MOVFF  6D,85
25E8:  INCF   x85,F
25EA:  DECF   x85,F
25EC:  BTFSC  FD8.2
25EE:  BRA    2606
25F0:  CLRF   16
25F2:  BTFSC  FF2.7
25F4:  BSF    16.7
25F6:  BCF    FF2.7
25F8:  MOVLW  FF
25FA:  MOVWF  x94
25FC:  CALL   0246
2600:  BTFSC  16.7
2602:  BSF    FF2.7
2604:  BRA    25EA
2606:  CLRF   16
2608:  BTFSC  FF2.7
260A:  BSF    16.7
260C:  BCF    FF2.7
260E:  MOVFF  6C,94
2612:  CALL   0246
2616:  BTFSC  16.7
2618:  BSF    FF2.7
....................                 rb3=0; 
261A:  BCF    F81.3
....................                 delay_ms(quantum); 
261C:  MOVFF  6D,85
2620:  INCF   x85,F
2622:  DECF   x85,F
2624:  BTFSC  FD8.2
2626:  BRA    263E
2628:  CLRF   16
262A:  BTFSC  FF2.7
262C:  BSF    16.7
262E:  BCF    FF2.7
2630:  MOVLW  FF
2632:  MOVWF  x94
2634:  CALL   0246
2638:  BTFSC  16.7
263A:  BSF    FF2.7
263C:  BRA    2622
263E:  CLRF   16
2640:  BTFSC  FF2.7
2642:  BSF    16.7
2644:  BCF    FF2.7
2646:  MOVFF  6C,94
264A:  CALL   0246
264E:  BTFSC  16.7
2650:  BSF    FF2.7
....................                                         } 
....................              else { 
2652:  BRA    2658
....................                     do_proceso3(); 
2654:  CALL   0FE0
....................                    }   
....................              if(tecla_pulsada=='1'){ 
2658:  MOVF   1A,W
265A:  SUBLW  31
265C:  BNZ   2660
....................                    break; 
265E:  BRA    266C
....................                   } 
....................              if(tecla_pulsada=='2'){ 
2660:  MOVF   1A,W
2662:  SUBLW  32
2664:  BNZ   2668
....................                    break; 
2666:  BRA    266C
....................                   } 
....................          } 
2668:  INCF   1E,F
266A:  BRA    25A4
....................   
....................      if(tecla_pulsada=='1'){ 
266C:  MOVF   1A,W
266E:  SUBLW  31
2670:  BTFSS  FD8.2
2672:  GOTO   2E1C
....................                if(copia3<=10){ 
2676:  MOVF   21,W
2678:  SUBLW  0A
267A:  BTFSS  FD8.0
267C:  BRA    2806
....................                for (contador3=copia3;contador3<=20;contador3++){ 
267E:  MOVFF  21,1E
2682:  MOVF   1E,W
2684:  SUBLW  14
2686:  BTFSS  FD8.0
2688:  BRA    2804
....................                     copia3=contador3; 
268A:  MOVFF  1E,21
268E:  CLRF   16
2690:  BTFSC  FF2.7
2692:  BSF    16.7
2694:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
2696:  MOVFF  6D,93
269A:  MOVFF  6C,92
269E:  CLRF   x95
26A0:  MOVFF  1C,94
26A4:  CALL   026C
26A8:  BTFSC  16.7
26AA:  BSF    FF2.7
26AC:  MOVFF  02,86
26B0:  MOVFF  01,85
26B4:  MOVF   02,W
26B6:  SUBWF  67,W
26B8:  BNC   2738
26BA:  BNZ   26C2
26BC:  MOVF   x85,W
26BE:  SUBWF  66,W
26C0:  BNC   2738
....................                       rb3=1; 
26C2:  BSF    F81.3
....................                       rb1=1; 
26C4:  BSF    F81.1
....................                       delay_ms(quantum); 
26C6:  MOVFF  6D,85
26CA:  INCF   x85,F
26CC:  DECF   x85,F
26CE:  BTFSC  FD8.2
26D0:  BRA    26E8
26D2:  CLRF   16
26D4:  BTFSC  FF2.7
26D6:  BSF    16.7
26D8:  BCF    FF2.7
26DA:  MOVLW  FF
26DC:  MOVWF  x94
26DE:  CALL   0246
26E2:  BTFSC  16.7
26E4:  BSF    FF2.7
26E6:  BRA    26CC
26E8:  CLRF   16
26EA:  BTFSC  FF2.7
26EC:  BSF    16.7
26EE:  BCF    FF2.7
26F0:  MOVFF  6C,94
26F4:  CALL   0246
26F8:  BTFSC  16.7
26FA:  BSF    FF2.7
....................                       rb1=0; 
26FC:  BCF    F81.1
....................                       rb3=0; 
26FE:  BCF    F81.3
....................                       delay_ms(quantum); 
2700:  MOVFF  6D,85
2704:  INCF   x85,F
2706:  DECF   x85,F
2708:  BTFSC  FD8.2
270A:  BRA    2722
270C:  CLRF   16
270E:  BTFSC  FF2.7
2710:  BSF    16.7
2712:  BCF    FF2.7
2714:  MOVLW  FF
2716:  MOVWF  x94
2718:  CALL   0246
271C:  BTFSC  16.7
271E:  BSF    FF2.7
2720:  BRA    2706
2722:  CLRF   16
2724:  BTFSC  FF2.7
2726:  BSF    16.7
2728:  BCF    FF2.7
272A:  MOVFF  6C,94
272E:  CALL   0246
2732:  BTFSC  16.7
2734:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
2736:  BRA    27DC
2738:  CLRF   16
273A:  BTFSC  FF2.7
273C:  BSF    16.7
273E:  BCF    FF2.7
....................  
....................                           if(quantum*contador3<time3){ 
2740:  MOVFF  6D,93
2744:  MOVFF  6C,92
2748:  CLRF   x95
274A:  MOVFF  1E,94
274E:  CALL   026C
2752:  BTFSC  16.7
2754:  BSF    FF2.7
2756:  MOVFF  02,86
275A:  MOVFF  01,85
275E:  MOVF   02,W
2760:  SUBWF  6B,W
2762:  BNC   27DC
2764:  BNZ   276C
2766:  MOVF   6A,W
2768:  SUBWF  x85,W
276A:  BC    27DC
....................                                rb3=1; 
276C:  BSF    F81.3
....................                                delay_ms(quantum); 
276E:  MOVFF  6D,85
2772:  INCF   x85,F
2774:  DECF   x85,F
2776:  BTFSC  FD8.2
2778:  BRA    2790
277A:  CLRF   16
277C:  BTFSC  FF2.7
277E:  BSF    16.7
2780:  BCF    FF2.7
2782:  MOVLW  FF
2784:  MOVWF  x94
2786:  CALL   0246
278A:  BTFSC  16.7
278C:  BSF    FF2.7
278E:  BRA    2774
2790:  CLRF   16
2792:  BTFSC  FF2.7
2794:  BSF    16.7
2796:  BCF    FF2.7
2798:  MOVFF  6C,94
279C:  CALL   0246
27A0:  BTFSC  16.7
27A2:  BSF    FF2.7
....................                                rb3=0; 
27A4:  BCF    F81.3
....................                                delay_ms(quantum); 
27A6:  MOVFF  6D,85
27AA:  INCF   x85,F
27AC:  DECF   x85,F
27AE:  BTFSC  FD8.2
27B0:  BRA    27C8
27B2:  CLRF   16
27B4:  BTFSC  FF2.7
27B6:  BSF    16.7
27B8:  BCF    FF2.7
27BA:  MOVLW  FF
27BC:  MOVWF  x94
27BE:  CALL   0246
27C2:  BTFSC  16.7
27C4:  BSF    FF2.7
27C6:  BRA    27AC
27C8:  CLRF   16
27CA:  BTFSC  FF2.7
27CC:  BSF    16.7
27CE:  BCF    FF2.7
27D0:  MOVFF  6C,94
27D4:  CALL   0246
27D8:  BTFSC  16.7
27DA:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
27DC:  MOVF   1C,W
27DE:  SUBLW  0A
27E0:  BNZ   27EC
27E2:  MOVF   1F,W
27E4:  SUBLW  09
27E6:  BNC   27EC
27E8:  CALL   0F30
....................                  if(contador3==20 ) do_proceso3(); 
27EC:  MOVF   1E,W
27EE:  SUBLW  14
27F0:  BNZ   27F6
27F2:  CALL   0FE0
....................           
....................                  if(tecla_pulsada=='2'){ 
27F6:  MOVF   1A,W
27F8:  SUBLW  32
27FA:  BNZ   27FE
....................                       break; 
27FC:  BRA    2804
....................                   } 
....................                
....................                   contador1++; 
27FE:  INCF   1C,F
....................                    
....................               } 
2800:  INCF   1E,F
2802:  BRA    2682
....................              } 
....................                        else{ 
2804:  BRA    298C
....................                         for (contador1=1;contador1<=10;contador1++){ 
2806:  MOVLW  01
2808:  MOVWF  1C
280A:  MOVF   1C,W
280C:  SUBLW  0A
280E:  BTFSS  FD8.0
2810:  BRA    298C
....................                     copia1=contador1; 
2812:  MOVFF  1C,1F
2816:  CLRF   16
2818:  BTFSC  FF2.7
281A:  BSF    16.7
281C:  BCF    FF2.7
....................                     if(quantum*contador3<=time3){ 
281E:  MOVFF  6D,93
2822:  MOVFF  6C,92
2826:  CLRF   x95
2828:  MOVFF  1E,94
282C:  CALL   026C
2830:  BTFSC  16.7
2832:  BSF    FF2.7
2834:  MOVFF  02,86
2838:  MOVFF  01,85
283C:  MOVF   02,W
283E:  SUBWF  6B,W
2840:  BNC   28C0
2842:  BNZ   284A
2844:  MOVF   x85,W
2846:  SUBWF  6A,W
2848:  BNC   28C0
....................                       rb3=1; 
284A:  BSF    F81.3
....................                       rb1=1; 
284C:  BSF    F81.1
....................                       delay_ms(quantum); 
284E:  MOVFF  6D,85
2852:  INCF   x85,F
2854:  DECF   x85,F
2856:  BTFSC  FD8.2
2858:  BRA    2870
285A:  CLRF   16
285C:  BTFSC  FF2.7
285E:  BSF    16.7
2860:  BCF    FF2.7
2862:  MOVLW  FF
2864:  MOVWF  x94
2866:  CALL   0246
286A:  BTFSC  16.7
286C:  BSF    FF2.7
286E:  BRA    2854
2870:  CLRF   16
2872:  BTFSC  FF2.7
2874:  BSF    16.7
2876:  BCF    FF2.7
2878:  MOVFF  6C,94
287C:  CALL   0246
2880:  BTFSC  16.7
2882:  BSF    FF2.7
....................                       rb1=0; 
2884:  BCF    F81.1
....................                       rb3=0; 
2886:  BCF    F81.3
....................                       delay_ms(quantum); 
2888:  MOVFF  6D,85
288C:  INCF   x85,F
288E:  DECF   x85,F
2890:  BTFSC  FD8.2
2892:  BRA    28AA
2894:  CLRF   16
2896:  BTFSC  FF2.7
2898:  BSF    16.7
289A:  BCF    FF2.7
289C:  MOVLW  FF
289E:  MOVWF  x94
28A0:  CALL   0246
28A4:  BTFSC  16.7
28A6:  BSF    FF2.7
28A8:  BRA    288E
28AA:  CLRF   16
28AC:  BTFSC  FF2.7
28AE:  BSF    16.7
28B0:  BCF    FF2.7
28B2:  MOVFF  6C,94
28B6:  CALL   0246
28BA:  BTFSC  16.7
28BC:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
28BE:  BRA    2964
28C0:  CLRF   16
28C2:  BTFSC  FF2.7
28C4:  BSF    16.7
28C6:  BCF    FF2.7
....................  
....................                           if(quantum*contador1<time1){ 
28C8:  MOVFF  6D,93
28CC:  MOVFF  6C,92
28D0:  CLRF   x95
28D2:  MOVFF  1C,94
28D6:  CALL   026C
28DA:  BTFSC  16.7
28DC:  BSF    FF2.7
28DE:  MOVFF  02,86
28E2:  MOVFF  01,85
28E6:  MOVF   02,W
28E8:  SUBWF  67,W
28EA:  BNC   2964
28EC:  BNZ   28F4
28EE:  MOVF   66,W
28F0:  SUBWF  x85,W
28F2:  BC    2964
....................                                rb1=1; 
28F4:  BSF    F81.1
....................                                delay_ms(quantum); 
28F6:  MOVFF  6D,85
28FA:  INCF   x85,F
28FC:  DECF   x85,F
28FE:  BTFSC  FD8.2
2900:  BRA    2918
2902:  CLRF   16
2904:  BTFSC  FF2.7
2906:  BSF    16.7
2908:  BCF    FF2.7
290A:  MOVLW  FF
290C:  MOVWF  x94
290E:  CALL   0246
2912:  BTFSC  16.7
2914:  BSF    FF2.7
2916:  BRA    28FC
2918:  CLRF   16
291A:  BTFSC  FF2.7
291C:  BSF    16.7
291E:  BCF    FF2.7
2920:  MOVFF  6C,94
2924:  CALL   0246
2928:  BTFSC  16.7
292A:  BSF    FF2.7
....................                                rb1=0; 
292C:  BCF    F81.1
....................                                delay_ms(quantum); 
292E:  MOVFF  6D,85
2932:  INCF   x85,F
2934:  DECF   x85,F
2936:  BTFSC  FD8.2
2938:  BRA    2950
293A:  CLRF   16
293C:  BTFSC  FF2.7
293E:  BSF    16.7
2940:  BCF    FF2.7
2942:  MOVLW  FF
2944:  MOVWF  x94
2946:  CALL   0246
294A:  BTFSC  16.7
294C:  BSF    FF2.7
294E:  BRA    2934
2950:  CLRF   16
2952:  BTFSC  FF2.7
2954:  BSF    16.7
2956:  BCF    FF2.7
2958:  MOVFF  6C,94
295C:  CALL   0246
2960:  BTFSC  16.7
2962:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
2964:  MOVF   1C,W
2966:  SUBLW  0A
2968:  BNZ   296E
296A:  CALL   0F30
....................                  if(contador3==20 && copia3<20) do_proceso3(); 
296E:  MOVF   1E,W
2970:  SUBLW  14
2972:  BNZ   297E
2974:  MOVF   21,W
2976:  SUBLW  13
2978:  BNC   297E
297A:  CALL   0FE0
....................           
....................                  if(tecla_pulsada=='2'){ 
297E:  MOVF   1A,W
2980:  SUBLW  32
2982:  BNZ   2986
....................                       break; 
2984:  BRA    298C
....................                   } 
....................                
....................                   contador3++; 
2986:  INCF   1E,F
....................                    
....................               } 
2988:  INCF   1C,F
298A:  BRA    280A
....................                         
....................                         
....................           } 
....................            
....................               if(tecla_pulsada=='2'){ 
298C:  MOVF   1A,W
298E:  SUBLW  32
2990:  BTFSS  FD8.2
2992:  BRA    2E18
....................                           if (copia3<=4){ 
2994:  MOVF   21,W
2996:  SUBLW  04
2998:  BTFSS  FD8.0
299A:  BRA    2BDC
....................                       for (contador3=1;contador3<=20;contador3++){ 
299C:  MOVLW  01
299E:  MOVWF  1E
29A0:  MOVF   1E,W
29A2:  SUBLW  14
29A4:  BTFSS  FD8.0
29A6:  BRA    2BDA
....................                            copia3=contador3; 
29A8:  MOVFF  1E,21
29AC:  CLRF   16
29AE:  BTFSC  FF2.7
29B0:  BSF    16.7
29B2:  BCF    FF2.7
....................                            if(quantum*contador1<time1){ 
29B4:  MOVFF  6D,93
29B8:  MOVFF  6C,92
29BC:  CLRF   x95
29BE:  MOVFF  1C,94
29C2:  CALL   026C
29C6:  BTFSC  16.7
29C8:  BSF    FF2.7
29CA:  MOVFF  02,86
29CE:  MOVFF  01,85
29D2:  MOVF   02,W
29D4:  SUBWF  67,W
29D6:  BNC   2A5A
29D8:  BNZ   29E0
29DA:  MOVF   66,W
29DC:  SUBWF  x85,W
29DE:  BC    2A5A
....................                              rb2=1; 
29E0:  BSF    F81.2
....................                              rb3=1; 
29E2:  BSF    F81.3
....................                              rb1=1; 
29E4:  BSF    F81.1
....................                              delay_ms(quantum); 
29E6:  MOVFF  6D,85
29EA:  INCF   x85,F
29EC:  DECF   x85,F
29EE:  BTFSC  FD8.2
29F0:  BRA    2A08
29F2:  CLRF   16
29F4:  BTFSC  FF2.7
29F6:  BSF    16.7
29F8:  BCF    FF2.7
29FA:  MOVLW  FF
29FC:  MOVWF  x94
29FE:  CALL   0246
2A02:  BTFSC  16.7
2A04:  BSF    FF2.7
2A06:  BRA    29EC
2A08:  CLRF   16
2A0A:  BTFSC  FF2.7
2A0C:  BSF    16.7
2A0E:  BCF    FF2.7
2A10:  MOVFF  6C,94
2A14:  CALL   0246
2A18:  BTFSC  16.7
2A1A:  BSF    FF2.7
....................                              rb2=0; 
2A1C:  BCF    F81.2
....................                              rb3=0; 
2A1E:  BCF    F81.3
....................                              rb1=0; 
2A20:  BCF    F81.1
....................                              delay_ms(quantum); 
2A22:  MOVFF  6D,85
2A26:  INCF   x85,F
2A28:  DECF   x85,F
2A2A:  BTFSC  FD8.2
2A2C:  BRA    2A44
2A2E:  CLRF   16
2A30:  BTFSC  FF2.7
2A32:  BSF    16.7
2A34:  BCF    FF2.7
2A36:  MOVLW  FF
2A38:  MOVWF  x94
2A3A:  CALL   0246
2A3E:  BTFSC  16.7
2A40:  BSF    FF2.7
2A42:  BRA    2A28
2A44:  CLRF   16
2A46:  BTFSC  FF2.7
2A48:  BSF    16.7
2A4A:  BCF    FF2.7
2A4C:  MOVFF  6C,94
2A50:  CALL   0246
2A54:  BTFSC  16.7
2A56:  BSF    FF2.7
....................                          
....................                                                }                                              
....................                    else  { 
2A58:  BRA    2BA8
2A5A:  CLRF   16
2A5C:  BTFSC  FF2.7
2A5E:  BSF    16.7
2A60:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<time2){ 
2A62:  MOVFF  6D,93
2A66:  MOVFF  6C,92
2A6A:  CLRF   x95
2A6C:  MOVFF  1D,94
2A70:  CALL   026C
2A74:  BTFSC  16.7
2A76:  BSF    FF2.7
2A78:  MOVFF  02,86
2A7C:  MOVFF  01,85
2A80:  MOVF   02,W
2A82:  SUBWF  69,W
2A84:  BNC   2B04
2A86:  BNZ   2A8E
2A88:  MOVF   68,W
2A8A:  SUBWF  x85,W
2A8C:  BC    2B04
....................                                rb3=1; 
2A8E:  BSF    F81.3
....................                                rb2=1; 
2A90:  BSF    F81.2
....................                                delay_ms(quantum); 
2A92:  MOVFF  6D,85
2A96:  INCF   x85,F
2A98:  DECF   x85,F
2A9A:  BTFSC  FD8.2
2A9C:  BRA    2AB4
2A9E:  CLRF   16
2AA0:  BTFSC  FF2.7
2AA2:  BSF    16.7
2AA4:  BCF    FF2.7
2AA6:  MOVLW  FF
2AA8:  MOVWF  x94
2AAA:  CALL   0246
2AAE:  BTFSC  16.7
2AB0:  BSF    FF2.7
2AB2:  BRA    2A98
2AB4:  CLRF   16
2AB6:  BTFSC  FF2.7
2AB8:  BSF    16.7
2ABA:  BCF    FF2.7
2ABC:  MOVFF  6C,94
2AC0:  CALL   0246
2AC4:  BTFSC  16.7
2AC6:  BSF    FF2.7
....................                                rb3=0; 
2AC8:  BCF    F81.3
....................                                rb2=0; 
2ACA:  BCF    F81.2
....................                                delay_ms(quantum); 
2ACC:  MOVFF  6D,85
2AD0:  INCF   x85,F
2AD2:  DECF   x85,F
2AD4:  BTFSC  FD8.2
2AD6:  BRA    2AEE
2AD8:  CLRF   16
2ADA:  BTFSC  FF2.7
2ADC:  BSF    16.7
2ADE:  BCF    FF2.7
2AE0:  MOVLW  FF
2AE2:  MOVWF  x94
2AE4:  CALL   0246
2AE8:  BTFSC  16.7
2AEA:  BSF    FF2.7
2AEC:  BRA    2AD2
2AEE:  CLRF   16
2AF0:  BTFSC  FF2.7
2AF2:  BSF    16.7
2AF4:  BCF    FF2.7
2AF6:  MOVFF  6C,94
2AFA:  CALL   0246
2AFE:  BTFSC  16.7
2B00:  BSF    FF2.7
....................                                                     }  
....................                      else{ 
2B02:  BRA    2BA8
2B04:  CLRF   16
2B06:  BTFSC  FF2.7
2B08:  BSF    16.7
2B0A:  BCF    FF2.7
....................                          if(quantum*contador3<time3){ 
2B0C:  MOVFF  6D,93
2B10:  MOVFF  6C,92
2B14:  CLRF   x95
2B16:  MOVFF  1E,94
2B1A:  CALL   026C
2B1E:  BTFSC  16.7
2B20:  BSF    FF2.7
2B22:  MOVFF  02,86
2B26:  MOVFF  01,85
2B2A:  MOVF   02,W
2B2C:  SUBWF  6B,W
2B2E:  BNC   2BA8
2B30:  BNZ   2B38
2B32:  MOVF   6A,W
2B34:  SUBWF  x85,W
2B36:  BC    2BA8
....................                                rb3=1; 
2B38:  BSF    F81.3
....................                                delay_ms(quantum); 
2B3A:  MOVFF  6D,85
2B3E:  INCF   x85,F
2B40:  DECF   x85,F
2B42:  BTFSC  FD8.2
2B44:  BRA    2B5C
2B46:  CLRF   16
2B48:  BTFSC  FF2.7
2B4A:  BSF    16.7
2B4C:  BCF    FF2.7
2B4E:  MOVLW  FF
2B50:  MOVWF  x94
2B52:  CALL   0246
2B56:  BTFSC  16.7
2B58:  BSF    FF2.7
2B5A:  BRA    2B40
2B5C:  CLRF   16
2B5E:  BTFSC  FF2.7
2B60:  BSF    16.7
2B62:  BCF    FF2.7
2B64:  MOVFF  6C,94
2B68:  CALL   0246
2B6C:  BTFSC  16.7
2B6E:  BSF    FF2.7
....................                                rb3=0; 
2B70:  BCF    F81.3
....................                                delay_ms(quantum); 
2B72:  MOVFF  6D,85
2B76:  INCF   x85,F
2B78:  DECF   x85,F
2B7A:  BTFSC  FD8.2
2B7C:  BRA    2B94
2B7E:  CLRF   16
2B80:  BTFSC  FF2.7
2B82:  BSF    16.7
2B84:  BCF    FF2.7
2B86:  MOVLW  FF
2B88:  MOVWF  x94
2B8A:  CALL   0246
2B8E:  BTFSC  16.7
2B90:  BSF    FF2.7
2B92:  BRA    2B78
2B94:  CLRF   16
2B96:  BTFSC  FF2.7
2B98:  BSF    16.7
2B9A:  BCF    FF2.7
2B9C:  MOVFF  6C,94
2BA0:  CALL   0246
2BA4:  BTFSC  16.7
2BA6:  BSF    FF2.7
....................                                                      }  
....................                            } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1();                 
2BA8:  MOVF   1C,W
2BAA:  SUBLW  0A
2BAC:  BNZ   2BB8
2BAE:  MOVF   1F,W
2BB0:  SUBLW  09
2BB2:  BNC   2BB8
2BB4:  CALL   0F30
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
2BB8:  MOVF   1D,W
2BBA:  SUBLW  10
2BBC:  BNZ   2BC8
2BBE:  MOVF   20,W
2BC0:  SUBLW  0F
2BC2:  BNC   2BC8
2BC4:  CALL   0F88
....................                  if(contador3==20 )do_proceso3(); 
2BC8:  MOVF   1E,W
2BCA:  SUBLW  14
2BCC:  BNZ   2BD2
2BCE:  CALL   0FE0
....................  
....................                   contador1++; 
2BD2:  INCF   1C,F
....................                   contador2++; 
2BD4:  INCF   1D,F
....................                  
....................               } // 
2BD6:  INCF   1E,F
2BD8:  BRA    29A0
....................                           } 
....................               
....................               
....................              else 
2BDA:  BRA    2E18
....................                  { 
....................                      for (contador2=1;contador2<=16;contador2++){ 
2BDC:  MOVLW  01
2BDE:  MOVWF  1D
2BE0:  MOVF   1D,W
2BE2:  SUBLW  10
2BE4:  BTFSS  FD8.0
2BE6:  BRA    2E18
....................                            copia2=contador2; 
2BE8:  MOVFF  1D,20
2BEC:  CLRF   16
2BEE:  BTFSC  FF2.7
2BF0:  BSF    16.7
2BF2:  BCF    FF2.7
....................                            if(quantum*contador1<time1){ 
2BF4:  MOVFF  6D,93
2BF8:  MOVFF  6C,92
2BFC:  CLRF   x95
2BFE:  MOVFF  1C,94
2C02:  CALL   026C
2C06:  BTFSC  16.7
2C08:  BSF    FF2.7
2C0A:  MOVFF  02,86
2C0E:  MOVFF  01,85
2C12:  MOVF   02,W
2C14:  SUBWF  67,W
2C16:  BTFSS  FD8.0
2C18:  BRA    2D48
2C1A:  BNZ   2C24
2C1C:  MOVF   66,W
2C1E:  SUBWF  x85,W
2C20:  BTFSC  FD8.0
2C22:  BRA    2D48
2C24:  CLRF   16
2C26:  BTFSC  FF2.7
2C28:  BSF    16.7
2C2A:  BCF    FF2.7
....................                            if(quantum*contador3<time3){ 
2C2C:  MOVFF  6D,93
2C30:  MOVFF  6C,92
2C34:  CLRF   x95
2C36:  MOVFF  1E,94
2C3A:  CALL   026C
2C3E:  BTFSC  16.7
2C40:  BSF    FF2.7
2C42:  MOVFF  02,86
2C46:  MOVFF  01,85
2C4A:  MOVF   02,W
2C4C:  SUBWF  6B,W
2C4E:  BNC   2CD2
2C50:  BNZ   2C58
2C52:  MOVF   6A,W
2C54:  SUBWF  x85,W
2C56:  BC    2CD2
....................                              rb2=1; 
2C58:  BSF    F81.2
....................                              rb3=1; 
2C5A:  BSF    F81.3
....................                              rb1=1; 
2C5C:  BSF    F81.1
....................                              delay_ms(quantum); 
2C5E:  MOVFF  6D,85
2C62:  INCF   x85,F
2C64:  DECF   x85,F
2C66:  BTFSC  FD8.2
2C68:  BRA    2C80
2C6A:  CLRF   16
2C6C:  BTFSC  FF2.7
2C6E:  BSF    16.7
2C70:  BCF    FF2.7
2C72:  MOVLW  FF
2C74:  MOVWF  x94
2C76:  CALL   0246
2C7A:  BTFSC  16.7
2C7C:  BSF    FF2.7
2C7E:  BRA    2C64
2C80:  CLRF   16
2C82:  BTFSC  FF2.7
2C84:  BSF    16.7
2C86:  BCF    FF2.7
2C88:  MOVFF  6C,94
2C8C:  CALL   0246
2C90:  BTFSC  16.7
2C92:  BSF    FF2.7
....................                              rb2=0; 
2C94:  BCF    F81.2
....................                              rb3=0; 
2C96:  BCF    F81.3
....................                              rb1=0; 
2C98:  BCF    F81.1
....................                              delay_ms(quantum); 
2C9A:  MOVFF  6D,85
2C9E:  INCF   x85,F
2CA0:  DECF   x85,F
2CA2:  BTFSC  FD8.2
2CA4:  BRA    2CBC
2CA6:  CLRF   16
2CA8:  BTFSC  FF2.7
2CAA:  BSF    16.7
2CAC:  BCF    FF2.7
2CAE:  MOVLW  FF
2CB0:  MOVWF  x94
2CB2:  CALL   0246
2CB6:  BTFSC  16.7
2CB8:  BSF    FF2.7
2CBA:  BRA    2CA0
2CBC:  CLRF   16
2CBE:  BTFSC  FF2.7
2CC0:  BSF    16.7
2CC2:  BCF    FF2.7
2CC4:  MOVFF  6C,94
2CC8:  CALL   0246
2CCC:  BTFSC  16.7
2CCE:  BSF    FF2.7
....................                              } 
....................                              else{ 
2CD0:  BRA    2D46
....................                              rb2=1; 
2CD2:  BSF    F81.2
....................                              rb1=1; 
2CD4:  BSF    F81.1
....................                              delay_ms(quantum); 
2CD6:  MOVFF  6D,85
2CDA:  INCF   x85,F
2CDC:  DECF   x85,F
2CDE:  BTFSC  FD8.2
2CE0:  BRA    2CF8
2CE2:  CLRF   16
2CE4:  BTFSC  FF2.7
2CE6:  BSF    16.7
2CE8:  BCF    FF2.7
2CEA:  MOVLW  FF
2CEC:  MOVWF  x94
2CEE:  CALL   0246
2CF2:  BTFSC  16.7
2CF4:  BSF    FF2.7
2CF6:  BRA    2CDC
2CF8:  CLRF   16
2CFA:  BTFSC  FF2.7
2CFC:  BSF    16.7
2CFE:  BCF    FF2.7
2D00:  MOVFF  6C,94
2D04:  CALL   0246
2D08:  BTFSC  16.7
2D0A:  BSF    FF2.7
....................                              rb2=0; 
2D0C:  BCF    F81.2
....................                              rb1=0; 
2D0E:  BCF    F81.1
....................                              delay_ms(quantum); 
2D10:  MOVFF  6D,85
2D14:  INCF   x85,F
2D16:  DECF   x85,F
2D18:  BTFSC  FD8.2
2D1A:  BRA    2D32
2D1C:  CLRF   16
2D1E:  BTFSC  FF2.7
2D20:  BSF    16.7
2D22:  BCF    FF2.7
2D24:  MOVLW  FF
2D26:  MOVWF  x94
2D28:  CALL   0246
2D2C:  BTFSC  16.7
2D2E:  BSF    FF2.7
2D30:  BRA    2D16
2D32:  CLRF   16
2D34:  BTFSC  FF2.7
2D36:  BSF    16.7
2D38:  BCF    FF2.7
2D3A:  MOVFF  6C,94
2D3E:  CALL   0246
2D42:  BTFSC  16.7
2D44:  BSF    FF2.7
....................                              } 
....................                               
....................                          
....................                                                }                                              
....................                    else  { 
2D46:  BRA    2DEC
2D48:  CLRF   16
2D4A:  BTFSC  FF2.7
2D4C:  BSF    16.7
2D4E:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<time2){ 
2D50:  MOVFF  6D,93
2D54:  MOVFF  6C,92
2D58:  CLRF   x95
2D5A:  MOVFF  1D,94
2D5E:  CALL   026C
2D62:  BTFSC  16.7
2D64:  BSF    FF2.7
2D66:  MOVFF  02,86
2D6A:  MOVFF  01,85
2D6E:  MOVF   02,W
2D70:  SUBWF  69,W
2D72:  BNC   2DEC
2D74:  BNZ   2D7C
2D76:  MOVF   68,W
2D78:  SUBWF  x85,W
2D7A:  BC    2DEC
....................                                rb2=1; 
2D7C:  BSF    F81.2
....................                                delay_ms(quantum); 
2D7E:  MOVFF  6D,85
2D82:  INCF   x85,F
2D84:  DECF   x85,F
2D86:  BTFSC  FD8.2
2D88:  BRA    2DA0
2D8A:  CLRF   16
2D8C:  BTFSC  FF2.7
2D8E:  BSF    16.7
2D90:  BCF    FF2.7
2D92:  MOVLW  FF
2D94:  MOVWF  x94
2D96:  CALL   0246
2D9A:  BTFSC  16.7
2D9C:  BSF    FF2.7
2D9E:  BRA    2D84
2DA0:  CLRF   16
2DA2:  BTFSC  FF2.7
2DA4:  BSF    16.7
2DA6:  BCF    FF2.7
2DA8:  MOVFF  6C,94
2DAC:  CALL   0246
2DB0:  BTFSC  16.7
2DB2:  BSF    FF2.7
....................                                rb2=0; 
2DB4:  BCF    F81.2
....................                                delay_ms(quantum); 
2DB6:  MOVFF  6D,85
2DBA:  INCF   x85,F
2DBC:  DECF   x85,F
2DBE:  BTFSC  FD8.2
2DC0:  BRA    2DD8
2DC2:  CLRF   16
2DC4:  BTFSC  FF2.7
2DC6:  BSF    16.7
2DC8:  BCF    FF2.7
2DCA:  MOVLW  FF
2DCC:  MOVWF  x94
2DCE:  CALL   0246
2DD2:  BTFSC  16.7
2DD4:  BSF    FF2.7
2DD6:  BRA    2DBC
2DD8:  CLRF   16
2DDA:  BTFSC  FF2.7
2DDC:  BSF    16.7
2DDE:  BCF    FF2.7
2DE0:  MOVFF  6C,94
2DE4:  CALL   0246
2DE8:  BTFSC  16.7
2DEA:  BSF    FF2.7
....................                                                     }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1();                 
2DEC:  MOVF   1C,W
2DEE:  SUBLW  0A
2DF0:  BNZ   2DFC
2DF2:  MOVF   1F,W
2DF4:  SUBLW  09
2DF6:  BNC   2DFC
2DF8:  CALL   0F30
....................                  if(contador2==16 ) do_proceso2(); 
2DFC:  MOVF   1D,W
2DFE:  SUBLW  10
2E00:  BNZ   2E06
2E02:  CALL   0F88
....................                  if(contador3==20 )do_proceso3(); 
2E06:  MOVF   1E,W
2E08:  SUBLW  14
2E0A:  BNZ   2E10
2E0C:  CALL   0FE0
....................  
....................                   contador1++; 
2E10:  INCF   1C,F
....................                   contador3++; 
2E12:  INCF   1E,F
....................                  
....................               } // 
2E14:  INCF   1D,F
2E16:  BRA    2BE0
....................           
....................           
....................                  } 
....................          }   
....................           
....................           
....................      }   
....................      //       
....................          else{ 
2E18:  GOTO   3ADC
....................           
....................           if(tecla_pulsada=='2'){ 
2E1C:  MOVF   1A,W
2E1E:  SUBLW  32
2E20:  BTFSS  FD8.2
2E22:  GOTO   3ADC
....................                if(copia3<=4){// 
2E26:  MOVF   21,W
2E28:  SUBLW  04
2E2A:  BTFSS  FD8.0
2E2C:  BRA    34DE
....................                for (contador3=1;contador3<=20;contador3++){ 
2E2E:  MOVLW  01
2E30:  MOVWF  1E
2E32:  MOVF   1E,W
2E34:  SUBLW  14
2E36:  BTFSS  FD8.0
2E38:  BRA    2FB4
....................                     copia3=contador3; 
2E3A:  MOVFF  1E,21
2E3E:  CLRF   16
2E40:  BTFSC  FF2.7
2E42:  BSF    16.7
2E44:  BCF    FF2.7
....................                     if(quantum*contador2<time2){ 
2E46:  MOVFF  6D,93
2E4A:  MOVFF  6C,92
2E4E:  CLRF   x95
2E50:  MOVFF  1D,94
2E54:  CALL   026C
2E58:  BTFSC  16.7
2E5A:  BSF    FF2.7
2E5C:  MOVFF  02,86
2E60:  MOVFF  01,85
2E64:  MOVF   02,W
2E66:  SUBWF  69,W
2E68:  BNC   2EE8
2E6A:  BNZ   2E72
2E6C:  MOVF   68,W
2E6E:  SUBWF  x85,W
2E70:  BC    2EE8
....................                       
....................                       rb3=1; 
2E72:  BSF    F81.3
....................                       rb2=1; 
2E74:  BSF    F81.2
....................                       delay_ms(quantum); 
2E76:  MOVFF  6D,85
2E7A:  INCF   x85,F
2E7C:  DECF   x85,F
2E7E:  BTFSC  FD8.2
2E80:  BRA    2E98
2E82:  CLRF   16
2E84:  BTFSC  FF2.7
2E86:  BSF    16.7
2E88:  BCF    FF2.7
2E8A:  MOVLW  FF
2E8C:  MOVWF  x94
2E8E:  CALL   0246
2E92:  BTFSC  16.7
2E94:  BSF    FF2.7
2E96:  BRA    2E7C
2E98:  CLRF   16
2E9A:  BTFSC  FF2.7
2E9C:  BSF    16.7
2E9E:  BCF    FF2.7
2EA0:  MOVFF  6C,94
2EA4:  CALL   0246
2EA8:  BTFSC  16.7
2EAA:  BSF    FF2.7
....................                       rb3=0; 
2EAC:  BCF    F81.3
....................                       rb2=0; 
2EAE:  BCF    F81.2
....................                       
....................                       delay_ms(quantum); 
2EB0:  MOVFF  6D,85
2EB4:  INCF   x85,F
2EB6:  DECF   x85,F
2EB8:  BTFSC  FD8.2
2EBA:  BRA    2ED2
2EBC:  CLRF   16
2EBE:  BTFSC  FF2.7
2EC0:  BSF    16.7
2EC2:  BCF    FF2.7
2EC4:  MOVLW  FF
2EC6:  MOVWF  x94
2EC8:  CALL   0246
2ECC:  BTFSC  16.7
2ECE:  BSF    FF2.7
2ED0:  BRA    2EB6
2ED2:  CLRF   16
2ED4:  BTFSC  FF2.7
2ED6:  BSF    16.7
2ED8:  BCF    FF2.7
2EDA:  MOVFF  6C,94
2EDE:  CALL   0246
2EE2:  BTFSC  16.7
2EE4:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
2EE6:  BRA    2F8C
2EE8:  CLRF   16
2EEA:  BTFSC  FF2.7
2EEC:  BSF    16.7
2EEE:  BCF    FF2.7
....................                     
....................                           if(quantum*contador3<=time3){ 
2EF0:  MOVFF  6D,93
2EF4:  MOVFF  6C,92
2EF8:  CLRF   x95
2EFA:  MOVFF  1E,94
2EFE:  CALL   026C
2F02:  BTFSC  16.7
2F04:  BSF    FF2.7
2F06:  MOVFF  02,86
2F0A:  MOVFF  01,85
2F0E:  MOVF   02,W
2F10:  SUBWF  6B,W
2F12:  BNC   2F8C
2F14:  BNZ   2F1C
2F16:  MOVF   x85,W
2F18:  SUBWF  6A,W
2F1A:  BNC   2F8C
....................                                 
....................                                rb3=1; 
2F1C:  BSF    F81.3
....................                                delay_ms(quantum); 
2F1E:  MOVFF  6D,85
2F22:  INCF   x85,F
2F24:  DECF   x85,F
2F26:  BTFSC  FD8.2
2F28:  BRA    2F40
2F2A:  CLRF   16
2F2C:  BTFSC  FF2.7
2F2E:  BSF    16.7
2F30:  BCF    FF2.7
2F32:  MOVLW  FF
2F34:  MOVWF  x94
2F36:  CALL   0246
2F3A:  BTFSC  16.7
2F3C:  BSF    FF2.7
2F3E:  BRA    2F24
2F40:  CLRF   16
2F42:  BTFSC  FF2.7
2F44:  BSF    16.7
2F46:  BCF    FF2.7
2F48:  MOVFF  6C,94
2F4C:  CALL   0246
2F50:  BTFSC  16.7
2F52:  BSF    FF2.7
....................                                rb3=0; 
2F54:  BCF    F81.3
....................                                delay_ms(quantum); 
2F56:  MOVFF  6D,85
2F5A:  INCF   x85,F
2F5C:  DECF   x85,F
2F5E:  BTFSC  FD8.2
2F60:  BRA    2F78
2F62:  CLRF   16
2F64:  BTFSC  FF2.7
2F66:  BSF    16.7
2F68:  BCF    FF2.7
2F6A:  MOVLW  FF
2F6C:  MOVWF  x94
2F6E:  CALL   0246
2F72:  BTFSC  16.7
2F74:  BSF    FF2.7
2F76:  BRA    2F5C
2F78:  CLRF   16
2F7A:  BTFSC  FF2.7
2F7C:  BSF    16.7
2F7E:  BCF    FF2.7
2F80:  MOVFF  6C,94
2F84:  CALL   0246
2F88:  BTFSC  16.7
2F8A:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
2F8C:  MOVF   1D,W
2F8E:  SUBLW  10
2F90:  BNZ   2F9C
2F92:  MOVF   20,W
2F94:  SUBLW  0F
2F96:  BNC   2F9C
2F98:  CALL   0F88
....................                  if(contador3==20 )do_proceso3(); 
2F9C:  MOVF   1E,W
2F9E:  SUBLW  14
2FA0:  BNZ   2FA6
2FA2:  CALL   0FE0
....................                   
....................                  if(tecla_pulsada=='1'){ 
2FA6:  MOVF   1A,W
2FA8:  SUBLW  31
2FAA:  BNZ   2FAE
....................                       break; 
2FAC:  BRA    2FB4
....................                   } 
....................                   contador2++; 
2FAE:  INCF   1D,F
....................  
....................                  } 
2FB0:  INCF   1E,F
2FB2:  BRA    2E32
....................                  if(tecla_pulsada=='1'){ 
2FB4:  MOVF   1A,W
2FB6:  SUBLW  31
2FB8:  BTFSS  FD8.2
2FBA:  BRA    34DC
....................                          if(copia3<=10){ 
2FBC:  MOVF   21,W
2FBE:  SUBLW  0A
2FC0:  BTFSS  FD8.0
2FC2:  BRA    32A6
....................                          for (contador3=copia3;contador3<=20;contador3++){ 
2FC4:  MOVFF  21,1E
2FC8:  MOVF   1E,W
2FCA:  SUBLW  14
2FCC:  BTFSS  FD8.0
2FCE:  BRA    32A4
....................                               copia3=contador3; 
2FD0:  MOVFF  1E,21
2FD4:  CLRF   16
2FD6:  BTFSC  FF2.7
2FD8:  BSF    16.7
2FDA:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
2FDC:  MOVFF  6D,93
2FE0:  MOVFF  6C,92
2FE4:  CLRF   x95
2FE6:  MOVFF  1C,94
2FEA:  CALL   026C
2FEE:  BTFSC  16.7
2FF0:  BSF    FF2.7
2FF2:  MOVFF  02,86
2FF6:  MOVFF  01,85
2FFA:  MOVF   02,W
2FFC:  SUBWF  67,W
2FFE:  BTFSS  FD8.0
3000:  BRA    3130
3002:  BNZ   300C
3004:  MOVF   x85,W
3006:  SUBWF  66,W
3008:  BTFSS  FD8.0
300A:  BRA    3130
300C:  CLRF   16
300E:  BTFSC  FF2.7
3010:  BSF    16.7
3012:  BCF    FF2.7
....................                     if(quantum*contador2<=time2){ 
3014:  MOVFF  6D,93
3018:  MOVFF  6C,92
301C:  CLRF   x95
301E:  MOVFF  1D,94
3022:  CALL   026C
3026:  BTFSC  16.7
3028:  BSF    FF2.7
302A:  MOVFF  02,86
302E:  MOVFF  01,85
3032:  MOVF   02,W
3034:  SUBWF  69,W
3036:  BNC   30BA
3038:  BNZ   3040
303A:  MOVF   x85,W
303C:  SUBWF  68,W
303E:  BNC   30BA
....................                              rb2=1; 
3040:  BSF    F81.2
....................                              rb3=1; 
3042:  BSF    F81.3
....................                              rb1=1; 
3044:  BSF    F81.1
....................                              delay_ms(quantum); 
3046:  MOVFF  6D,85
304A:  INCF   x85,F
304C:  DECF   x85,F
304E:  BTFSC  FD8.2
3050:  BRA    3068
3052:  CLRF   16
3054:  BTFSC  FF2.7
3056:  BSF    16.7
3058:  BCF    FF2.7
305A:  MOVLW  FF
305C:  MOVWF  x94
305E:  CALL   0246
3062:  BTFSC  16.7
3064:  BSF    FF2.7
3066:  BRA    304C
3068:  CLRF   16
306A:  BTFSC  FF2.7
306C:  BSF    16.7
306E:  BCF    FF2.7
3070:  MOVFF  6C,94
3074:  CALL   0246
3078:  BTFSC  16.7
307A:  BSF    FF2.7
....................                              rb2=0; 
307C:  BCF    F81.2
....................                              rb3=0; 
307E:  BCF    F81.3
....................                              rb1=0; 
3080:  BCF    F81.1
....................                              delay_ms(quantum); 
3082:  MOVFF  6D,85
3086:  INCF   x85,F
3088:  DECF   x85,F
308A:  BTFSC  FD8.2
308C:  BRA    30A4
308E:  CLRF   16
3090:  BTFSC  FF2.7
3092:  BSF    16.7
3094:  BCF    FF2.7
3096:  MOVLW  FF
3098:  MOVWF  x94
309A:  CALL   0246
309E:  BTFSC  16.7
30A0:  BSF    FF2.7
30A2:  BRA    3088
30A4:  CLRF   16
30A6:  BTFSC  FF2.7
30A8:  BSF    16.7
30AA:  BCF    FF2.7
30AC:  MOVFF  6C,94
30B0:  CALL   0246
30B4:  BTFSC  16.7
30B6:  BSF    FF2.7
....................                     } 
....................                     else{   
30B8:  BRA    312E
....................                              rb3=1; 
30BA:  BSF    F81.3
....................                              rb1=1; 
30BC:  BSF    F81.1
....................                              delay_ms(quantum); 
30BE:  MOVFF  6D,85
30C2:  INCF   x85,F
30C4:  DECF   x85,F
30C6:  BTFSC  FD8.2
30C8:  BRA    30E0
30CA:  CLRF   16
30CC:  BTFSC  FF2.7
30CE:  BSF    16.7
30D0:  BCF    FF2.7
30D2:  MOVLW  FF
30D4:  MOVWF  x94
30D6:  CALL   0246
30DA:  BTFSC  16.7
30DC:  BSF    FF2.7
30DE:  BRA    30C4
30E0:  CLRF   16
30E2:  BTFSC  FF2.7
30E4:  BSF    16.7
30E6:  BCF    FF2.7
30E8:  MOVFF  6C,94
30EC:  CALL   0246
30F0:  BTFSC  16.7
30F2:  BSF    FF2.7
....................                              rb3=0; 
30F4:  BCF    F81.3
....................                              rb1=0; 
30F6:  BCF    F81.1
....................                              delay_ms(quantum); 
30F8:  MOVFF  6D,85
30FC:  INCF   x85,F
30FE:  DECF   x85,F
3100:  BTFSC  FD8.2
3102:  BRA    311A
3104:  CLRF   16
3106:  BTFSC  FF2.7
3108:  BSF    16.7
310A:  BCF    FF2.7
310C:  MOVLW  FF
310E:  MOVWF  x94
3110:  CALL   0246
3114:  BTFSC  16.7
3116:  BSF    FF2.7
3118:  BRA    30FE
311A:  CLRF   16
311C:  BTFSC  FF2.7
311E:  BSF    16.7
3120:  BCF    FF2.7
3122:  MOVFF  6C,94
3126:  CALL   0246
312A:  BTFSC  16.7
312C:  BSF    FF2.7
....................                     } 
....................                                                } 
....................                                                 
....................                    else  { 
312E:  BRA    327E
3130:  CLRF   16
3132:  BTFSC  FF2.7
3134:  BSF    16.7
3136:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<=time2){ 
3138:  MOVFF  6D,93
313C:  MOVFF  6C,92
3140:  CLRF   x95
3142:  MOVFF  1D,94
3146:  CALL   026C
314A:  BTFSC  16.7
314C:  BSF    FF2.7
314E:  MOVFF  02,86
3152:  MOVFF  01,85
3156:  MOVF   02,W
3158:  SUBWF  69,W
315A:  BNC   31DA
315C:  BNZ   3164
315E:  MOVF   x85,W
3160:  SUBWF  68,W
3162:  BNC   31DA
....................                                rb2=1; 
3164:  BSF    F81.2
....................                                rb3=1; 
3166:  BSF    F81.3
....................                                delay_ms(quantum); 
3168:  MOVFF  6D,85
316C:  INCF   x85,F
316E:  DECF   x85,F
3170:  BTFSC  FD8.2
3172:  BRA    318A
3174:  CLRF   16
3176:  BTFSC  FF2.7
3178:  BSF    16.7
317A:  BCF    FF2.7
317C:  MOVLW  FF
317E:  MOVWF  x94
3180:  CALL   0246
3184:  BTFSC  16.7
3186:  BSF    FF2.7
3188:  BRA    316E
318A:  CLRF   16
318C:  BTFSC  FF2.7
318E:  BSF    16.7
3190:  BCF    FF2.7
3192:  MOVFF  6C,94
3196:  CALL   0246
319A:  BTFSC  16.7
319C:  BSF    FF2.7
....................                                rb2=0; 
319E:  BCF    F81.2
....................                                rb3=0; 
31A0:  BCF    F81.3
....................                                delay_ms(quantum); 
31A2:  MOVFF  6D,85
31A6:  INCF   x85,F
31A8:  DECF   x85,F
31AA:  BTFSC  FD8.2
31AC:  BRA    31C4
31AE:  CLRF   16
31B0:  BTFSC  FF2.7
31B2:  BSF    16.7
31B4:  BCF    FF2.7
31B6:  MOVLW  FF
31B8:  MOVWF  x94
31BA:  CALL   0246
31BE:  BTFSC  16.7
31C0:  BSF    FF2.7
31C2:  BRA    31A8
31C4:  CLRF   16
31C6:  BTFSC  FF2.7
31C8:  BSF    16.7
31CA:  BCF    FF2.7
31CC:  MOVFF  6C,94
31D0:  CALL   0246
31D4:  BTFSC  16.7
31D6:  BSF    FF2.7
....................                                                      }  
....................                              else{ 
31D8:  BRA    327E
31DA:  CLRF   16
31DC:  BTFSC  FF2.7
31DE:  BSF    16.7
31E0:  BCF    FF2.7
....................                                         if(quantum*contador3<=time3){ 
31E2:  MOVFF  6D,93
31E6:  MOVFF  6C,92
31EA:  CLRF   x95
31EC:  MOVFF  1E,94
31F0:  CALL   026C
31F4:  BTFSC  16.7
31F6:  BSF    FF2.7
31F8:  MOVFF  02,86
31FC:  MOVFF  01,85
3200:  MOVF   02,W
3202:  SUBWF  6B,W
3204:  BNC   327E
3206:  BNZ   320E
3208:  MOVF   x85,W
320A:  SUBWF  6A,W
320C:  BNC   327E
....................                                rb3=1; 
320E:  BSF    F81.3
....................                                delay_ms(quantum); 
3210:  MOVFF  6D,85
3214:  INCF   x85,F
3216:  DECF   x85,F
3218:  BTFSC  FD8.2
321A:  BRA    3232
321C:  CLRF   16
321E:  BTFSC  FF2.7
3220:  BSF    16.7
3222:  BCF    FF2.7
3224:  MOVLW  FF
3226:  MOVWF  x94
3228:  CALL   0246
322C:  BTFSC  16.7
322E:  BSF    FF2.7
3230:  BRA    3216
3232:  CLRF   16
3234:  BTFSC  FF2.7
3236:  BSF    16.7
3238:  BCF    FF2.7
323A:  MOVFF  6C,94
323E:  CALL   0246
3242:  BTFSC  16.7
3244:  BSF    FF2.7
....................                                rb3=0; 
3246:  BCF    F81.3
....................                                
....................                                delay_ms(quantum); 
3248:  MOVFF  6D,85
324C:  INCF   x85,F
324E:  DECF   x85,F
3250:  BTFSC  FD8.2
3252:  BRA    326A
3254:  CLRF   16
3256:  BTFSC  FF2.7
3258:  BSF    16.7
325A:  BCF    FF2.7
325C:  MOVLW  FF
325E:  MOVWF  x94
3260:  CALL   0246
3264:  BTFSC  16.7
3266:  BSF    FF2.7
3268:  BRA    324E
326A:  CLRF   16
326C:  BTFSC  FF2.7
326E:  BSF    16.7
3270:  BCF    FF2.7
3272:  MOVFF  6C,94
3276:  CALL   0246
327A:  BTFSC  16.7
327C:  BSF    FF2.7
....................                                                      }                
....................                                                       
....................                                                      } 
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
327E:  MOVF   1C,W
3280:  SUBLW  0A
3282:  BNZ   3288
3284:  CALL   0F30
....................                  if(contador3==20 )do_proceso3(); 
3288:  MOVF   1E,W
328A:  SUBLW  14
328C:  BNZ   3292
328E:  CALL   0FE0
....................                  if(contador2==16 )do_proceso2(); 
3292:  MOVF   1D,W
3294:  SUBLW  10
3296:  BNZ   329C
3298:  CALL   0F88
....................                   contador1++; 
329C:  INCF   1C,F
....................                   contador2++; 
329E:  INCF   1D,F
....................  
....................                          }///// 
32A0:  INCF   1E,F
32A2:  BRA    2FC8
....................                      } 
....................                  /// 
....................                  else  {/////////////// 
32A4:  BRA    34DC
....................                         for (contador1=copia1;contador1<=10;contador1++){ 
32A6:  MOVFF  1F,1C
32AA:  MOVF   1C,W
32AC:  SUBLW  0A
32AE:  BTFSS  FD8.0
32B0:  BRA    34DC
....................                       copia1=contador1; 
32B2:  MOVFF  1C,1F
32B6:  CLRF   16
32B8:  BTFSC  FF2.7
32BA:  BSF    16.7
32BC:  BCF    FF2.7
....................                     if(quantum*contador2<=time2){ 
32BE:  MOVFF  6D,93
32C2:  MOVFF  6C,92
32C6:  CLRF   x95
32C8:  MOVFF  1D,94
32CC:  CALL   026C
32D0:  BTFSC  16.7
32D2:  BSF    FF2.7
32D4:  MOVFF  02,86
32D8:  MOVFF  01,85
32DC:  MOVF   02,W
32DE:  SUBWF  69,W
32E0:  BTFSS  FD8.0
32E2:  BRA    3412
32E4:  BNZ   32EE
32E6:  MOVF   x85,W
32E8:  SUBWF  68,W
32EA:  BTFSS  FD8.0
32EC:  BRA    3412
32EE:  CLRF   16
32F0:  BTFSC  FF2.7
32F2:  BSF    16.7
32F4:  BCF    FF2.7
....................                     if(quantum*contador3<=time3){ 
32F6:  MOVFF  6D,93
32FA:  MOVFF  6C,92
32FE:  CLRF   x95
3300:  MOVFF  1E,94
3304:  CALL   026C
3308:  BTFSC  16.7
330A:  BSF    FF2.7
330C:  MOVFF  02,86
3310:  MOVFF  01,85
3314:  MOVF   02,W
3316:  SUBWF  6B,W
3318:  BNC   339C
331A:  BNZ   3322
331C:  MOVF   x85,W
331E:  SUBWF  6A,W
3320:  BNC   339C
....................                              rb2=1; 
3322:  BSF    F81.2
....................                              rb3=1; 
3324:  BSF    F81.3
....................                              rb1=1; 
3326:  BSF    F81.1
....................                              delay_ms(quantum); 
3328:  MOVFF  6D,85
332C:  INCF   x85,F
332E:  DECF   x85,F
3330:  BTFSC  FD8.2
3332:  BRA    334A
3334:  CLRF   16
3336:  BTFSC  FF2.7
3338:  BSF    16.7
333A:  BCF    FF2.7
333C:  MOVLW  FF
333E:  MOVWF  x94
3340:  CALL   0246
3344:  BTFSC  16.7
3346:  BSF    FF2.7
3348:  BRA    332E
334A:  CLRF   16
334C:  BTFSC  FF2.7
334E:  BSF    16.7
3350:  BCF    FF2.7
3352:  MOVFF  6C,94
3356:  CALL   0246
335A:  BTFSC  16.7
335C:  BSF    FF2.7
....................                              rb2=0; 
335E:  BCF    F81.2
....................                              rb3=0; 
3360:  BCF    F81.3
....................                              rb1=0; 
3362:  BCF    F81.1
....................                              delay_ms(quantum); 
3364:  MOVFF  6D,85
3368:  INCF   x85,F
336A:  DECF   x85,F
336C:  BTFSC  FD8.2
336E:  BRA    3386
3370:  CLRF   16
3372:  BTFSC  FF2.7
3374:  BSF    16.7
3376:  BCF    FF2.7
3378:  MOVLW  FF
337A:  MOVWF  x94
337C:  CALL   0246
3380:  BTFSC  16.7
3382:  BSF    FF2.7
3384:  BRA    336A
3386:  CLRF   16
3388:  BTFSC  FF2.7
338A:  BSF    16.7
338C:  BCF    FF2.7
338E:  MOVFF  6C,94
3392:  CALL   0246
3396:  BTFSC  16.7
3398:  BSF    FF2.7
....................                     } 
....................                     else{    
339A:  BRA    3410
....................                              rb2=1; 
339C:  BSF    F81.2
....................                              rb1=1; 
339E:  BSF    F81.1
....................                              delay_ms(quantum); 
33A0:  MOVFF  6D,85
33A4:  INCF   x85,F
33A6:  DECF   x85,F
33A8:  BTFSC  FD8.2
33AA:  BRA    33C2
33AC:  CLRF   16
33AE:  BTFSC  FF2.7
33B0:  BSF    16.7
33B2:  BCF    FF2.7
33B4:  MOVLW  FF
33B6:  MOVWF  x94
33B8:  CALL   0246
33BC:  BTFSC  16.7
33BE:  BSF    FF2.7
33C0:  BRA    33A6
33C2:  CLRF   16
33C4:  BTFSC  FF2.7
33C6:  BSF    16.7
33C8:  BCF    FF2.7
33CA:  MOVFF  6C,94
33CE:  CALL   0246
33D2:  BTFSC  16.7
33D4:  BSF    FF2.7
....................                              rb2=0; 
33D6:  BCF    F81.2
....................                              rb1=0; 
33D8:  BCF    F81.1
....................                              delay_ms(quantum); 
33DA:  MOVFF  6D,85
33DE:  INCF   x85,F
33E0:  DECF   x85,F
33E2:  BTFSC  FD8.2
33E4:  BRA    33FC
33E6:  CLRF   16
33E8:  BTFSC  FF2.7
33EA:  BSF    16.7
33EC:  BCF    FF2.7
33EE:  MOVLW  FF
33F0:  MOVWF  x94
33F2:  CALL   0246
33F6:  BTFSC  16.7
33F8:  BSF    FF2.7
33FA:  BRA    33E0
33FC:  CLRF   16
33FE:  BTFSC  FF2.7
3400:  BSF    16.7
3402:  BCF    FF2.7
3404:  MOVFF  6C,94
3408:  CALL   0246
340C:  BTFSC  16.7
340E:  BSF    FF2.7
....................                     } 
....................                                                } 
....................                                                 
....................                    else  {       if(quantum*contador1<=time1){  
3410:  BRA    34B6
3412:  CLRF   16
3414:  BTFSC  FF2.7
3416:  BSF    16.7
3418:  BCF    FF2.7
341A:  MOVFF  6D,93
341E:  MOVFF  6C,92
3422:  CLRF   x95
3424:  MOVFF  1C,94
3428:  CALL   026C
342C:  BTFSC  16.7
342E:  BSF    FF2.7
3430:  MOVFF  02,86
3434:  MOVFF  01,85
3438:  MOVF   02,W
343A:  SUBWF  67,W
343C:  BNC   34B6
343E:  BNZ   3446
3440:  MOVF   x85,W
3442:  SUBWF  66,W
3444:  BNC   34B6
....................                                rb1=1; 
3446:  BSF    F81.1
....................                                delay_ms(quantum); 
3448:  MOVFF  6D,85
344C:  INCF   x85,F
344E:  DECF   x85,F
3450:  BTFSC  FD8.2
3452:  BRA    346A
3454:  CLRF   16
3456:  BTFSC  FF2.7
3458:  BSF    16.7
345A:  BCF    FF2.7
345C:  MOVLW  FF
345E:  MOVWF  x94
3460:  CALL   0246
3464:  BTFSC  16.7
3466:  BSF    FF2.7
3468:  BRA    344E
346A:  CLRF   16
346C:  BTFSC  FF2.7
346E:  BSF    16.7
3470:  BCF    FF2.7
3472:  MOVFF  6C,94
3476:  CALL   0246
347A:  BTFSC  16.7
347C:  BSF    FF2.7
....................                                rb1=0;                            
347E:  BCF    F81.1
....................                                delay_ms(quantum);  }     
3480:  MOVFF  6D,85
3484:  INCF   x85,F
3486:  DECF   x85,F
3488:  BTFSC  FD8.2
348A:  BRA    34A2
348C:  CLRF   16
348E:  BTFSC  FF2.7
3490:  BSF    16.7
3492:  BCF    FF2.7
3494:  MOVLW  FF
3496:  MOVWF  x94
3498:  CALL   0246
349C:  BTFSC  16.7
349E:  BSF    FF2.7
34A0:  BRA    3486
34A2:  CLRF   16
34A4:  BTFSC  FF2.7
34A6:  BSF    16.7
34A8:  BCF    FF2.7
34AA:  MOVFF  6C,94
34AE:  CALL   0246
34B2:  BTFSC  16.7
34B4:  BSF    FF2.7
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
34B6:  MOVF   1C,W
34B8:  SUBLW  0A
34BA:  BNZ   34C0
34BC:  CALL   0F30
....................                  if(contador3==20 )do_proceso3(); 
34C0:  MOVF   1E,W
34C2:  SUBLW  14
34C4:  BNZ   34CA
34C6:  CALL   0FE0
....................                  if(contador2==16 )do_proceso2(); 
34CA:  MOVF   1D,W
34CC:  SUBLW  10
34CE:  BNZ   34D4
34D0:  CALL   0F88
....................                   contador3++; 
34D4:  INCF   1E,F
....................                   contador2++; 
34D6:  INCF   1D,F
....................  
....................                          }///// 
34D8:  INCF   1C,F
34DA:  BRA    32AA
....................                   
....................                   
....................                  } 
....................                           
....................                          
....................                   
....................                                        } 
....................                } ///// 
....................                 
....................                /// 
....................                else{////////////////////////////kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk 
34DC:  BRA    3ADC
....................                     for (contador2=1;contador2<=16;contador2++){ 
34DE:  MOVLW  01
34E0:  MOVWF  1D
34E2:  MOVF   1D,W
34E4:  SUBLW  10
34E6:  BTFSS  FD8.0
34E8:  BRA    365E
....................                     copia2=contador2; 
34EA:  MOVFF  1D,20
34EE:  CLRF   16
34F0:  BTFSC  FF2.7
34F2:  BSF    16.7
34F4:  BCF    FF2.7
....................                     if(quantum*contador3<time3){ 
34F6:  MOVFF  6D,93
34FA:  MOVFF  6C,92
34FE:  CLRF   x95
3500:  MOVFF  1E,94
3504:  CALL   026C
3508:  BTFSC  16.7
350A:  BSF    FF2.7
350C:  MOVFF  02,86
3510:  MOVFF  01,85
3514:  MOVF   02,W
3516:  SUBWF  6B,W
3518:  BNC   3598
351A:  BNZ   3522
351C:  MOVF   6A,W
351E:  SUBWF  x85,W
3520:  BC    3598
....................                       
....................                       rb3=1; 
3522:  BSF    F81.3
....................                       rb2=1; 
3524:  BSF    F81.2
....................                       delay_ms(quantum); 
3526:  MOVFF  6D,85
352A:  INCF   x85,F
352C:  DECF   x85,F
352E:  BTFSC  FD8.2
3530:  BRA    3548
3532:  CLRF   16
3534:  BTFSC  FF2.7
3536:  BSF    16.7
3538:  BCF    FF2.7
353A:  MOVLW  FF
353C:  MOVWF  x94
353E:  CALL   0246
3542:  BTFSC  16.7
3544:  BSF    FF2.7
3546:  BRA    352C
3548:  CLRF   16
354A:  BTFSC  FF2.7
354C:  BSF    16.7
354E:  BCF    FF2.7
3550:  MOVFF  6C,94
3554:  CALL   0246
3558:  BTFSC  16.7
355A:  BSF    FF2.7
....................                       rb3=0; 
355C:  BCF    F81.3
....................                       rb2=0; 
355E:  BCF    F81.2
....................                       
....................                       delay_ms(quantum); 
3560:  MOVFF  6D,85
3564:  INCF   x85,F
3566:  DECF   x85,F
3568:  BTFSC  FD8.2
356A:  BRA    3582
356C:  CLRF   16
356E:  BTFSC  FF2.7
3570:  BSF    16.7
3572:  BCF    FF2.7
3574:  MOVLW  FF
3576:  MOVWF  x94
3578:  CALL   0246
357C:  BTFSC  16.7
357E:  BSF    FF2.7
3580:  BRA    3566
3582:  CLRF   16
3584:  BTFSC  FF2.7
3586:  BSF    16.7
3588:  BCF    FF2.7
358A:  MOVFF  6C,94
358E:  CALL   0246
3592:  BTFSC  16.7
3594:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
3596:  BRA    363C
3598:  CLRF   16
359A:  BTFSC  FF2.7
359C:  BSF    16.7
359E:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<=time2){ 
35A0:  MOVFF  6D,93
35A4:  MOVFF  6C,92
35A8:  CLRF   x95
35AA:  MOVFF  1D,94
35AE:  CALL   026C
35B2:  BTFSC  16.7
35B4:  BSF    FF2.7
35B6:  MOVFF  02,86
35BA:  MOVFF  01,85
35BE:  MOVF   02,W
35C0:  SUBWF  69,W
35C2:  BNC   363C
35C4:  BNZ   35CC
35C6:  MOVF   x85,W
35C8:  SUBWF  68,W
35CA:  BNC   363C
....................                                 
....................                                rb2=1; 
35CC:  BSF    F81.2
....................                                delay_ms(quantum); 
35CE:  MOVFF  6D,85
35D2:  INCF   x85,F
35D4:  DECF   x85,F
35D6:  BTFSC  FD8.2
35D8:  BRA    35F0
35DA:  CLRF   16
35DC:  BTFSC  FF2.7
35DE:  BSF    16.7
35E0:  BCF    FF2.7
35E2:  MOVLW  FF
35E4:  MOVWF  x94
35E6:  CALL   0246
35EA:  BTFSC  16.7
35EC:  BSF    FF2.7
35EE:  BRA    35D4
35F0:  CLRF   16
35F2:  BTFSC  FF2.7
35F4:  BSF    16.7
35F6:  BCF    FF2.7
35F8:  MOVFF  6C,94
35FC:  CALL   0246
3600:  BTFSC  16.7
3602:  BSF    FF2.7
....................                                rb2=0; 
3604:  BCF    F81.2
....................                                delay_ms(quantum); 
3606:  MOVFF  6D,85
360A:  INCF   x85,F
360C:  DECF   x85,F
360E:  BTFSC  FD8.2
3610:  BRA    3628
3612:  CLRF   16
3614:  BTFSC  FF2.7
3616:  BSF    16.7
3618:  BCF    FF2.7
361A:  MOVLW  FF
361C:  MOVWF  x94
361E:  CALL   0246
3622:  BTFSC  16.7
3624:  BSF    FF2.7
3626:  BRA    360C
3628:  CLRF   16
362A:  BTFSC  FF2.7
362C:  BSF    16.7
362E:  BCF    FF2.7
3630:  MOVFF  6C,94
3634:  CALL   0246
3638:  BTFSC  16.7
363A:  BSF    FF2.7
....................                                                      }  
....................                          } 
....................  
....................                  if(contador2==16 ) do_proceso2(); 
363C:  MOVF   1D,W
363E:  SUBLW  10
3640:  BNZ   3646
3642:  CALL   0F88
....................                  if(contador3==20 )do_proceso3(); 
3646:  MOVF   1E,W
3648:  SUBLW  14
364A:  BNZ   3650
364C:  CALL   0FE0
....................                   
....................                  if(tecla_pulsada=='1'){ 
3650:  MOVF   1A,W
3652:  SUBLW  31
3654:  BNZ   3658
....................                       break; 
3656:  BRA    365E
....................                   } 
....................                   contador3++; 
3658:  INCF   1E,F
....................  
....................                  } 
365A:  INCF   1D,F
365C:  BRA    34E2
....................                  if(tecla_pulsada=='1'){ 
365E:  MOVF   1A,W
3660:  SUBLW  31
3662:  BTFSS  FD8.2
3664:  BRA    3ADC
....................                          if(copia3<=10){ 
3666:  MOVF   21,W
3668:  SUBLW  0A
366A:  BTFSS  FD8.0
366C:  BRA    38A6
....................                          for (contador2=copia2;contador2<=16;contador2++){ 
366E:  MOVFF  20,1D
3672:  MOVF   1D,W
3674:  SUBLW  10
3676:  BTFSS  FD8.0
3678:  BRA    38A4
....................                               copia2=contador2; 
367A:  MOVFF  1D,20
367E:  CLRF   16
3680:  BTFSC  FF2.7
3682:  BSF    16.7
3684:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
3686:  MOVFF  6D,93
368A:  MOVFF  6C,92
368E:  CLRF   x95
3690:  MOVFF  1C,94
3694:  CALL   026C
3698:  BTFSC  16.7
369A:  BSF    FF2.7
369C:  MOVFF  02,86
36A0:  MOVFF  01,85
36A4:  MOVF   02,W
36A6:  SUBWF  67,W
36A8:  BTFSS  FD8.0
36AA:  BRA    37DA
36AC:  BNZ   36B6
36AE:  MOVF   x85,W
36B0:  SUBWF  66,W
36B2:  BTFSS  FD8.0
36B4:  BRA    37DA
36B6:  CLRF   16
36B8:  BTFSC  FF2.7
36BA:  BSF    16.7
36BC:  BCF    FF2.7
....................                     if(quantum*contador3<=time3){ 
36BE:  MOVFF  6D,93
36C2:  MOVFF  6C,92
36C6:  CLRF   x95
36C8:  MOVFF  1E,94
36CC:  CALL   026C
36D0:  BTFSC  16.7
36D2:  BSF    FF2.7
36D4:  MOVFF  02,86
36D8:  MOVFF  01,85
36DC:  MOVF   02,W
36DE:  SUBWF  6B,W
36E0:  BNC   3764
36E2:  BNZ   36EA
36E4:  MOVF   x85,W
36E6:  SUBWF  6A,W
36E8:  BNC   3764
....................                              rb2=1; 
36EA:  BSF    F81.2
....................                              rb3=1; 
36EC:  BSF    F81.3
....................                              rb1=1; 
36EE:  BSF    F81.1
....................                              delay_ms(quantum); 
36F0:  MOVFF  6D,85
36F4:  INCF   x85,F
36F6:  DECF   x85,F
36F8:  BTFSC  FD8.2
36FA:  BRA    3712
36FC:  CLRF   16
36FE:  BTFSC  FF2.7
3700:  BSF    16.7
3702:  BCF    FF2.7
3704:  MOVLW  FF
3706:  MOVWF  x94
3708:  CALL   0246
370C:  BTFSC  16.7
370E:  BSF    FF2.7
3710:  BRA    36F6
3712:  CLRF   16
3714:  BTFSC  FF2.7
3716:  BSF    16.7
3718:  BCF    FF2.7
371A:  MOVFF  6C,94
371E:  CALL   0246
3722:  BTFSC  16.7
3724:  BSF    FF2.7
....................                              rb2=0; 
3726:  BCF    F81.2
....................                              rb3=0; 
3728:  BCF    F81.3
....................                              rb1=0; 
372A:  BCF    F81.1
....................                              delay_ms(quantum); 
372C:  MOVFF  6D,85
3730:  INCF   x85,F
3732:  DECF   x85,F
3734:  BTFSC  FD8.2
3736:  BRA    374E
3738:  CLRF   16
373A:  BTFSC  FF2.7
373C:  BSF    16.7
373E:  BCF    FF2.7
3740:  MOVLW  FF
3742:  MOVWF  x94
3744:  CALL   0246
3748:  BTFSC  16.7
374A:  BSF    FF2.7
374C:  BRA    3732
374E:  CLRF   16
3750:  BTFSC  FF2.7
3752:  BSF    16.7
3754:  BCF    FF2.7
3756:  MOVFF  6C,94
375A:  CALL   0246
375E:  BTFSC  16.7
3760:  BSF    FF2.7
....................                     } 
....................                     else{   
3762:  BRA    37D8
....................                              rb2=1; 
3764:  BSF    F81.2
....................                              rb1=1; 
3766:  BSF    F81.1
....................                              delay_ms(quantum); 
3768:  MOVFF  6D,85
376C:  INCF   x85,F
376E:  DECF   x85,F
3770:  BTFSC  FD8.2
3772:  BRA    378A
3774:  CLRF   16
3776:  BTFSC  FF2.7
3778:  BSF    16.7
377A:  BCF    FF2.7
377C:  MOVLW  FF
377E:  MOVWF  x94
3780:  CALL   0246
3784:  BTFSC  16.7
3786:  BSF    FF2.7
3788:  BRA    376E
378A:  CLRF   16
378C:  BTFSC  FF2.7
378E:  BSF    16.7
3790:  BCF    FF2.7
3792:  MOVFF  6C,94
3796:  CALL   0246
379A:  BTFSC  16.7
379C:  BSF    FF2.7
....................                              rb2=0; 
379E:  BCF    F81.2
....................                              rb1=0; 
37A0:  BCF    F81.1
....................                              delay_ms(quantum); 
37A2:  MOVFF  6D,85
37A6:  INCF   x85,F
37A8:  DECF   x85,F
37AA:  BTFSC  FD8.2
37AC:  BRA    37C4
37AE:  CLRF   16
37B0:  BTFSC  FF2.7
37B2:  BSF    16.7
37B4:  BCF    FF2.7
37B6:  MOVLW  FF
37B8:  MOVWF  x94
37BA:  CALL   0246
37BE:  BTFSC  16.7
37C0:  BSF    FF2.7
37C2:  BRA    37A8
37C4:  CLRF   16
37C6:  BTFSC  FF2.7
37C8:  BSF    16.7
37CA:  BCF    FF2.7
37CC:  MOVFF  6C,94
37D0:  CALL   0246
37D4:  BTFSC  16.7
37D6:  BSF    FF2.7
....................                     } 
....................                                                } 
....................                                                 
....................                    else  { 
37D8:  BRA    387E
37DA:  CLRF   16
37DC:  BTFSC  FF2.7
37DE:  BSF    16.7
37E0:  BCF    FF2.7
....................                               if(quantum*contador2<=time2){ 
37E2:  MOVFF  6D,93
37E6:  MOVFF  6C,92
37EA:  CLRF   x95
37EC:  MOVFF  1D,94
37F0:  CALL   026C
37F4:  BTFSC  16.7
37F6:  BSF    FF2.7
37F8:  MOVFF  02,86
37FC:  MOVFF  01,85
3800:  MOVF   02,W
3802:  SUBWF  69,W
3804:  BNC   387E
3806:  BNZ   380E
3808:  MOVF   x85,W
380A:  SUBWF  68,W
380C:  BNC   387E
....................                                rb2=1; 
380E:  BSF    F81.2
....................                                delay_ms(quantum); 
3810:  MOVFF  6D,85
3814:  INCF   x85,F
3816:  DECF   x85,F
3818:  BTFSC  FD8.2
381A:  BRA    3832
381C:  CLRF   16
381E:  BTFSC  FF2.7
3820:  BSF    16.7
3822:  BCF    FF2.7
3824:  MOVLW  FF
3826:  MOVWF  x94
3828:  CALL   0246
382C:  BTFSC  16.7
382E:  BSF    FF2.7
3830:  BRA    3816
3832:  CLRF   16
3834:  BTFSC  FF2.7
3836:  BSF    16.7
3838:  BCF    FF2.7
383A:  MOVFF  6C,94
383E:  CALL   0246
3842:  BTFSC  16.7
3844:  BSF    FF2.7
....................                                rb2=0; 
3846:  BCF    F81.2
....................                                delay_ms(quantum); 
3848:  MOVFF  6D,85
384C:  INCF   x85,F
384E:  DECF   x85,F
3850:  BTFSC  FD8.2
3852:  BRA    386A
3854:  CLRF   16
3856:  BTFSC  FF2.7
3858:  BSF    16.7
385A:  BCF    FF2.7
385C:  MOVLW  FF
385E:  MOVWF  x94
3860:  CALL   0246
3864:  BTFSC  16.7
3866:  BSF    FF2.7
3868:  BRA    384E
386A:  CLRF   16
386C:  BTFSC  FF2.7
386E:  BSF    16.7
3870:  BCF    FF2.7
3872:  MOVFF  6C,94
3876:  CALL   0246
387A:  BTFSC  16.7
387C:  BSF    FF2.7
....................                                                      }                
....................                                                       
....................                                                    
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
387E:  MOVF   1C,W
3880:  SUBLW  0A
3882:  BNZ   3888
3884:  CALL   0F30
....................                  if(contador3==20 )do_proceso3(); 
3888:  MOVF   1E,W
388A:  SUBLW  14
388C:  BNZ   3892
388E:  CALL   0FE0
....................                  if(contador2==16 )do_proceso2(); 
3892:  MOVF   1D,W
3894:  SUBLW  10
3896:  BNZ   389C
3898:  CALL   0F88
....................                   contador3++; 
389C:  INCF   1E,F
....................                   contador1++; 
389E:  INCF   1C,F
....................  
....................                          }///// 
38A0:  INCF   1D,F
38A2:  BRA    3672
....................                      } 
....................                  /// 
....................                  else  { 
38A4:  BRA    3ADC
....................                         for (contador2=copia2;contador2<=16;contador2++){ 
38A6:  MOVFF  20,1D
38AA:  MOVF   1D,W
38AC:  SUBLW  10
38AE:  BTFSS  FD8.0
38B0:  BRA    3ADC
....................                       copia2=contador2; 
38B2:  MOVFF  1D,20
38B6:  CLRF   16
38B8:  BTFSC  FF2.7
38BA:  BSF    16.7
38BC:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
38BE:  MOVFF  6D,93
38C2:  MOVFF  6C,92
38C6:  CLRF   x95
38C8:  MOVFF  1C,94
38CC:  CALL   026C
38D0:  BTFSC  16.7
38D2:  BSF    FF2.7
38D4:  MOVFF  02,86
38D8:  MOVFF  01,85
38DC:  MOVF   02,W
38DE:  SUBWF  67,W
38E0:  BTFSS  FD8.0
38E2:  BRA    3A12
38E4:  BNZ   38EE
38E6:  MOVF   x85,W
38E8:  SUBWF  66,W
38EA:  BTFSS  FD8.0
38EC:  BRA    3A12
38EE:  CLRF   16
38F0:  BTFSC  FF2.7
38F2:  BSF    16.7
38F4:  BCF    FF2.7
....................                     if(quantum*contador3<=time3){ 
38F6:  MOVFF  6D,93
38FA:  MOVFF  6C,92
38FE:  CLRF   x95
3900:  MOVFF  1E,94
3904:  CALL   026C
3908:  BTFSC  16.7
390A:  BSF    FF2.7
390C:  MOVFF  02,86
3910:  MOVFF  01,85
3914:  MOVF   02,W
3916:  SUBWF  6B,W
3918:  BNC   399C
391A:  BNZ   3922
391C:  MOVF   x85,W
391E:  SUBWF  6A,W
3920:  BNC   399C
....................                              rb2=1; 
3922:  BSF    F81.2
....................                              rb3=1; 
3924:  BSF    F81.3
....................                              rb1=1; 
3926:  BSF    F81.1
....................                              delay_ms(quantum); 
3928:  MOVFF  6D,85
392C:  INCF   x85,F
392E:  DECF   x85,F
3930:  BTFSC  FD8.2
3932:  BRA    394A
3934:  CLRF   16
3936:  BTFSC  FF2.7
3938:  BSF    16.7
393A:  BCF    FF2.7
393C:  MOVLW  FF
393E:  MOVWF  x94
3940:  CALL   0246
3944:  BTFSC  16.7
3946:  BSF    FF2.7
3948:  BRA    392E
394A:  CLRF   16
394C:  BTFSC  FF2.7
394E:  BSF    16.7
3950:  BCF    FF2.7
3952:  MOVFF  6C,94
3956:  CALL   0246
395A:  BTFSC  16.7
395C:  BSF    FF2.7
....................                              rb2=0; 
395E:  BCF    F81.2
....................                              rb3=0; 
3960:  BCF    F81.3
....................                              rb1=0; 
3962:  BCF    F81.1
....................                              delay_ms(quantum); 
3964:  MOVFF  6D,85
3968:  INCF   x85,F
396A:  DECF   x85,F
396C:  BTFSC  FD8.2
396E:  BRA    3986
3970:  CLRF   16
3972:  BTFSC  FF2.7
3974:  BSF    16.7
3976:  BCF    FF2.7
3978:  MOVLW  FF
397A:  MOVWF  x94
397C:  CALL   0246
3980:  BTFSC  16.7
3982:  BSF    FF2.7
3984:  BRA    396A
3986:  CLRF   16
3988:  BTFSC  FF2.7
398A:  BSF    16.7
398C:  BCF    FF2.7
398E:  MOVFF  6C,94
3992:  CALL   0246
3996:  BTFSC  16.7
3998:  BSF    FF2.7
....................                     } 
....................                     else{    
399A:  BRA    3A10
....................                              rb2=1; 
399C:  BSF    F81.2
....................                              rb1=1; 
399E:  BSF    F81.1
....................                              delay_ms(quantum); 
39A0:  MOVFF  6D,85
39A4:  INCF   x85,F
39A6:  DECF   x85,F
39A8:  BTFSC  FD8.2
39AA:  BRA    39C2
39AC:  CLRF   16
39AE:  BTFSC  FF2.7
39B0:  BSF    16.7
39B2:  BCF    FF2.7
39B4:  MOVLW  FF
39B6:  MOVWF  x94
39B8:  CALL   0246
39BC:  BTFSC  16.7
39BE:  BSF    FF2.7
39C0:  BRA    39A6
39C2:  CLRF   16
39C4:  BTFSC  FF2.7
39C6:  BSF    16.7
39C8:  BCF    FF2.7
39CA:  MOVFF  6C,94
39CE:  CALL   0246
39D2:  BTFSC  16.7
39D4:  BSF    FF2.7
....................                              rb2=0; 
39D6:  BCF    F81.2
....................                              rb1=0; 
39D8:  BCF    F81.1
....................                              delay_ms(quantum); 
39DA:  MOVFF  6D,85
39DE:  INCF   x85,F
39E0:  DECF   x85,F
39E2:  BTFSC  FD8.2
39E4:  BRA    39FC
39E6:  CLRF   16
39E8:  BTFSC  FF2.7
39EA:  BSF    16.7
39EC:  BCF    FF2.7
39EE:  MOVLW  FF
39F0:  MOVWF  x94
39F2:  CALL   0246
39F6:  BTFSC  16.7
39F8:  BSF    FF2.7
39FA:  BRA    39E0
39FC:  CLRF   16
39FE:  BTFSC  FF2.7
3A00:  BSF    16.7
3A02:  BCF    FF2.7
3A04:  MOVFF  6C,94
3A08:  CALL   0246
3A0C:  BTFSC  16.7
3A0E:  BSF    FF2.7
....................                     } 
....................                                                } 
....................                                                 
....................                    else  {        
3A10:  BRA    3AB6
3A12:  CLRF   16
3A14:  BTFSC  FF2.7
3A16:  BSF    16.7
3A18:  BCF    FF2.7
....................                    if(quantum*contador2<=time2){ 
3A1A:  MOVFF  6D,93
3A1E:  MOVFF  6C,92
3A22:  CLRF   x95
3A24:  MOVFF  1D,94
3A28:  CALL   026C
3A2C:  BTFSC  16.7
3A2E:  BSF    FF2.7
3A30:  MOVFF  02,86
3A34:  MOVFF  01,85
3A38:  MOVF   02,W
3A3A:  SUBWF  69,W
3A3C:  BNC   3AB6
3A3E:  BNZ   3A46
3A40:  MOVF   x85,W
3A42:  SUBWF  68,W
3A44:  BNC   3AB6
....................                                rb2=1; 
3A46:  BSF    F81.2
....................                                delay_ms(quantum); 
3A48:  MOVFF  6D,85
3A4C:  INCF   x85,F
3A4E:  DECF   x85,F
3A50:  BTFSC  FD8.2
3A52:  BRA    3A6A
3A54:  CLRF   16
3A56:  BTFSC  FF2.7
3A58:  BSF    16.7
3A5A:  BCF    FF2.7
3A5C:  MOVLW  FF
3A5E:  MOVWF  x94
3A60:  CALL   0246
3A64:  BTFSC  16.7
3A66:  BSF    FF2.7
3A68:  BRA    3A4E
3A6A:  CLRF   16
3A6C:  BTFSC  FF2.7
3A6E:  BSF    16.7
3A70:  BCF    FF2.7
3A72:  MOVFF  6C,94
3A76:  CALL   0246
3A7A:  BTFSC  16.7
3A7C:  BSF    FF2.7
....................                                rb2=0;                            
3A7E:  BCF    F81.2
....................                                delay_ms(quantum);  
3A80:  MOVFF  6D,85
3A84:  INCF   x85,F
3A86:  DECF   x85,F
3A88:  BTFSC  FD8.2
3A8A:  BRA    3AA2
3A8C:  CLRF   16
3A8E:  BTFSC  FF2.7
3A90:  BSF    16.7
3A92:  BCF    FF2.7
3A94:  MOVLW  FF
3A96:  MOVWF  x94
3A98:  CALL   0246
3A9C:  BTFSC  16.7
3A9E:  BSF    FF2.7
3AA0:  BRA    3A86
3AA2:  CLRF   16
3AA4:  BTFSC  FF2.7
3AA6:  BSF    16.7
3AA8:  BCF    FF2.7
3AAA:  MOVFF  6C,94
3AAE:  CALL   0246
3AB2:  BTFSC  16.7
3AB4:  BSF    FF2.7
....................                                 
....................                                } 
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
3AB6:  MOVF   1C,W
3AB8:  SUBLW  0A
3ABA:  BNZ   3AC0
3ABC:  CALL   0F30
....................                  if(contador3==20 )do_proceso3(); 
3AC0:  MOVF   1E,W
3AC2:  SUBLW  14
3AC4:  BNZ   3ACA
3AC6:  CALL   0FE0
....................                  if(contador2==16 )do_proceso2(); 
3ACA:  MOVF   1D,W
3ACC:  SUBLW  10
3ACE:  BNZ   3AD4
3AD0:  CALL   0F88
....................                   contador1++; 
3AD4:  INCF   1C,F
....................                   contador3++; 
3AD6:  INCF   1E,F
....................  
....................                          }///// 
3AD8:  INCF   1D,F
3ADA:  BRA    38AA
....................                   
....................                   
....................                                    } 
....................                           
....................                          
....................                   
....................                       } 
....................                 
....................                   } 
....................               } 
....................        }    
....................    } 
3ADC:  GOTO   3C44 (RETURN)
.................... /////////////////////////////////////// 
.................... void main(){ 
*
3AF2:  CLRF   FF8
3AF4:  BCF    FD0.7
3AF6:  BSF    07.7
3AF8:  CLRF   FEA
3AFA:  CLRF   FE9
3AFC:  MOVLW  81
3AFE:  MOVWF  FAF
3B00:  MOVLW  A6
3B02:  MOVWF  FAC
3B04:  MOVLW  90
3B06:  MOVWF  FAB
3B08:  CLRF   1C
3B0A:  CLRF   1D
3B0C:  CLRF   1E
3B0E:  CLRF   46
3B10:  CLRF   47
3B12:  CLRF   48
3B14:  MOVLW  09
3B16:  MOVWF  67
3B18:  MOVLW  C4
3B1A:  MOVWF  66
3B1C:  MOVLW  0F
3B1E:  MOVWF  69
3B20:  MOVLW  A0
3B22:  MOVWF  68
3B24:  MOVLW  13
3B26:  MOVWF  6B
3B28:  MOVLW  88
3B2A:  MOVWF  6A
3B2C:  CLRF   6D
3B2E:  MOVLW  FA
3B30:  MOVWF  6C
3B32:  BSF    FC1.0
3B34:  BSF    FC1.1
3B36:  BSF    FC1.2
3B38:  BCF    FC1.3
.................... setup_timer_0(rtcc_internal | rtcc_div_16);//quantun de 250 ms 
3B3A:  MOVLW  83
3B3C:  MOVWF  FD5
.................... set_timer0(0x01); 
3B3E:  CLRF   FD7
3B40:  MOVLW  01
3B42:  MOVWF  FD6
.................... enable_interrupts(global); 
3B44:  MOVLW  C0
3B46:  IORWF  FF2,F
.................... tris_b=0; 
3B48:  CLRF   F93
.................... port_b=0; 
3B4A:  CLRF   F81
.................... // 
.................... mensaje_recibido=0; 
3B4C:  CLRF   1B
.................... lcd_init(); 
3B4E:  GOTO   0E96
.................... lcd_putc("hola"); 
3B52:  MOVLW  74
3B54:  MOVWF  FF6
3B56:  MOVLW  0E
3B58:  MOVWF  FF7
3B5A:  CLRF   16
3B5C:  BTFSC  FF2.7
3B5E:  BSF    16.7
3B60:  BCF    FF2.7
3B62:  CALL   09DE
3B66:  BTFSC  16.7
3B68:  BSF    FF2.7
3B6A:  CLRF   16
3B6C:  BTFSC  FF2.7
3B6E:  BSF    16.7
3B70:  BCF    FF2.7
.................... delay_ms(100); 
3B72:  MOVLW  64
3B74:  MOVWF  x94
3B76:  CALL   0246
3B7A:  BTFSC  16.7
3B7C:  BSF    FF2.7
.................... lcd_putc("\f"); 
3B7E:  MOVLW  7A
3B80:  MOVWF  FF6
3B82:  MOVLW  0E
3B84:  MOVWF  FF7
3B86:  CLRF   16
3B88:  BTFSC  FF2.7
3B8A:  BSF    16.7
3B8C:  BCF    FF2.7
3B8E:  CALL   09DE
3B92:  BTFSC  16.7
3B94:  BSF    FF2.7
.................... lcd_putc("comprabando"); 
3B96:  MOVLW  7C
3B98:  MOVWF  FF6
3B9A:  MOVLW  0E
3B9C:  MOVWF  FF7
3B9E:  CLRF   16
3BA0:  BTFSC  FF2.7
3BA2:  BSF    16.7
3BA4:  BCF    FF2.7
3BA6:  CALL   09DE
3BAA:  BTFSC  16.7
3BAC:  BSF    FF2.7
3BAE:  CLRF   16
3BB0:  BTFSC  FF2.7
3BB2:  BSF    16.7
3BB4:  BCF    FF2.7
.................... lcd_gotoxy(2,2); 
3BB6:  MOVLW  02
3BB8:  MOVWF  x94
3BBA:  MOVWF  x95
3BBC:  CALL   0978
3BC0:  BTFSC  16.7
3BC2:  BSF    FF2.7
.................... lcd_putc("proceso..."); 
3BC4:  MOVLW  88
3BC6:  MOVWF  FF6
3BC8:  MOVLW  0E
3BCA:  MOVWF  FF7
3BCC:  CLRF   16
3BCE:  BTFSC  FF2.7
3BD0:  BSF    16.7
3BD2:  BCF    FF2.7
3BD4:  CALL   09DE
3BD8:  BTFSC  16.7
3BDA:  BSF    FF2.7
3BDC:  CLRF   16
3BDE:  BTFSC  FF2.7
3BE0:  BSF    16.7
3BE2:  BCF    FF2.7
.................... delay_ms(100); 
3BE4:  MOVLW  64
3BE6:  MOVWF  x94
3BE8:  CALL   0246
3BEC:  BTFSC  16.7
3BEE:  BSF    FF2.7
.................... rb6=0; 
3BF0:  BCF    F81.6
.................... pcb[0].id=0; 
3BF2:  CLRF   70
.................... pcb[1].id=1; 
3BF4:  MOVLW  01
3BF6:  MOVWF  76
.................... pcb[2].id=2; 
3BF8:  MOVLW  02
3BFA:  MOVWF  7C
.................... contador1=0; 
3BFC:  CLRF   1C
.................... contador2=0; 
3BFE:  CLRF   1D
.................... contador3=0; 
3C00:  CLRF   1E
.................... enable_interrupts(int_rda); 
3C02:  BSF    F9D.5
.................... enable_interrupts(int_timer0); 
3C04:  BSF    FF2.5
....................    while(true){             
....................          if(mensaje_recibido==1){ 
3C06:  DECFSZ 1B,W
3C08:  BRA    3C6A
....................                   lcd_putc("\f"); 
3C0A:  MOVLW  94
3C0C:  MOVWF  FF6
3C0E:  MOVLW  0E
3C10:  MOVWF  FF7
3C12:  CLRF   16
3C14:  BTFSC  FF2.7
3C16:  BSF    16.7
3C18:  BCF    FF2.7
3C1A:  CALL   09DE
3C1E:  BTFSC  16.7
3C20:  BSF    FF2.7
....................                    
....................                if(tecla_pulsada=='1'){ 
3C22:  MOVF   1A,W
3C24:  SUBLW  31
3C26:  BNZ   3C2E
....................                do_proceso11(); 
3C28:  GOTO   1038
....................                   } 
....................                else { 
3C2C:  BRA    3C44
....................                 
....................                   if(tecla_pulsada=='2')do_proceso22(); 
3C2E:  MOVF   1A,W
3C30:  SUBLW  32
3C32:  BNZ   3C3A
3C34:  GOTO   1AEE
....................                     
....................                    else{ 
3C38:  BRA    3C44
....................                     if(tecla_pulsada=='3') do_proceso33();  
3C3A:  MOVF   1A,W
3C3C:  SUBLW  33
3C3E:  BNZ   3C44
3C40:  GOTO   25A0
....................                   } 
....................                } 
....................                  
....................                 if(tecla_pulsada=='a'){ 
3C44:  MOVF   1A,W
3C46:  SUBLW  61
3C48:  BNZ   3C50
....................                 contador1=0; 
3C4A:  CLRF   1C
....................                 copia1=0; 
3C4C:  CLRF   1F
....................                 descargar_proceso1(); 
3C4E:  BRA    3AE0
....................                   } 
....................                 if(tecla_pulsada=='b'){ 
3C50:  MOVF   1A,W
3C52:  SUBLW  62
3C54:  BNZ   3C5C
....................                 contador2=0; 
3C56:  CLRF   1D
....................                 copia2=0; 
3C58:  CLRF   20
....................                 descargar_proceso2(); 
3C5A:  BRA    3AE6
....................                   } 
....................                 if(tecla_pulsada=='c'){ 
3C5C:  MOVF   1A,W
3C5E:  SUBLW  63
3C60:  BNZ   3C68
....................                 contador3=0; 
3C62:  CLRF   1E
....................                 copia3=0; 
3C64:  CLRF   21
....................                 descargar_proceso3(); 
3C66:  BRA    3AEC
....................                   } 
....................                   mensaje_recibido=0; 
3C68:  CLRF   1B
....................                   } 
....................                 
....................              } 
3C6A:  BRA    3C06
....................         } 
....................  
3C6C:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0E   BROWNOUT WDT128 NOWDT BORV20 PUT
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NODEBUG NOLVP
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTB NOWRTC
   Word  7: 400F   NOEBTR NOEBTRB
