CCS PCH C Compiler, Version 4.104, 5967               27-Nov-12 17:20

               Filename: C:\Users\pclabmt15\Desktop\x\tiempo real2\codigoc1\avance33.lst

               ROM used: 17472 bytes (53%)
                         Largest free fragment is 15292
               RAM used: 650 (42%) at main() level
                         676 (44%) worst case
               Stack:    15 worst case (8 in main + 7 for interrupts)

*
0000:  GOTO   42B2
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  FF2.5
004A:  GOTO   0054
004E:  BTFSC  FF2.2
0050:  GOTO   0BA6
0054:  BTFSS  F9D.5
0056:  GOTO   0060
005A:  BTFSC  F9E.5
005C:  GOTO   0212
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVF   04,W
0098:  MOVFF  06,FE0
009C:  MOVFF  05,FD8
00A0:  RETFIE 0
.................... #include <18f452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
.................... #fuses HS,NOPROTECT,NOWDT 
.................... #use delay(clock=20000000) 
*
024E:  MOVLW  02
0250:  MOVWF  FEA
0252:  MOVLW  9A
0254:  MOVWF  FE9
0256:  MOVF   FEF,W
0258:  BZ    0274
025A:  MOVLW  06
025C:  MOVWF  01
025E:  CLRF   00
0260:  DECFSZ 00,F
0262:  BRA    0260
0264:  DECFSZ 01,F
0266:  BRA    025E
0268:  MOVLW  7B
026A:  MOVWF  00
026C:  DECFSZ 00,F
026E:  BRA    026C
0270:  DECFSZ FEF,F
0272:  BRA    025A
0274:  RETLW  00
.................... #use rs232(baud=9600,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
.................... #define LCD_ENABLE_PIN  PIN_D2                                   //// 
.................... #define LCD_RS_PIN      PIN_D0                                    //// 
.................... #define LCD_RW_PIN      PIN_D1                                    //// 
.................... #define LCD_DATA4       PIN_D4                                    //// 
.................... #define LCD_DATA5       PIN_D5                                    //// 
.................... #define LCD_DATA6       PIN_D6                                    //// 
.................... #define LCD_DATA7       PIN_D7                                    //// 
.................... #include <LCD.c>  
.................... /////////////////////////////////////////////////////////////////////////////// 
.................... ////                             LCD.C                                     //// 
.................... ////                 Driver for common LCD modules                         //// 
.................... ////                                                                       //// 
.................... ////  lcd_init()   Must be called before any other function.               //// 
.................... ////                                                                       //// 
.................... ////  lcd_putc(c)  Will display c on the next position of the LCD.         //// 
.................... ////                     The following have special meaning:               //// 
.................... ////                      \f  Clear display                                //// 
.................... ////                      \n  Go to start of second line                   //// 
.................... ////                      \b  Move back one position                       //// 
.................... ////                                                                       //// 
.................... ////  lcd_gotoxy(x,y) Set write position on LCD (upper left is 1,1)        //// 
.................... ////                                                                       //// 
.................... ////  lcd_getc(x,y)   Returns character at position x,y on LCD             //// 
.................... ////                                                                       //// 
.................... ////  CONFIGURATION                                                        //// 
.................... ////  The LCD can be configured in one of two ways: a.) port access or     //// 
.................... ////  b.) pin access.  Port access requires the entire 7 bit interface     //// 
.................... ////  connected to one GPIO port, and the data bits (D4:D7 of the LCD)     //// 
.................... ////  connected to sequential pins on the GPIO.  Pin access                //// 
.................... ////  has no requirements, all 7 bits of the control interface can         //// 
.................... ////  can be connected to any GPIO using several ports.                    //// 
.................... ////                                                                       //// 
.................... ////  To use port access, #define LCD_DATA_PORT to the SFR location of     //// 
.................... ////  of the GPIO port that holds the interface, -AND- edit LCD_PIN_MAP    //// 
.................... ////  of this file to configure the pin order.  If you are using a         //// 
.................... ////  baseline PIC (PCB), then LCD_OUTPUT_MAP and LCD_INPUT_MAP also must  //// 
.................... ////  be defined.                                                          //// 
.................... ////                                                                       //// 
.................... ////  Example of port access:                                              //// 
.................... ////     #define LCD_DATA_PORT getenv("SFR:PORTD")                         //// 
.................... ////                                                                       //// 
.................... ////  To use pin access, the following pins must be defined:               //// 
.................... ////     LCD_ENABLE_PIN                                                    //// 
.................... ////     LCD_RS_PIN                                                        //// 
.................... ////     LCD_RW_PIN                                                        //// 
.................... ////     LCD_DATA4                                                         //// 
.................... ////     LCD_DATA5                                                         //// 
.................... ////     LCD_DATA6                                                         //// 
.................... ////     LCD_DATA7                                                         //// 
.................... ////                                                                       //// 
.................... ////  Example of pin access:                                               //// 
.................... ////     #define LCD_ENABLE_PIN  PIN_E0                                    //// 
.................... ////     #define LCD_RS_PIN      PIN_E1                                    //// 
.................... ////     #define LCD_RW_PIN      PIN_E2                                    //// 
.................... ////     #define LCD_DATA4       PIN_D4                                    //// 
.................... ////     #define LCD_DATA5       PIN_D5                                    //// 
.................... ////     #define LCD_DATA6       PIN_D6                                    //// 
.................... ////     #define LCD_DATA7       PIN_D7                                    //// 
.................... ////                                                                       //// 
.................... /////////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996,2009 Custom Computer Services           //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
....................  
.................... // define the pinout. 
.................... // only required if port access is being used. 
.................... typedef struct   
.................... {                            // This structure is overlayed 
....................    BOOLEAN enable;           // on to an I/O port to gain 
....................    BOOLEAN rs;               // access to the LCD pins. 
....................    BOOLEAN rw;               // The bits are allocated from 
....................    BOOLEAN unused;           // low order up.  ENABLE will 
....................    int     data : 4;         // be LSB pin of that port. 
....................   #if defined(__PCD__)       // The port used will be LCD_DATA_PORT. 
....................    int    reserved: 8; 
....................   #endif 
.................... } LCD_PIN_MAP; 
....................  
.................... // this is to improve compatability with previous LCD drivers that accepted 
.................... // a define labeled 'use_portb_lcd' that configured the LCD onto port B. 
.................... #if ((defined(use_portb_lcd)) && (use_portb_lcd==TRUE)) 
....................  #define LCD_DATA_PORT getenv("SFR:PORTB") 
.................... #endif 
....................  
.................... #if defined(__PCB__) 
....................    // these definitions only need to be modified for baseline PICs. 
....................    // all other PICs use LCD_PIN_MAP or individual LCD_xxx pin definitions. 
.................... /*                                    EN, RS,   RW,   UNUSED,  DATA  */ 
....................  const LCD_PIN_MAP LCD_OUTPUT_MAP =  {0,  0,    0,    0,       0}; 
....................  const LCD_PIN_MAP LCD_INPUT_MAP =   {0,  0,    0,    0,       0xF}; 
.................... #endif 
....................  
.................... ////////////////////// END CONFIGURATION /////////////////////////////////// 
....................  
.................... #ifndef LCD_ENABLE_PIN 
....................    #define lcd_output_enable(x) lcdlat.enable=x 
....................    #define lcd_enable_tris()   lcdtris.enable=0 
.................... #else 
....................    #define lcd_output_enable(x) output_bit(LCD_ENABLE_PIN, x) 
....................    #define lcd_enable_tris()  output_drive(LCD_ENABLE_PIN) 
.................... #endif 
....................  
.................... #ifndef LCD_RS_PIN 
....................    #define lcd_output_rs(x) lcdlat.rs=x 
....................    #define lcd_rs_tris()   lcdtris.rs=0 
.................... #else 
....................    #define lcd_output_rs(x) output_bit(LCD_RS_PIN, x) 
....................    #define lcd_rs_tris()  output_drive(LCD_RS_PIN) 
.................... #endif 
....................  
.................... #ifndef LCD_RW_PIN 
....................    #define lcd_output_rw(x) lcdlat.rw=x 
....................    #define lcd_rw_tris()   lcdtris.rw=0 
.................... #else 
....................    #define lcd_output_rw(x) output_bit(LCD_RW_PIN, x) 
....................    #define lcd_rw_tris()  output_drive(LCD_RW_PIN) 
.................... #endif 
....................  
.................... // original version of this library incorrectly labeled LCD_DATA0 as LCD_DATA4, 
.................... // LCD_DATA1 as LCD_DATA5, and so on.  this block of code makes the driver 
.................... // compatible with any code written for the original library 
.................... #if (defined(LCD_DATA0) && defined(LCD_DATA1) && defined(LCD_DATA2) && defined(LCD_DATA3) && !defined(LCD_DATA4) && !defined(LCD_DATA5) && !defined(LCD_DATA6) && !defined(LCD_DATA7)) 
....................    #define  LCD_DATA4    LCD_DATA0 
....................    #define  LCD_DATA5    LCD_DATA1 
....................    #define  LCD_DATA6    LCD_DATA2 
....................    #define  LCD_DATA7    LCD_DATA3 
.................... #endif 
....................  
.................... #ifndef LCD_DATA4 
.................... #ifndef LCD_DATA_PORT 
....................    #if defined(__PCB__) 
....................       #define LCD_DATA_PORT      0x06     //portb 
....................       #define set_tris_lcd(x)   set_tris_b(x) 
....................    #else 
....................      #if defined(PIN_D0) 
....................       #define LCD_DATA_PORT      getenv("SFR:PORTD")     //portd 
....................      #else 
....................       #define LCD_DATA_PORT      getenv("SFR:PORTB")     //portb 
....................      #endif 
....................    #endif    
.................... #endif 
....................  
.................... #if defined(__PCB__) 
....................    LCD_PIN_MAP lcd, lcdlat; 
....................    #byte lcd = LCD_DATA_PORT 
....................    #byte lcdlat = LCD_DATA_PORT 
.................... #elif defined(__PCM__) 
....................    LCD_PIN_MAP lcd, lcdlat, lcdtris; 
....................    #byte lcd = LCD_DATA_PORT 
....................    #byte lcdlat = LCD_DATA_PORT 
....................    #byte lcdtris = LCD_DATA_PORT+0x80 
.................... #elif defined(__PCH__) 
....................    LCD_PIN_MAP lcd, lcdlat, lcdtris; 
....................    #byte lcd = LCD_DATA_PORT 
....................    #byte lcdlat = LCD_DATA_PORT+9 
....................    #byte lcdtris = LCD_DATA_PORT+0x12 
.................... #elif defined(__PCD__) 
....................    LCD_PIN_MAP lcd, lcdlat, lcdtris; 
....................    #word lcd = LCD_DATA_PORT 
....................    #word lcdlat = LCD_DATA_PORT+2 
....................    #word lcdtris = LCD_DATA_PORT-0x02 
.................... #endif 
.................... #endif   //LCD_DATA4 not defined 
....................  
.................... #ifndef LCD_TYPE 
....................    #define LCD_TYPE 2           // 0=5x7, 1=5x10, 2=2 lines 
.................... #endif 
....................  
.................... #ifndef LCD_LINE_TWO 
....................    #define LCD_LINE_TWO 0x40    // LCD RAM address for the second line 
.................... #endif 
....................  
.................... BYTE const LCD_INIT_STRING[4] = {0x20 | (LCD_TYPE << 2), 0xc, 1, 6}; 
....................                              // These bytes need to be sent to the LCD 
....................                              // to start it up. 
....................  
.................... BYTE lcd_read_nibble(void); 
....................  
.................... BYTE lcd_read_byte(void) 
.................... { 
....................    BYTE low,high; 
....................  
....................  #if defined(__PCB__) 
....................    set_tris_lcd(LCD_INPUT_MAP); 
....................  #else 
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
....................    output_float(LCD_DATA4); 
*
0A1E:  BSF    F95.4
....................    output_float(LCD_DATA5); 
0A20:  BSF    F95.5
....................    output_float(LCD_DATA6); 
0A22:  BSF    F95.6
....................    output_float(LCD_DATA7); 
0A24:  BSF    F95.7
....................   #else 
....................    lcdtris.data = 0xF; 
....................   #endif 
....................  #endif 
....................          
....................    lcd_output_rw(1); 
0A26:  BSF    F8C.1
0A28:  BCF    F95.1
....................    delay_cycles(1); 
0A2A:  NOP   
....................    lcd_output_enable(1); 
0A2C:  BSF    F8C.2
0A2E:  BCF    F95.2
....................    delay_cycles(1); 
0A30:  NOP   
....................    high = lcd_read_nibble(); 
0A32:  RCALL  09C8
0A34:  MOVFF  01,2A1
....................        
....................    lcd_output_enable(0); 
0A38:  BCF    F8C.2
0A3A:  BCF    F95.2
....................    delay_cycles(1); 
0A3C:  NOP   
....................    lcd_output_enable(1); 
0A3E:  BSF    F8C.2
0A40:  BCF    F95.2
....................    delay_us(1); 
0A42:  BRA    0A44
0A44:  BRA    0A46
0A46:  NOP   
....................    low = lcd_read_nibble(); 
0A48:  RCALL  09C8
0A4A:  MOVFF  01,2A0
....................        
....................    lcd_output_enable(0); 
0A4E:  BCF    F8C.2
0A50:  BCF    F95.2
....................  
....................  #if defined(__PCB__) 
....................    set_tris_lcd(LCD_INPUT_MAP); 
....................  #else 
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
....................    output_drive(LCD_DATA4); 
0A52:  BCF    F95.4
....................    output_drive(LCD_DATA5); 
0A54:  BCF    F95.5
....................    output_drive(LCD_DATA6); 
0A56:  BCF    F95.6
....................    output_drive(LCD_DATA7); 
0A58:  BCF    F95.7
....................   #else 
....................    lcdtris.data = 0x0; 
....................   #endif 
....................  #endif 
....................  
....................    return( (high<<4) | low); 
0A5A:  MOVLB  2
0A5C:  SWAPF  xA1,W
0A5E:  MOVWF  00
0A60:  MOVLW  F0
0A62:  ANDWF  00,F
0A64:  MOVF   00,W
0A66:  IORWF  xA0,W
0A68:  MOVWF  01
.................... } 
0A6A:  MOVLB  0
0A6C:  RETLW  00
....................  
.................... BYTE lcd_read_nibble(void) 
.................... { 
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
*
09C8:  MOVLB  2
09CA:  CLRF   xA2
....................    BYTE n = 0x00; 
....................  
....................    /* Read the data port */ 
....................    n |= input(LCD_DATA4); 
09CC:  BSF    F95.4
09CE:  MOVLW  00
09D0:  BTFSC  F83.4
09D2:  MOVLW  01
09D4:  IORWF  xA2,F
....................    n |= input(LCD_DATA5) << 1; 
09D6:  BSF    F95.5
09D8:  MOVLW  00
09DA:  BTFSC  F83.5
09DC:  MOVLW  01
09DE:  MOVWF  00
09E0:  BCF    FD8.0
09E2:  RLCF   00,F
09E4:  MOVF   00,W
09E6:  IORWF  xA2,F
....................    n |= input(LCD_DATA6) << 2; 
09E8:  BSF    F95.6
09EA:  MOVLW  00
09EC:  BTFSC  F83.6
09EE:  MOVLW  01
09F0:  MOVWF  00
09F2:  RLCF   00,F
09F4:  RLCF   00,F
09F6:  MOVLW  FC
09F8:  ANDWF  00,F
09FA:  MOVF   00,W
09FC:  IORWF  xA2,F
....................    n |= input(LCD_DATA7) << 3; 
09FE:  BSF    F95.7
0A00:  MOVLW  00
0A02:  BTFSC  F83.7
0A04:  MOVLW  01
0A06:  MOVWF  00
0A08:  RLCF   00,F
0A0A:  RLCF   00,F
0A0C:  RLCF   00,F
0A0E:  MOVLW  F8
0A10:  ANDWF  00,F
0A12:  MOVF   00,W
0A14:  IORWF  xA2,F
....................     
....................    return(n); 
0A16:  MOVFF  2A2,01
....................   #else 
....................    return(lcd.data); 
....................   #endif 
.................... } 
0A1A:  MOVLB  0
0A1C:  RETLW  00
....................  
.................... void lcd_send_nibble(BYTE n) 
.................... { 
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
....................    /* Write to the data port */ 
....................    output_bit(LCD_DATA4, bit_test(n, 0)); 
*
0A6E:  MOVLB  2
0A70:  BTFSC  xA1.0
0A72:  BRA    0A78
0A74:  BCF    F8C.4
0A76:  BRA    0A7A
0A78:  BSF    F8C.4
0A7A:  BCF    F95.4
....................    output_bit(LCD_DATA5, bit_test(n, 1)); 
0A7C:  BTFSC  xA1.1
0A7E:  BRA    0A84
0A80:  BCF    F8C.5
0A82:  BRA    0A86
0A84:  BSF    F8C.5
0A86:  BCF    F95.5
....................    output_bit(LCD_DATA6, bit_test(n, 2)); 
0A88:  BTFSC  xA1.2
0A8A:  BRA    0A90
0A8C:  BCF    F8C.6
0A8E:  BRA    0A92
0A90:  BSF    F8C.6
0A92:  BCF    F95.6
....................    output_bit(LCD_DATA7, bit_test(n, 3)); 
0A94:  BTFSC  xA1.3
0A96:  BRA    0A9C
0A98:  BCF    F8C.7
0A9A:  BRA    0A9E
0A9C:  BSF    F8C.7
0A9E:  BCF    F95.7
....................   #else       
....................    lcdlat.data = n; 
....................   #endif 
....................        
....................    delay_cycles(1); 
0AA0:  NOP   
....................    lcd_output_enable(1); 
0AA2:  BSF    F8C.2
0AA4:  BCF    F95.2
....................    delay_us(2); 
0AA6:  MOVLW  03
0AA8:  MOVWF  00
0AAA:  DECFSZ 00,F
0AAC:  BRA    0AAA
....................    lcd_output_enable(0); 
0AAE:  BCF    F8C.2
0AB0:  BCF    F95.2
.................... } 
0AB2:  MOVLB  0
0AB4:  RETLW  00
....................  
.................... void lcd_send_byte(BYTE address, BYTE n) 
.................... { 
....................    lcd_output_rs(0); 
0AB6:  BCF    F8C.0
0AB8:  BCF    F95.0
....................    while ( bit_test(lcd_read_byte(),7) ) ; 
0ABA:  RCALL  0A1E
0ABC:  MOVFF  01,2A0
0AC0:  MOVLB  2
0AC2:  BTFSS  01.7
0AC4:  BRA    0ACA
0AC6:  MOVLB  0
0AC8:  BRA    0ABA
....................    lcd_output_rs(address); 
0ACA:  MOVF   x9E,F
0ACC:  BNZ   0AD2
0ACE:  BCF    F8C.0
0AD0:  BRA    0AD4
0AD2:  BSF    F8C.0
0AD4:  BCF    F95.0
....................    delay_cycles(1); 
0AD6:  NOP   
....................    lcd_output_rw(0); 
0AD8:  BCF    F8C.1
0ADA:  BCF    F95.1
....................    delay_cycles(1); 
0ADC:  NOP   
....................    lcd_output_enable(0); 
0ADE:  BCF    F8C.2
0AE0:  BCF    F95.2
....................    lcd_send_nibble(n >> 4); 
0AE2:  SWAPF  x9F,W
0AE4:  MOVWF  xA0
0AE6:  MOVLW  0F
0AE8:  ANDWF  xA0,F
0AEA:  MOVFF  2A0,2A1
0AEE:  MOVLB  0
0AF0:  RCALL  0A6E
....................    lcd_send_nibble(n & 0xf); 
0AF2:  MOVLB  2
0AF4:  MOVF   x9F,W
0AF6:  ANDLW  0F
0AF8:  MOVWF  xA0
0AFA:  MOVWF  xA1
0AFC:  MOVLB  0
0AFE:  RCALL  0A6E
.................... } 
0B00:  RETLW  00
....................  
.................... void lcd_init(void)  
.................... { 
....................    BYTE i; 
....................  
....................  #if defined(__PCB__) 
....................    set_tris_lcd(LCD_OUTPUT_MAP); 
....................  #else 
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7)) 
....................    output_drive(LCD_DATA4); 
*
107A:  BCF    F95.4
....................    output_drive(LCD_DATA5); 
107C:  BCF    F95.5
....................    output_drive(LCD_DATA6); 
107E:  BCF    F95.6
....................    output_drive(LCD_DATA7); 
1080:  BCF    F95.7
....................   #else 
....................    lcdtris.data = 0x0; 
....................   #endif 
....................    lcd_enable_tris(); 
1082:  BCF    F95.2
....................    lcd_rs_tris(); 
1084:  BCF    F95.0
....................    lcd_rw_tris(); 
1086:  BCF    F95.1
....................  #endif 
....................  
....................    lcd_output_rs(0); 
1088:  BCF    F8C.0
108A:  BCF    F95.0
....................    lcd_output_rw(0); 
108C:  BCF    F8C.1
108E:  BCF    F95.1
....................    lcd_output_enable(0); 
1090:  BCF    F8C.2
1092:  BCF    F95.2
1094:  CLRF   16
1096:  BTFSC  FF2.7
1098:  BSF    16.7
109A:  BCF    FF2.7
....................      
....................    delay_ms(15); 
109C:  MOVLW  0F
109E:  MOVLB  2
10A0:  MOVWF  x9A
10A2:  MOVLB  0
10A4:  CALL   024E
10A8:  BTFSC  16.7
10AA:  BSF    FF2.7
....................    for(i=1;i<=3;++i) 
10AC:  MOVLW  01
10AE:  MOVLB  2
10B0:  MOVWF  x8A
10B2:  MOVF   x8A,W
10B4:  SUBLW  03
10B6:  BNC   10EA
10B8:  CLRF   16
10BA:  BTFSC  FF2.7
10BC:  BSF    16.7
10BE:  BCF    FF2.7
....................    { 
....................        lcd_send_nibble(3); 
10C0:  MOVLW  03
10C2:  MOVWF  xA1
10C4:  MOVLB  0
10C6:  RCALL  0A6E
10C8:  BTFSC  16.7
10CA:  BSF    FF2.7
10CC:  CLRF   16
10CE:  BTFSC  FF2.7
10D0:  BSF    16.7
10D2:  BCF    FF2.7
....................        delay_ms(5); 
10D4:  MOVLW  05
10D6:  MOVLB  2
10D8:  MOVWF  x9A
10DA:  MOVLB  0
10DC:  CALL   024E
10E0:  BTFSC  16.7
10E2:  BSF    FF2.7
....................    } 
10E4:  MOVLB  2
10E6:  INCF   x8A,F
10E8:  BRA    10B2
10EA:  CLRF   16
10EC:  BTFSC  FF2.7
10EE:  BSF    16.7
10F0:  BCF    FF2.7
....................      
....................    lcd_send_nibble(2); 
10F2:  MOVLW  02
10F4:  MOVWF  xA1
10F6:  MOVLB  0
10F8:  RCALL  0A6E
10FA:  BTFSC  16.7
10FC:  BSF    FF2.7
....................    for(i=0;i<=3;++i) 
10FE:  MOVLB  2
1100:  CLRF   x8A
1102:  MOVF   x8A,W
1104:  SUBLW  03
1106:  BNC   113A
....................       lcd_send_byte(0,LCD_INIT_STRING[i]); 
1108:  CLRF   03
110A:  MOVF   x8A,W
110C:  MOVFF  FF2,28B
1110:  BCF    FF2.7
1112:  MOVLB  0
1114:  CALL   00A2
1118:  MOVLB  2
111A:  BTFSC  x8B.7
111C:  BSF    FF2.7
111E:  MOVWF  x8B
1120:  CLRF   16
1122:  BTFSC  FF2.7
1124:  BSF    16.7
1126:  BCF    FF2.7
1128:  CLRF   x9E
112A:  MOVWF  x9F
112C:  MOVLB  0
112E:  RCALL  0AB6
1130:  BTFSC  16.7
1132:  BSF    FF2.7
1134:  MOVLB  2
1136:  INCF   x8A,F
1138:  BRA    1102
.................... } 
113A:  MOVLB  0
113C:  GOTO   4316 (RETURN)
....................  
.................... void lcd_gotoxy(BYTE x, BYTE y) 
.................... { 
....................    BYTE address; 
....................  
....................    if(y!=1) 
*
0B02:  MOVLB  2
0B04:  DECFSZ x9B,W
0B06:  BRA    0B0A
0B08:  BRA    0B10
....................       address=LCD_LINE_TWO; 
0B0A:  MOVLW  40
0B0C:  MOVWF  x9C
....................    else 
0B0E:  BRA    0B12
....................       address=0; 
0B10:  CLRF   x9C
....................       
....................    address+=x-1; 
0B12:  MOVLW  01
0B14:  SUBWF  x9A,W
0B16:  ADDWF  x9C,F
....................    lcd_send_byte(0,0x80|address); 
0B18:  MOVF   x9C,W
0B1A:  IORLW  80
0B1C:  MOVWF  x9D
0B1E:  CLRF   x9E
0B20:  MOVWF  x9F
0B22:  MOVLB  0
0B24:  RCALL  0AB6
.................... } 
0B26:  RETLW  00
....................  
.................... void lcd_putc(char c) 
.................... { 
....................    switch (c) 
....................    { 
0B28:  MOVLB  2
0B2A:  MOVF   x99,W
0B2C:  XORLW  0C
0B2E:  MOVLB  0
0B30:  BZ    0B3C
0B32:  XORLW  06
0B34:  BZ    0B56
0B36:  XORLW  02
0B38:  BZ    0B66
0B3A:  BRA    0B74
....................       case '\f'   :  lcd_send_byte(0,1); 
0B3C:  MOVLB  2
0B3E:  CLRF   x9E
0B40:  MOVLW  01
0B42:  MOVWF  x9F
0B44:  MOVLB  0
0B46:  RCALL  0AB6
....................                      delay_ms(2); 
0B48:  MOVLW  02
0B4A:  MOVLB  2
0B4C:  MOVWF  x9A
0B4E:  MOVLB  0
0B50:  CALL   024E
....................                      break; 
0B54:  BRA    0B84
....................                       
....................       case '\n'   : lcd_gotoxy(1,2);        break; 
0B56:  MOVLW  01
0B58:  MOVLB  2
0B5A:  MOVWF  x9A
0B5C:  MOVLW  02
0B5E:  MOVWF  x9B
0B60:  MOVLB  0
0B62:  RCALL  0B02
0B64:  BRA    0B84
....................       
....................       case '\b'   : lcd_send_byte(0,0x10);  break; 
0B66:  MOVLB  2
0B68:  CLRF   x9E
0B6A:  MOVLW  10
0B6C:  MOVWF  x9F
0B6E:  MOVLB  0
0B70:  RCALL  0AB6
0B72:  BRA    0B84
....................       
....................       default     : lcd_send_byte(1,c);     break; 
0B74:  MOVLW  01
0B76:  MOVLB  2
0B78:  MOVWF  x9E
0B7A:  MOVFF  299,29F
0B7E:  MOVLB  0
0B80:  RCALL  0AB6
0B82:  BRA    0B84
....................    } 
.................... } 
0B84:  RETLW  00
....................   
.................... char lcd_getc(BYTE x, BYTE y) 
.................... { 
....................    char value; 
....................  
....................    lcd_gotoxy(x,y); 
....................    while ( bit_test(lcd_read_byte(),7) ); // wait until busy flag is low 
....................    lcd_output_rs(1); 
....................    value = lcd_read_byte(); 
....................    lcd_output_rs(0); 
....................     
....................    return(value); 
.................... } 
....................  
.................... //definiendo puertos 
.................... #byte tris_a =0xf92 
.................... #byte port_a =0xf80 
.................... #byte tris_b =0xf93 
.................... #byte port_b =0xf81 
.................... #byte tris_c =0xf94 
.................... #byte port_c =0xf82 
.................... #byte tris_d =0xf95 
.................... #byte port_d =0xf83 
.................... #byte tris_e =0xf96 
.................... #byte port_e =0xf84 
.................... //definiendo bits 
.................... #bit rb0=port_b.0 //quantum 
.................... #bit rb1=port_b.1 //proceso1 
.................... #bit rb2=port_b.2 //proceso2 
.................... #bit rb3=port_b.3 //proceso3 
.................... #bit rb5=port_b.5 //sistema operativo 
.................... #bit rb6=port_b.6 //indicador si funciona el quantum 
.................... #bit rc1=port_c.1 //procesoA 
.................... #bit rc2=port_c.2 //procesoB 
.................... #bit rc3=port_c.3 //procesoC 
.................... #bit rc4=port_c.4 //procesoD 
.................... //definiendo variables 
.................... char tecla_pulsada; 
.................... int mensaje_recibido; 
.................... int contador1=0; 
.................... int contador2=0; 
.................... int contador3=0; 
.................... int copia1; 
.................... int copia2; 
.................... int copia3; 
.................... char calendario[500]; 
.................... //estados 
.................... char est1[12]; 
.................... char est2[12]; 
.................... char est3[12]; 
.................... //flags 
.................... int flag_ver=0; 
.................... int flag_procesador=0; 
.................... int flag_so=0; 
.................... //acumuladores 
.................... long int acc1; 
.................... long int acc2; 
.................... long int acc3; 
.................... //colas 
.................... int cola1; 
.................... int cola2; 
.................... int cola3; 
.................... char col_fijo[20]; 
.................... //tiempos de duracion de cada proceso 
.................... long int time1=2500;//10 
.................... long int time2=4000;//16 
.................... long int time3=5000;//20 
.................... long int quantum=250;/// 250 ms 
.................... //estructura del bloque de control de procesos(PCB) 
....................  typedef struct  { 
....................  int id; 
....................  int estado; 
....................  int dir_inicio; 
....................  int id_corriente;//el valor del PC 
....................  long int tiempo; 
....................  }bloque ; 
....................  long int acumulador; 
....................  bloque pcb[3]; 
....................  int cola [3];//cola de procesos 
....................  char col[20]; 
.................... //funcion para ver procesos 
....................  void ver_estado_proceso (int a){ 
....................  //0=vacio 
....................  //1=ejecutandose 
....................  //2=cargado 
....................      if(a==0){ 
*
0298:  MOVLB  2
029A:  MOVF   x97,F
029C:  BTFSS  FD8.2
029E:  BRA    03DE
....................     if(contador1*quantum==0) 
02A0:  CLRF   x99
02A2:  MOVFF  19,298
02A6:  MOVFF  25E,29B
02AA:  MOVFF  25D,29A
02AE:  MOVLB  0
02B0:  RCALL  0276
02B2:  MOVFF  02,299
02B6:  MOVFF  01,298
02BA:  MOVLB  2
02BC:  MOVF   x98,F
02BE:  BNZ   02EA
02C0:  MOVF   x99,F
02C2:  BNZ   02EA
....................      est1= "vacio" ; 
02C4:  MOVLW  02
02C6:  MOVWF  FEA
02C8:  MOVLW  13
02CA:  MOVWF  FE9
02CC:  MOVFF  FF2,298
02D0:  BCF    FF2.7
02D2:  MOVLW  00
02D4:  MOVLB  0
02D6:  RCALL  00C0
02D8:  TBLRD*-
02DA:  TBLRD*+
02DC:  MOVF   FF5,W
02DE:  MOVWF  FEE
02E0:  IORLW  00
02E2:  BNZ   02DA
02E4:  MOVLB  2
02E6:  BTFSC  x98.7
02E8:  BSF    FF2.7
....................      acc1=0; 
02EA:  CLRF   x3B
02EC:  CLRF   x3A
....................      cola1=0; 
02EE:  CLRF   x40
....................     if(contador1*quantum>0 && contador1*quantum<time1){ 
02F0:  CLRF   x99
02F2:  MOVFF  19,298
02F6:  MOVFF  25E,29B
02FA:  MOVFF  25D,29A
02FE:  MOVLB  0
0300:  RCALL  0276
0302:  MOVFF  02,299
0306:  MOVFF  01,298
030A:  MOVLB  2
030C:  MOVF   x98,F
030E:  BNZ   0314
0310:  MOVF   x99,F
0312:  BZ    0384
0314:  CLRF   x99
0316:  MOVFF  19,298
031A:  MOVFF  25E,29B
031E:  MOVFF  25D,29A
0322:  MOVLB  0
0324:  RCALL  0276
0326:  MOVFF  02,299
032A:  MOVFF  01,298
032E:  MOVLB  2
0330:  MOVF   02,W
0332:  SUBWF  x58,W
0334:  BNC   0384
0336:  BNZ   033E
0338:  MOVF   x57,W
033A:  SUBWF  x98,W
033C:  BC    0384
....................      est1="ejecutando"; 
033E:  MOVLW  02
0340:  MOVWF  FEA
0342:  MOVLW  13
0344:  MOVWF  FE9
0346:  MOVFF  FF2,298
034A:  BCF    FF2.7
034C:  MOVLW  00
034E:  MOVLB  0
0350:  RCALL  00D6
0352:  TBLRD*-
0354:  TBLRD*+
0356:  MOVF   FF5,W
0358:  MOVWF  FEE
035A:  IORLW  00
035C:  BNZ   0354
035E:  MOVLB  2
0360:  BTFSC  x98.7
0362:  BSF    FF2.7
....................      acc1=contador1*quantum; 
0364:  CLRF   x99
0366:  MOVFF  19,298
036A:  MOVFF  25E,29B
036E:  MOVFF  25D,29A
0372:  MOVLB  0
0374:  RCALL  0276
0376:  MOVFF  02,23B
037A:  MOVFF  01,23A
....................      cola1=1; 
037E:  MOVLW  01
0380:  MOVLB  2
0382:  MOVWF  x40
....................     } 
....................     if(contador1*quantum>=time1){ 
0384:  CLRF   x99
0386:  MOVFF  19,298
038A:  MOVFF  25E,29B
038E:  MOVFF  25D,29A
0392:  MOVLB  0
0394:  RCALL  0276
0396:  MOVFF  02,299
039A:  MOVFF  01,298
039E:  MOVLB  2
03A0:  MOVF   x58,W
03A2:  SUBWF  02,W
03A4:  BNC   03DE
03A6:  BNZ   03AE
03A8:  MOVF   x57,W
03AA:  SUBWF  x98,W
03AC:  BNC   03DE
....................      est1="cargado"; 
03AE:  MOVLW  02
03B0:  MOVWF  FEA
03B2:  MOVLW  13
03B4:  MOVWF  FE9
03B6:  MOVFF  FF2,298
03BA:  BCF    FF2.7
03BC:  MOVLW  00
03BE:  MOVLB  0
03C0:  RCALL  00F2
03C2:  TBLRD*-
03C4:  TBLRD*+
03C6:  MOVF   FF5,W
03C8:  MOVWF  FEE
03CA:  IORLW  00
03CC:  BNZ   03C4
03CE:  MOVLB  2
03D0:  BTFSC  x98.7
03D2:  BSF    FF2.7
....................      acc1=time1; 
03D4:  MOVFF  258,23B
03D8:  MOVFF  257,23A
....................      cola1=0; 
03DC:  CLRF   x40
....................     } 
....................      } 
....................      if(a==1){ 
03DE:  DECFSZ x97,W
03E0:  BRA    0520
....................     if(contador2*quantum==0) 
03E2:  CLRF   x99
03E4:  MOVFF  1A,298
03E8:  MOVFF  25E,29B
03EC:  MOVFF  25D,29A
03F0:  MOVLB  0
03F2:  RCALL  0276
03F4:  MOVFF  02,299
03F8:  MOVFF  01,298
03FC:  MOVLB  2
03FE:  MOVF   x98,F
0400:  BNZ   042C
0402:  MOVF   x99,F
0404:  BNZ   042C
....................      est2= "vacio" ; 
0406:  MOVLW  02
0408:  MOVWF  FEA
040A:  MOVLW  1F
040C:  MOVWF  FE9
040E:  MOVFF  FF2,298
0412:  BCF    FF2.7
0414:  MOVLW  00
0416:  MOVLB  0
0418:  RCALL  00C0
041A:  TBLRD*-
041C:  TBLRD*+
041E:  MOVF   FF5,W
0420:  MOVWF  FEE
0422:  IORLW  00
0424:  BNZ   041C
0426:  MOVLB  2
0428:  BTFSC  x98.7
042A:  BSF    FF2.7
....................      acc2=0; 
042C:  CLRF   x3D
042E:  CLRF   x3C
....................      cola2=0; 
0430:  CLRF   x41
....................     if(contador2*quantum>0 && contador2*quantum<time2){ 
0432:  CLRF   x99
0434:  MOVFF  1A,298
0438:  MOVFF  25E,29B
043C:  MOVFF  25D,29A
0440:  MOVLB  0
0442:  RCALL  0276
0444:  MOVFF  02,299
0448:  MOVFF  01,298
044C:  MOVLB  2
044E:  MOVF   x98,F
0450:  BNZ   0456
0452:  MOVF   x99,F
0454:  BZ    04C6
0456:  CLRF   x99
0458:  MOVFF  1A,298
045C:  MOVFF  25E,29B
0460:  MOVFF  25D,29A
0464:  MOVLB  0
0466:  RCALL  0276
0468:  MOVFF  02,299
046C:  MOVFF  01,298
0470:  MOVLB  2
0472:  MOVF   02,W
0474:  SUBWF  x5A,W
0476:  BNC   04C6
0478:  BNZ   0480
047A:  MOVF   x59,W
047C:  SUBWF  x98,W
047E:  BC    04C6
....................      est2="ejecutando"; 
0480:  MOVLW  02
0482:  MOVWF  FEA
0484:  MOVLW  1F
0486:  MOVWF  FE9
0488:  MOVFF  FF2,298
048C:  BCF    FF2.7
048E:  MOVLW  00
0490:  MOVLB  0
0492:  RCALL  00D6
0494:  TBLRD*-
0496:  TBLRD*+
0498:  MOVF   FF5,W
049A:  MOVWF  FEE
049C:  IORLW  00
049E:  BNZ   0496
04A0:  MOVLB  2
04A2:  BTFSC  x98.7
04A4:  BSF    FF2.7
....................      acc2=contador2*quantum; 
04A6:  CLRF   x99
04A8:  MOVFF  1A,298
04AC:  MOVFF  25E,29B
04B0:  MOVFF  25D,29A
04B4:  MOVLB  0
04B6:  RCALL  0276
04B8:  MOVFF  02,23D
04BC:  MOVFF  01,23C
....................      cola2=1; 
04C0:  MOVLW  01
04C2:  MOVLB  2
04C4:  MOVWF  x41
....................     } 
....................     if(contador2*quantum>=time2){ 
04C6:  CLRF   x99
04C8:  MOVFF  1A,298
04CC:  MOVFF  25E,29B
04D0:  MOVFF  25D,29A
04D4:  MOVLB  0
04D6:  RCALL  0276
04D8:  MOVFF  02,299
04DC:  MOVFF  01,298
04E0:  MOVLB  2
04E2:  MOVF   x5A,W
04E4:  SUBWF  02,W
04E6:  BNC   0520
04E8:  BNZ   04F0
04EA:  MOVF   x59,W
04EC:  SUBWF  x98,W
04EE:  BNC   0520
....................      est2="cargado"; 
04F0:  MOVLW  02
04F2:  MOVWF  FEA
04F4:  MOVLW  1F
04F6:  MOVWF  FE9
04F8:  MOVFF  FF2,298
04FC:  BCF    FF2.7
04FE:  MOVLW  00
0500:  MOVLB  0
0502:  RCALL  00F2
0504:  TBLRD*-
0506:  TBLRD*+
0508:  MOVF   FF5,W
050A:  MOVWF  FEE
050C:  IORLW  00
050E:  BNZ   0506
0510:  MOVLB  2
0512:  BTFSC  x98.7
0514:  BSF    FF2.7
....................      acc2=time2; 
0516:  MOVFF  25A,23D
051A:  MOVFF  259,23C
....................      cola2=0; 
051E:  CLRF   x41
....................     } 
....................      } 
....................      if(a==2){ 
0520:  MOVF   x97,W
0522:  SUBLW  02
0524:  BTFSS  FD8.2
0526:  BRA    0666
....................     if(contador3*quantum==0) 
0528:  CLRF   x99
052A:  MOVFF  1B,298
052E:  MOVFF  25E,29B
0532:  MOVFF  25D,29A
0536:  MOVLB  0
0538:  RCALL  0276
053A:  MOVFF  02,299
053E:  MOVFF  01,298
0542:  MOVLB  2
0544:  MOVF   x98,F
0546:  BNZ   0572
0548:  MOVF   x99,F
054A:  BNZ   0572
....................      est3= "vacio" ; 
054C:  MOVLW  02
054E:  MOVWF  FEA
0550:  MOVLW  2B
0552:  MOVWF  FE9
0554:  MOVFF  FF2,298
0558:  BCF    FF2.7
055A:  MOVLW  00
055C:  MOVLB  0
055E:  RCALL  00C0
0560:  TBLRD*-
0562:  TBLRD*+
0564:  MOVF   FF5,W
0566:  MOVWF  FEE
0568:  IORLW  00
056A:  BNZ   0562
056C:  MOVLB  2
056E:  BTFSC  x98.7
0570:  BSF    FF2.7
....................      acc3=0; 
0572:  CLRF   x3F
0574:  CLRF   x3E
....................      cola3=0; 
0576:  CLRF   x42
....................     if(contador3*quantum>0 && contador3*quantum<time3){ 
0578:  CLRF   x99
057A:  MOVFF  1B,298
057E:  MOVFF  25E,29B
0582:  MOVFF  25D,29A
0586:  MOVLB  0
0588:  RCALL  0276
058A:  MOVFF  02,299
058E:  MOVFF  01,298
0592:  MOVLB  2
0594:  MOVF   x98,F
0596:  BNZ   059C
0598:  MOVF   x99,F
059A:  BZ    060C
059C:  CLRF   x99
059E:  MOVFF  1B,298
05A2:  MOVFF  25E,29B
05A6:  MOVFF  25D,29A
05AA:  MOVLB  0
05AC:  RCALL  0276
05AE:  MOVFF  02,299
05B2:  MOVFF  01,298
05B6:  MOVLB  2
05B8:  MOVF   02,W
05BA:  SUBWF  x5C,W
05BC:  BNC   060C
05BE:  BNZ   05C6
05C0:  MOVF   x5B,W
05C2:  SUBWF  x98,W
05C4:  BC    060C
....................      est3="ejecutando"; 
05C6:  MOVLW  02
05C8:  MOVWF  FEA
05CA:  MOVLW  2B
05CC:  MOVWF  FE9
05CE:  MOVFF  FF2,298
05D2:  BCF    FF2.7
05D4:  MOVLW  00
05D6:  MOVLB  0
05D8:  RCALL  00D6
05DA:  TBLRD*-
05DC:  TBLRD*+
05DE:  MOVF   FF5,W
05E0:  MOVWF  FEE
05E2:  IORLW  00
05E4:  BNZ   05DC
05E6:  MOVLB  2
05E8:  BTFSC  x98.7
05EA:  BSF    FF2.7
....................      acc3=contador3*quantum; 
05EC:  CLRF   x99
05EE:  MOVFF  1B,298
05F2:  MOVFF  25E,29B
05F6:  MOVFF  25D,29A
05FA:  MOVLB  0
05FC:  RCALL  0276
05FE:  MOVFF  02,23F
0602:  MOVFF  01,23E
....................      cola3=1; 
0606:  MOVLW  01
0608:  MOVLB  2
060A:  MOVWF  x42
....................     } 
....................     if(contador3*quantum>=time3){ 
060C:  CLRF   x99
060E:  MOVFF  1B,298
0612:  MOVFF  25E,29B
0616:  MOVFF  25D,29A
061A:  MOVLB  0
061C:  RCALL  0276
061E:  MOVFF  02,299
0622:  MOVFF  01,298
0626:  MOVLB  2
0628:  MOVF   x5C,W
062A:  SUBWF  02,W
062C:  BNC   0666
062E:  BNZ   0636
0630:  MOVF   x5B,W
0632:  SUBWF  x98,W
0634:  BNC   0666
....................      est3="cargado"; 
0636:  MOVLW  02
0638:  MOVWF  FEA
063A:  MOVLW  2B
063C:  MOVWF  FE9
063E:  MOVFF  FF2,298
0642:  BCF    FF2.7
0644:  MOVLW  00
0646:  MOVLB  0
0648:  RCALL  00F2
064A:  TBLRD*-
064C:  TBLRD*+
064E:  MOVF   FF5,W
0650:  MOVWF  FEE
0652:  IORLW  00
0654:  BNZ   064C
0656:  MOVLB  2
0658:  BTFSC  x98.7
065A:  BSF    FF2.7
....................      acc3=time3; 
065C:  MOVFF  25C,23F
0660:  MOVFF  25B,23E
....................      cola3=0; 
0664:  CLRF   x42
....................     } 
....................      } 
....................      
....................  } 
0666:  MOVLB  0
0668:  RETLW  00
....................   void ver_cola(int a ,int b,int c){ 
....................      if(a==0 && b==0 && c==0){ 
*
0830:  MOVLB  2
0832:  MOVF   x97,F
0834:  BNZ   0864
0836:  MOVF   x98,F
0838:  BNZ   0864
083A:  MOVF   x99,F
083C:  BNZ   0864
....................        col_fijo="no hay procesos"; 
083E:  MOVLW  02
0840:  MOVWF  FEA
0842:  MOVLW  43
0844:  MOVWF  FE9
0846:  MOVFF  FF2,29A
084A:  BCF    FF2.7
084C:  MOVLW  00
084E:  MOVLB  0
0850:  RCALL  010A
0852:  TBLRD*-
0854:  TBLRD*+
0856:  MOVF   FF5,W
0858:  MOVWF  FEE
085A:  IORLW  00
085C:  BNZ   0854
085E:  MOVLB  2
0860:  BTFSC  x9A.7
0862:  BSF    FF2.7
....................         } 
....................      if(a==1 && b==0 && c==0){ 
0864:  DECFSZ x97,W
0866:  BRA    0896
0868:  MOVF   x98,F
086A:  BNZ   0896
086C:  MOVF   x99,F
086E:  BNZ   0896
....................        col_fijo="solo el proceso 1";  
0870:  MOVLW  02
0872:  MOVWF  FEA
0874:  MOVLW  43
0876:  MOVWF  FE9
0878:  MOVFF  FF2,29A
087C:  BCF    FF2.7
087E:  MOVLW  00
0880:  MOVLB  0
0882:  RCALL  012A
0884:  TBLRD*-
0886:  TBLRD*+
0888:  MOVF   FF5,W
088A:  MOVWF  FEE
088C:  IORLW  00
088E:  BNZ   0886
0890:  MOVLB  2
0892:  BTFSC  x9A.7
0894:  BSF    FF2.7
....................      } 
....................      if(a==1 && b==1 && c==0){ 
0896:  DECFSZ x97,W
0898:  BRA    08C8
089A:  DECFSZ x98,W
089C:  BRA    08C8
089E:  MOVF   x99,F
08A0:  BNZ   08C8
....................        col_fijo="procesos 1 y 2"; 
08A2:  MOVLW  02
08A4:  MOVWF  FEA
08A6:  MOVLW  43
08A8:  MOVWF  FE9
08AA:  MOVFF  FF2,29A
08AE:  BCF    FF2.7
08B0:  MOVLW  00
08B2:  MOVLB  0
08B4:  RCALL  014C
08B6:  TBLRD*-
08B8:  TBLRD*+
08BA:  MOVF   FF5,W
08BC:  MOVWF  FEE
08BE:  IORLW  00
08C0:  BNZ   08B8
08C2:  MOVLB  2
08C4:  BTFSC  x9A.7
08C6:  BSF    FF2.7
....................      } 
....................      if(a==1 && b==0 && c==1){ 
08C8:  DECFSZ x97,W
08CA:  BRA    08FA
08CC:  MOVF   x98,F
08CE:  BNZ   08FA
08D0:  DECFSZ x99,W
08D2:  BRA    08FA
....................        col_fijo="procesos 1 y 3"; 
08D4:  MOVLW  02
08D6:  MOVWF  FEA
08D8:  MOVLW  43
08DA:  MOVWF  FE9
08DC:  MOVFF  FF2,29A
08E0:  BCF    FF2.7
08E2:  MOVLW  00
08E4:  MOVLB  0
08E6:  RCALL  016C
08E8:  TBLRD*-
08EA:  TBLRD*+
08EC:  MOVF   FF5,W
08EE:  MOVWF  FEE
08F0:  IORLW  00
08F2:  BNZ   08EA
08F4:  MOVLB  2
08F6:  BTFSC  x9A.7
08F8:  BSF    FF2.7
....................      } 
....................       if(a==0 && b==1 && c==0){ 
08FA:  MOVF   x97,F
08FC:  BNZ   092C
08FE:  DECFSZ x98,W
0900:  BRA    092C
0902:  MOVF   x99,F
0904:  BNZ   092C
....................        col_fijo="solo el proceso 2"; 
0906:  MOVLW  02
0908:  MOVWF  FEA
090A:  MOVLW  43
090C:  MOVWF  FE9
090E:  MOVFF  FF2,29A
0912:  BCF    FF2.7
0914:  MOVLW  00
0916:  MOVLB  0
0918:  RCALL  018C
091A:  TBLRD*-
091C:  TBLRD*+
091E:  MOVF   FF5,W
0920:  MOVWF  FEE
0922:  IORLW  00
0924:  BNZ   091C
0926:  MOVLB  2
0928:  BTFSC  x9A.7
092A:  BSF    FF2.7
....................      } 
....................      if(a==0 && b==0 && c==1){ 
092C:  MOVF   x97,F
092E:  BNZ   095E
0930:  MOVF   x98,F
0932:  BNZ   095E
0934:  DECFSZ x99,W
0936:  BRA    095E
....................        col_fijo="solo el proceso 3"; 
0938:  MOVLW  02
093A:  MOVWF  FEA
093C:  MOVLW  43
093E:  MOVWF  FE9
0940:  MOVFF  FF2,29A
0944:  BCF    FF2.7
0946:  MOVLW  00
0948:  MOVLB  0
094A:  RCALL  01AE
094C:  TBLRD*-
094E:  TBLRD*+
0950:  MOVF   FF5,W
0952:  MOVWF  FEE
0954:  IORLW  00
0956:  BNZ   094E
0958:  MOVLB  2
095A:  BTFSC  x9A.7
095C:  BSF    FF2.7
....................      } 
....................      if(a==0 && b==1 && c==1){ 
095E:  MOVF   x97,F
0960:  BNZ   0990
0962:  DECFSZ x98,W
0964:  BRA    0990
0966:  DECFSZ x99,W
0968:  BRA    0990
....................        col_fijo="procesos 2 y 3"; 
096A:  MOVLW  02
096C:  MOVWF  FEA
096E:  MOVLW  43
0970:  MOVWF  FE9
0972:  MOVFF  FF2,29A
0976:  BCF    FF2.7
0978:  MOVLW  00
097A:  MOVLB  0
097C:  RCALL  01D0
097E:  TBLRD*-
0980:  TBLRD*+
0982:  MOVF   FF5,W
0984:  MOVWF  FEE
0986:  IORLW  00
0988:  BNZ   0980
098A:  MOVLB  2
098C:  BTFSC  x9A.7
098E:  BSF    FF2.7
....................      }  
....................      if(a==1 && b==1 && c==1){ 
0990:  DECFSZ x97,W
0992:  BRA    09C2
0994:  DECFSZ x98,W
0996:  BRA    09C2
0998:  DECFSZ x99,W
099A:  BRA    09C2
....................        col_fijo="procesos 1,2 y 3"; 
099C:  MOVLW  02
099E:  MOVWF  FEA
09A0:  MOVLW  43
09A2:  MOVWF  FE9
09A4:  MOVFF  FF2,29A
09A8:  BCF    FF2.7
09AA:  MOVLW  00
09AC:  MOVLB  0
09AE:  RCALL  01F0
09B0:  TBLRD*-
09B2:  TBLRD*+
09B4:  MOVF   FF5,W
09B6:  MOVWF  FEE
09B8:  IORLW  00
09BA:  BNZ   09B2
09BC:  MOVLB  2
09BE:  BTFSC  x9A.7
09C0:  BSF    FF2.7
....................      } 
....................      
....................   } 
09C2:  MOVLB  0
09C4:  GOTO   0E3A (RETURN)
.................... //interrupciones 
.................... #int_rda  
.................... void RDA_isr(){ 
.................... tecla_pulsada=getc(); 
*
0212:  BTFSS  F9E.5
0214:  BRA    0212
0216:  MOVFF  FAE,17
.................... mensaje_recibido=1; 
021A:  MOVLW  01
021C:  MOVWF  18
.................... if(tecla_pulsada=='v')flag_ver=1; 
021E:  MOVF   17,W
0220:  SUBLW  76
0222:  BNZ   022C
0224:  MOVLW  01
0226:  MOVLB  2
0228:  MOVWF  x37
022A:  MOVLB  0
.................... if(tecla_pulsada=='p')flag_procesador=1; 
022C:  MOVF   17,W
022E:  SUBLW  70
0230:  BNZ   023A
0232:  MOVLW  01
0234:  MOVLB  2
0236:  MOVWF  x38
0238:  MOVLB  0
.................... if(tecla_pulsada=='s')flag_so=1; 
023A:  MOVF   17,W
023C:  SUBLW  73
023E:  BNZ   0248
0240:  MOVLW  01
0242:  MOVLB  2
0244:  MOVWF  x39
0246:  MOVLB  0
.................... //!port_b=0; 
.................... } 
.................... //funcion interrupcion serial 
0248:  BCF    F9E.5
024A:  GOTO   0060
.................... #int_timer0 
.................... //interrupcion del timer0,para hallar el quantum 
.................... //funcion quantum  
.................... void timer0_isr(){ 
.................... delay_ms(quantum-4); 
*
0BA6:  MOVLW  04
0BA8:  MOVLB  2
0BAA:  SUBWF  x5D,W
0BAC:  MOVWF  x97
0BAE:  MOVLW  00
0BB0:  SUBWFB x5E,W
0BB2:  MOVWF  x98
0BB4:  MOVWF  x99
0BB6:  INCF   x99,F
0BB8:  DECF   x99,F
0BBA:  BTFSC  FD8.2
0BBC:  BRA    0BCC
0BBE:  MOVLW  FF
0BC0:  MOVWF  x9A
0BC2:  MOVLB  0
0BC4:  CALL   024E
0BC8:  MOVLB  2
0BCA:  BRA    0BB8
0BCC:  MOVFF  297,29A
0BD0:  MOVLB  0
0BD2:  CALL   024E
....................    rb6=!rb6; 
0BD6:  BTG    F81.6
....................    rb0=!rb0; 
0BD8:  BTG    F81.0
....................    if(tecla_pulsada=='v'&& flag_ver==1){ 
0BDA:  MOVF   17,W
0BDC:  SUBLW  76
0BDE:  BTFSS  FD8.2
0BE0:  BRA    0E5A
0BE2:  MOVLB  2
0BE4:  DECFSZ x37,W
0BE6:  BRA    0BEA
0BE8:  BRA    0BEE
0BEA:  MOVLB  0
0BEC:  BRA    0E5A
.................... //!  est1=ver_estado_proceso(pcb[0].id); 
.................... ver_estado_proceso(pcb[0].id); 
0BEE:  MOVFF  261,297
0BF2:  MOVLB  0
0BF4:  CALL   0298
....................   ver_estado_proceso(pcb[1].id); 
0BF8:  MOVFF  267,297
0BFC:  CALL   0298
....................  ver_estado_proceso(pcb[2].id); 
0C00:  MOVFF  26D,297
0C04:  CALL   0298
....................   pcb[0].tiempo=acc1; 
0C08:  MOVFF  23B,266
0C0C:  MOVFF  23A,265
....................   pcb[1].tiempo=acc2; 
0C10:  MOVFF  23D,26C
0C14:  MOVFF  23C,26B
....................   pcb[2].tiempo=acc3; 
0C18:  MOVFF  23F,272
0C1C:  MOVFF  23E,271
....................   acumulador=acc1+acc2+acc3; 
0C20:  MOVLB  2
0C22:  MOVF   x3C,W
0C24:  ADDWF  x3A,W
0C26:  MOVWF  x97
0C28:  MOVF   x3D,W
0C2A:  ADDWFC x3B,W
0C2C:  MOVWF  x98
0C2E:  MOVF   x3E,W
0C30:  ADDWF  x97,W
0C32:  MOVWF  x5F
0C34:  MOVF   x3F,W
0C36:  ADDWFC x98,W
0C38:  MOVWF  x60
....................   puts("ver procesos"); 
0C3A:  MOVLW  C8
0C3C:  MOVWF  FF6
0C3E:  MOVLW  0E
0C40:  MOVWF  FF7
0C42:  MOVLB  0
0C44:  RCALL  066A
0C46:  MOVLW  0D
0C48:  BTFSS  F9E.4
0C4A:  BRA    0C48
0C4C:  MOVWF  FAD
0C4E:  MOVLW  0A
0C50:  BTFSS  F9E.4
0C52:  BRA    0C50
0C54:  MOVWF  FAD
....................   puts("id     dir-inicio        tiempo         estado"); 
0C56:  MOVLW  D6
0C58:  MOVWF  FF6
0C5A:  MOVLW  0E
0C5C:  MOVWF  FF7
0C5E:  RCALL  066A
0C60:  MOVLW  0D
0C62:  BTFSS  F9E.4
0C64:  BRA    0C62
0C66:  MOVWF  FAD
0C68:  MOVLW  0A
0C6A:  BTFSS  F9E.4
0C6C:  BRA    0C6A
0C6E:  MOVWF  FAD
....................   printf("%1u           %Lu            %Lu            ",pcb[0].id,100,pcb[0].tiempo); 
0C70:  MOVFF  261,297
0C74:  MOVLW  18
0C76:  MOVLB  2
0C78:  MOVWF  x98
0C7A:  MOVLB  0
0C7C:  RCALL  06B8
0C7E:  MOVLW  09
0C80:  MOVWF  FF6
0C82:  MOVLW  0F
0C84:  MOVWF  FF7
0C86:  MOVLW  0B
0C88:  MOVLB  2
0C8A:  MOVWF  x97
0C8C:  MOVLB  0
0C8E:  RCALL  0736
0C90:  MOVLW  10
0C92:  MOVWF  FE9
0C94:  MOVLB  2
0C96:  CLRF   x98
0C98:  MOVLW  64
0C9A:  MOVWF  x97
0C9C:  MOVLB  0
0C9E:  RCALL  0760
0CA0:  MOVLW  17
0CA2:  MOVWF  FF6
0CA4:  MOVLW  0F
0CA6:  MOVWF  FF7
0CA8:  MOVLW  0C
0CAA:  MOVLB  2
0CAC:  MOVWF  x97
0CAE:  MOVLB  0
0CB0:  RCALL  0736
0CB2:  MOVLW  10
0CB4:  MOVWF  FE9
0CB6:  MOVFF  266,298
0CBA:  MOVFF  265,297
0CBE:  RCALL  0760
0CC0:  MOVLW  26
0CC2:  MOVWF  FF6
0CC4:  MOVLW  0F
0CC6:  MOVWF  FF7
0CC8:  MOVLW  0C
0CCA:  MOVLB  2
0CCC:  MOVWF  x97
0CCE:  MOVLB  0
0CD0:  RCALL  0736
....................   puts(est1); 
0CD2:  MOVLW  02
0CD4:  MOVWF  FEA
0CD6:  MOVLW  13
0CD8:  MOVWF  FE9
0CDA:  RCALL  080A
0CDC:  MOVLW  0D
0CDE:  BTFSS  F9E.4
0CE0:  BRA    0CDE
0CE2:  MOVWF  FAD
0CE4:  MOVLW  0A
0CE6:  BTFSS  F9E.4
0CE8:  BRA    0CE6
0CEA:  MOVWF  FAD
....................    
....................   printf("%1u           %Lu            %Lu            ",pcb[1].id,200,pcb[1].tiempo); 
0CEC:  MOVFF  267,297
0CF0:  MOVLW  18
0CF2:  MOVLB  2
0CF4:  MOVWF  x98
0CF6:  MOVLB  0
0CF8:  RCALL  06B8
0CFA:  MOVLW  37
0CFC:  MOVWF  FF6
0CFE:  MOVLW  0F
0D00:  MOVWF  FF7
0D02:  MOVLW  0B
0D04:  MOVLB  2
0D06:  MOVWF  x97
0D08:  MOVLB  0
0D0A:  RCALL  0736
0D0C:  MOVLW  10
0D0E:  MOVWF  FE9
0D10:  MOVLB  2
0D12:  CLRF   x98
0D14:  MOVLW  C8
0D16:  MOVWF  x97
0D18:  MOVLB  0
0D1A:  RCALL  0760
0D1C:  MOVLW  45
0D1E:  MOVWF  FF6
0D20:  MOVLW  0F
0D22:  MOVWF  FF7
0D24:  MOVLW  0C
0D26:  MOVLB  2
0D28:  MOVWF  x97
0D2A:  MOVLB  0
0D2C:  RCALL  0736
0D2E:  MOVLW  10
0D30:  MOVWF  FE9
0D32:  MOVFF  26C,298
0D36:  MOVFF  26B,297
0D3A:  RCALL  0760
0D3C:  MOVLW  54
0D3E:  MOVWF  FF6
0D40:  MOVLW  0F
0D42:  MOVWF  FF7
0D44:  MOVLW  0C
0D46:  MOVLB  2
0D48:  MOVWF  x97
0D4A:  MOVLB  0
0D4C:  RCALL  0736
....................   puts(est2); 
0D4E:  MOVLW  02
0D50:  MOVWF  FEA
0D52:  MOVLW  1F
0D54:  MOVWF  FE9
0D56:  RCALL  080A
0D58:  MOVLW  0D
0D5A:  BTFSS  F9E.4
0D5C:  BRA    0D5A
0D5E:  MOVWF  FAD
0D60:  MOVLW  0A
0D62:  BTFSS  F9E.4
0D64:  BRA    0D62
0D66:  MOVWF  FAD
....................    
....................   printf("%1u           %Lu            %Lu            ",pcb[2].id,300,pcb[2].tiempo); 
0D68:  MOVFF  26D,297
0D6C:  MOVLW  18
0D6E:  MOVLB  2
0D70:  MOVWF  x98
0D72:  MOVLB  0
0D74:  RCALL  06B8
0D76:  MOVLW  65
0D78:  MOVWF  FF6
0D7A:  MOVLW  0F
0D7C:  MOVWF  FF7
0D7E:  MOVLW  0B
0D80:  MOVLB  2
0D82:  MOVWF  x97
0D84:  MOVLB  0
0D86:  RCALL  0736
0D88:  MOVLW  10
0D8A:  MOVWF  FE9
0D8C:  MOVLW  01
0D8E:  MOVLB  2
0D90:  MOVWF  x98
0D92:  MOVLW  2C
0D94:  MOVWF  x97
0D96:  MOVLB  0
0D98:  RCALL  0760
0D9A:  MOVLW  73
0D9C:  MOVWF  FF6
0D9E:  MOVLW  0F
0DA0:  MOVWF  FF7
0DA2:  MOVLW  0C
0DA4:  MOVLB  2
0DA6:  MOVWF  x97
0DA8:  MOVLB  0
0DAA:  RCALL  0736
0DAC:  MOVLW  10
0DAE:  MOVWF  FE9
0DB0:  MOVFF  272,298
0DB4:  MOVFF  271,297
0DB8:  RCALL  0760
0DBA:  MOVLW  82
0DBC:  MOVWF  FF6
0DBE:  MOVLW  0F
0DC0:  MOVWF  FF7
0DC2:  MOVLW  0C
0DC4:  MOVLB  2
0DC6:  MOVWF  x97
0DC8:  MOVLB  0
0DCA:  RCALL  0736
....................   puts(est3); 
0DCC:  MOVLW  02
0DCE:  MOVWF  FEA
0DD0:  MOVLW  2B
0DD2:  MOVWF  FE9
0DD4:  RCALL  080A
0DD6:  MOVLW  0D
0DD8:  BTFSS  F9E.4
0DDA:  BRA    0DD8
0DDC:  MOVWF  FAD
0DDE:  MOVLW  0A
0DE0:  BTFSS  F9E.4
0DE2:  BRA    0DE0
0DE4:  MOVWF  FAD
....................    
....................   //el acumulador 
....................    
....................   printf("acumulador = %Lu",acumulador); 
0DE6:  MOVLW  90
0DE8:  MOVWF  FF6
0DEA:  MOVLW  0F
0DEC:  MOVWF  FF7
0DEE:  MOVLW  0D
0DF0:  MOVLB  2
0DF2:  MOVWF  x97
0DF4:  MOVLB  0
0DF6:  RCALL  0736
0DF8:  MOVLW  10
0DFA:  MOVWF  FE9
0DFC:  MOVFF  260,298
0E00:  MOVFF  25F,297
0E04:  RCALL  0760
....................   //la cola 
....................   printf("  "); 
0E06:  MOVLW  20
0E08:  BTFSS  F9E.4
0E0A:  BRA    0E08
0E0C:  MOVWF  FAD
0E0E:  MOVLW  20
0E10:  BTFSS  F9E.4
0E12:  BRA    0E10
0E14:  MOVWF  FAD
....................    
....................   printf(" ----  ver cola :  "); 
0E16:  MOVLW  A2
0E18:  MOVWF  FF6
0E1A:  MOVLW  0F
0E1C:  MOVWF  FF7
0E1E:  RCALL  066A
....................   cola[0]=cola1; 
0E20:  MOVFF  240,273
....................   cola[1]=cola2; 
0E24:  MOVFF  241,274
....................   cola[2]=cola3; 
0E28:  MOVFF  242,275
....................  ver_cola(cola[0],cola[1],cola[2]); 
0E2C:  MOVFF  273,297
0E30:  MOVFF  274,298
0E34:  MOVFF  275,299
0E38:  BRA    0830
....................   puts(col_fijo); 
0E3A:  MOVLW  02
0E3C:  MOVWF  FEA
0E3E:  MOVLW  43
0E40:  MOVWF  FE9
0E42:  RCALL  080A
0E44:  MOVLW  0D
0E46:  BTFSS  F9E.4
0E48:  BRA    0E46
0E4A:  MOVWF  FAD
0E4C:  MOVLW  0A
0E4E:  BTFSS  F9E.4
0E50:  BRA    0E4E
0E52:  MOVWF  FAD
....................   // 
....................   flag_ver=0;} 
0E54:  MOVLB  2
0E56:  CLRF   x37
0E58:  MOVLB  0
....................   if(tecla_pulsada=='p'&& flag_procesador==1){ 
0E5A:  MOVF   17,W
0E5C:  SUBLW  70
0E5E:  BNZ   0E70
0E60:  MOVLB  2
0E62:  DECFSZ x38,W
0E64:  BRA    0E68
0E66:  BRA    0E6C
0E68:  MOVLB  0
0E6A:  BRA    0E70
....................   flag_procesador=0;} 
0E6C:  CLRF   x38
0E6E:  MOVLB  0
....................   if(tecla_pulsada=='s' && flag_so==1){ 
0E70:  MOVF   17,W
0E72:  SUBLW  73
0E74:  BNZ   0EBC
0E76:  MOVLB  2
0E78:  DECFSZ x39,W
0E7A:  BRA    0E7E
0E7C:  BRA    0E82
0E7E:  MOVLB  0
0E80:  BRA    0EBC
....................   lcd_putc("\f"); 
0E82:  MOVLW  B6
0E84:  MOVWF  FF6
0E86:  MOVLW  0F
0E88:  MOVWF  FF7
0E8A:  MOVLB  0
0E8C:  RCALL  0B86
....................   lcd_putc("sist.oper. XAK");  
0E8E:  MOVLW  B8
0E90:  MOVWF  FF6
0E92:  MOVLW  0F
0E94:  MOVWF  FF7
0E96:  RCALL  0B86
....................   puts("sistema operativo XAK"); 
0E98:  MOVLW  C8
0E9A:  MOVWF  FF6
0E9C:  MOVLW  0F
0E9E:  MOVWF  FF7
0EA0:  CALL   066A
0EA4:  MOVLW  0D
0EA6:  BTFSS  F9E.4
0EA8:  BRA    0EA6
0EAA:  MOVWF  FAD
0EAC:  MOVLW  0A
0EAE:  BTFSS  F9E.4
0EB0:  BRA    0EAE
0EB2:  MOVWF  FAD
....................    rb5=1; 
0EB4:  BSF    F81.5
....................     
....................    flag_so=0;} 
0EB6:  MOVLB  2
0EB8:  CLRF   x39
0EBA:  MOVLB  0
.................... //!   if(tecla_pulsada=='h'&& flag_help==1){ 
.................... //!   flag_help=0;} 
....................    set_timer0(0x01); 
0EBC:  CLRF   FD7
0EBE:  MOVLW  01
0EC0:  MOVWF  FD6
.................... } 
....................   
.................... //funciones de los procesos 
....................  
.................... //proceso1: 
0EC2:  BCF    FF2.2
0EC4:  GOTO   0060
.................... void do_proceso1(){ 
.................... lcd_putc("\f"); 
*
1140:  MOVLW  DE
1142:  MOVWF  FF6
1144:  MOVLW  0F
1146:  MOVWF  FF7
1148:  CLRF   16
114A:  BTFSC  FF2.7
114C:  BSF    16.7
114E:  BCF    FF2.7
1150:  RCALL  0B86
1152:  BTFSC  16.7
1154:  BSF    FF2.7
.................... lcd_putc("proceso 1"); 
1156:  MOVLW  E0
1158:  MOVWF  FF6
115A:  MOVLW  0F
115C:  MOVWF  FF7
115E:  CLRF   16
1160:  BTFSC  FF2.7
1162:  BSF    16.7
1164:  BCF    FF2.7
1166:  RCALL  0B86
1168:  BTFSC  16.7
116A:  BSF    FF2.7
.................... puts("proceso 1"); 
116C:  MOVLW  EA
116E:  MOVWF  FF6
1170:  MOVLW  0F
1172:  MOVWF  FF7
1174:  CLRF   16
1176:  BTFSC  FF2.7
1178:  BSF    16.7
117A:  BCF    FF2.7
117C:  CALL   066A
1180:  BTFSC  16.7
1182:  BSF    FF2.7
1184:  MOVLW  0D
1186:  BTFSS  F9E.4
1188:  BRA    1186
118A:  MOVWF  FAD
118C:  MOVLW  0A
118E:  BTFSS  F9E.4
1190:  BRA    118E
1192:  MOVWF  FAD
.................... rb1=1; 
1194:  BSF    F81.1
.................... } 
1196:  RETLW  00
.................... //proceso2: 
.................... void do_proceso2(){ 
.................... lcd_putc("\f"); 
1198:  MOVLW  F4
119A:  MOVWF  FF6
119C:  MOVLW  0F
119E:  MOVWF  FF7
11A0:  CLRF   16
11A2:  BTFSC  FF2.7
11A4:  BSF    16.7
11A6:  BCF    FF2.7
11A8:  RCALL  0B86
11AA:  BTFSC  16.7
11AC:  BSF    FF2.7
.................... lcd_putc("proceso 2"); 
11AE:  MOVLW  F6
11B0:  MOVWF  FF6
11B2:  MOVLW  0F
11B4:  MOVWF  FF7
11B6:  CLRF   16
11B8:  BTFSC  FF2.7
11BA:  BSF    16.7
11BC:  BCF    FF2.7
11BE:  RCALL  0B86
11C0:  BTFSC  16.7
11C2:  BSF    FF2.7
.................... puts("proceso 2"); 
11C4:  MOVLW  00
11C6:  MOVWF  FF6
11C8:  MOVLW  10
11CA:  MOVWF  FF7
11CC:  CLRF   16
11CE:  BTFSC  FF2.7
11D0:  BSF    16.7
11D2:  BCF    FF2.7
11D4:  CALL   066A
11D8:  BTFSC  16.7
11DA:  BSF    FF2.7
11DC:  MOVLW  0D
11DE:  BTFSS  F9E.4
11E0:  BRA    11DE
11E2:  MOVWF  FAD
11E4:  MOVLW  0A
11E6:  BTFSS  F9E.4
11E8:  BRA    11E6
11EA:  MOVWF  FAD
.................... rb2=1; 
11EC:  BSF    F81.2
.................... } 
11EE:  RETLW  00
.................... //proceso3: 
.................... void do_proceso3(){ 
.................... lcd_putc("\f"); 
11F0:  MOVLW  0A
11F2:  MOVWF  FF6
11F4:  MOVLW  10
11F6:  MOVWF  FF7
11F8:  CLRF   16
11FA:  BTFSC  FF2.7
11FC:  BSF    16.7
11FE:  BCF    FF2.7
1200:  RCALL  0B86
1202:  BTFSC  16.7
1204:  BSF    FF2.7
.................... lcd_putc("proceso 3"); 
1206:  MOVLW  0C
1208:  MOVWF  FF6
120A:  MOVLW  10
120C:  MOVWF  FF7
120E:  CLRF   16
1210:  BTFSC  FF2.7
1212:  BSF    16.7
1214:  BCF    FF2.7
1216:  RCALL  0B86
1218:  BTFSC  16.7
121A:  BSF    FF2.7
.................... puts("proceso 3"); 
121C:  MOVLW  16
121E:  MOVWF  FF6
1220:  MOVLW  10
1222:  MOVWF  FF7
1224:  CLRF   16
1226:  BTFSC  FF2.7
1228:  BSF    16.7
122A:  BCF    FF2.7
122C:  CALL   066A
1230:  BTFSC  16.7
1232:  BSF    FF2.7
1234:  MOVLW  0D
1236:  BTFSS  F9E.4
1238:  BRA    1236
123A:  MOVWF  FAD
123C:  MOVLW  0A
123E:  BTFSS  F9E.4
1240:  BRA    123E
1242:  MOVWF  FAD
.................... rb3=1; 
1244:  BSF    F81.3
.................... } 
1246:  RETLW  00
.................... //descarga de procesos 
....................  
.................... void descargar_proceso1(){ 
.................... rb1=0; 
*
42A0:  BCF    F81.1
.................... } 
42A2:  GOTO   4424 (RETURN)
....................  
.................... void descargar_proceso2(){ 
.................... rb2=0; 
42A6:  BCF    F81.2
.................... } 
42A8:  GOTO   4430 (RETURN)
....................  
.................... void descargar_proceso3(){ 
.................... rb3=0; 
42AC:  BCF    F81.3
.................... } 
42AE:  GOTO   443C (RETURN)
.................... //funciones para los de procesos_calendario 
.................... //procesoA: 
.................... void do_procesoA(){ 
.................... lcd_putc("\f"); 
.................... lcd_putc("proceso A"); 
.................... puts("A"); 
.................... rb1=1; 
.................... } 
.................... //procesoB: 
.................... void do_procesoB(){ 
.................... lcd_putc("\f"); 
.................... lcd_putc("proceso B"); 
.................... puts("B"); 
.................... rb2=1; 
.................... } 
.................... //procesoC: 
.................... void do_procesoC(){ 
.................... lcd_putc("\f"); 
.................... lcd_putc("proceso C"); 
.................... puts("C"); 
.................... rb3=1; 
.................... } 
....................  
.................... //procesoD: 
.................... void do_procesoD(){ 
.................... lcd_putc("\f"); 
.................... lcd_putc("proceso D"); 
.................... puts("D"); 
.................... rb3=1; 
.................... } 
....................  
.................... //proceso11: 
.................... void do_proceso11(){ 
.................... for (contador1=1;contador1<=10;contador1++){ 
*
1248:  MOVLW  01
124A:  MOVWF  19
124C:  MOVF   19,W
124E:  SUBLW  0A
1250:  BTFSS  FD8.0
1252:  BRA    1334
....................               
....................              copia1=contador1; 
1254:  MOVFF  19,1C
1258:  CLRF   16
125A:  BTFSC  FF2.7
125C:  BSF    16.7
125E:  BCF    FF2.7
....................              if(quantum*contador1<time1){ 
1260:  MOVFF  25E,299
1264:  MOVFF  25D,298
1268:  MOVLB  2
126A:  CLRF   x9B
126C:  MOVFF  19,29A
1270:  MOVLB  0
1272:  CALL   0276
1276:  BTFSC  16.7
1278:  BSF    FF2.7
127A:  MOVFF  02,28B
127E:  MOVFF  01,28A
1282:  MOVLB  2
1284:  MOVF   02,W
1286:  SUBWF  x58,W
1288:  BNC   1314
128A:  BNZ   1292
128C:  MOVF   x57,W
128E:  SUBWF  x8A,W
1290:  BC    1314
....................                 rb1=1; 
1292:  BSF    F81.1
....................                 delay_ms(quantum); 
1294:  MOVFF  25E,28A
1298:  INCF   x8A,F
129A:  DECF   x8A,F
129C:  BTFSC  FD8.2
129E:  BRA    12BA
12A0:  CLRF   16
12A2:  BTFSC  FF2.7
12A4:  BSF    16.7
12A6:  BCF    FF2.7
12A8:  MOVLW  FF
12AA:  MOVWF  x9A
12AC:  MOVLB  0
12AE:  CALL   024E
12B2:  BTFSC  16.7
12B4:  BSF    FF2.7
12B6:  MOVLB  2
12B8:  BRA    129A
12BA:  CLRF   16
12BC:  BTFSC  FF2.7
12BE:  BSF    16.7
12C0:  BCF    FF2.7
12C2:  MOVFF  25D,29A
12C6:  MOVLB  0
12C8:  CALL   024E
12CC:  BTFSC  16.7
12CE:  BSF    FF2.7
....................                 rb1=0; 
12D0:  BCF    F81.1
....................                 delay_ms(quantum); 
12D2:  MOVFF  25E,28A
12D6:  MOVLB  2
12D8:  INCF   x8A,F
12DA:  DECF   x8A,F
12DC:  BTFSC  FD8.2
12DE:  BRA    12FA
12E0:  CLRF   16
12E2:  BTFSC  FF2.7
12E4:  BSF    16.7
12E6:  BCF    FF2.7
12E8:  MOVLW  FF
12EA:  MOVWF  x9A
12EC:  MOVLB  0
12EE:  CALL   024E
12F2:  BTFSC  16.7
12F4:  BSF    FF2.7
12F6:  MOVLB  2
12F8:  BRA    12DA
12FA:  CLRF   16
12FC:  BTFSC  FF2.7
12FE:  BSF    16.7
1300:  BCF    FF2.7
1302:  MOVFF  25D,29A
1306:  MOVLB  0
1308:  CALL   024E
130C:  BTFSC  16.7
130E:  BSF    FF2.7
....................                                         } 
....................              else { 
1310:  BRA    1318
1312:  MOVLB  2
....................                     do_proceso1(); 
1314:  MOVLB  0
1316:  RCALL  1140
....................                   }   
....................              if(tecla_pulsada=='2'){ 
1318:  MOVF   17,W
131A:  SUBLW  32
131C:  BNZ   1320
....................                  
....................                    break; 
131E:  BRA    1334
....................                   } 
....................              if(tecla_pulsada=='3'){ 
1320:  MOVF   17,W
1322:  SUBLW  33
1324:  BNZ   1328
....................                    break; 
1326:  BRA    1334
....................                   } 
....................              if(tecla_pulsada=='a'){ 
1328:  MOVF   17,W
132A:  SUBLW  61
132C:  BNZ   1330
....................                    break; 
132E:  BRA    1334
....................                   } 
....................          } 
1330:  INCF   19,F
1332:  BRA    124C
....................   
....................      if(tecla_pulsada=='2'){ 
1334:  MOVF   17,W
1336:  SUBLW  32
1338:  BTFSS  FD8.2
133A:  BRA    1786
....................                for (contador2=1;contador2<=16;contador2++){ 
133C:  MOVLW  01
133E:  MOVWF  1A
1340:  MOVF   1A,W
1342:  SUBLW  10
1344:  BTFSS  FD8.0
1346:  BRA    14F8
....................                     copia2=contador2; 
1348:  MOVFF  1A,1D
134C:  CLRF   16
134E:  BTFSC  FF2.7
1350:  BSF    16.7
1352:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
1354:  MOVFF  25E,299
1358:  MOVFF  25D,298
135C:  MOVLB  2
135E:  CLRF   x9B
1360:  MOVFF  19,29A
1364:  MOVLB  0
1366:  CALL   0276
136A:  BTFSC  16.7
136C:  BSF    FF2.7
136E:  MOVFF  02,28B
1372:  MOVFF  01,28A
1376:  MOVLB  2
1378:  MOVF   02,W
137A:  SUBWF  x58,W
137C:  BNC   140C
137E:  BNZ   1386
1380:  MOVF   x8A,W
1382:  SUBWF  x57,W
1384:  BNC   140C
....................                       rb2=1; 
1386:  BSF    F81.2
....................                       rb1=1; 
1388:  BSF    F81.1
....................                       delay_ms(quantum); 
138A:  MOVFF  25E,28A
138E:  INCF   x8A,F
1390:  DECF   x8A,F
1392:  BTFSC  FD8.2
1394:  BRA    13B0
1396:  CLRF   16
1398:  BTFSC  FF2.7
139A:  BSF    16.7
139C:  BCF    FF2.7
139E:  MOVLW  FF
13A0:  MOVWF  x9A
13A2:  MOVLB  0
13A4:  CALL   024E
13A8:  BTFSC  16.7
13AA:  BSF    FF2.7
13AC:  MOVLB  2
13AE:  BRA    1390
13B0:  CLRF   16
13B2:  BTFSC  FF2.7
13B4:  BSF    16.7
13B6:  BCF    FF2.7
13B8:  MOVFF  25D,29A
13BC:  MOVLB  0
13BE:  CALL   024E
13C2:  BTFSC  16.7
13C4:  BSF    FF2.7
....................                       rb1=0; 
13C6:  BCF    F81.1
....................                       rb2=0; 
13C8:  BCF    F81.2
....................                       delay_ms(quantum); 
13CA:  MOVFF  25E,28A
13CE:  MOVLB  2
13D0:  INCF   x8A,F
13D2:  DECF   x8A,F
13D4:  BTFSC  FD8.2
13D6:  BRA    13F2
13D8:  CLRF   16
13DA:  BTFSC  FF2.7
13DC:  BSF    16.7
13DE:  BCF    FF2.7
13E0:  MOVLW  FF
13E2:  MOVWF  x9A
13E4:  MOVLB  0
13E6:  CALL   024E
13EA:  BTFSC  16.7
13EC:  BSF    FF2.7
13EE:  MOVLB  2
13F0:  BRA    13D2
13F2:  CLRF   16
13F4:  BTFSC  FF2.7
13F6:  BSF    16.7
13F8:  BCF    FF2.7
13FA:  MOVFF  25D,29A
13FE:  MOVLB  0
1400:  CALL   024E
1404:  BTFSC  16.7
1406:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
1408:  BRA    14C2
140A:  MOVLB  2
140C:  CLRF   16
140E:  BTFSC  FF2.7
1410:  BSF    16.7
1412:  BCF    FF2.7
....................  
....................                           if(quantum*contador2<time2){ 
1414:  MOVFF  25E,299
1418:  MOVFF  25D,298
141C:  CLRF   x9B
141E:  MOVFF  1A,29A
1422:  MOVLB  0
1424:  CALL   0276
1428:  BTFSC  16.7
142A:  BSF    FF2.7
142C:  MOVFF  02,28B
1430:  MOVFF  01,28A
1434:  MOVLB  2
1436:  MOVF   02,W
1438:  SUBWF  x5A,W
143A:  BNC   14C4
143C:  BNZ   1444
143E:  MOVF   x59,W
1440:  SUBWF  x8A,W
1442:  BC    14C4
....................                                rb2=1; 
1444:  BSF    F81.2
....................                                delay_ms(quantum); 
1446:  MOVFF  25E,28A
144A:  INCF   x8A,F
144C:  DECF   x8A,F
144E:  BTFSC  FD8.2
1450:  BRA    146C
1452:  CLRF   16
1454:  BTFSC  FF2.7
1456:  BSF    16.7
1458:  BCF    FF2.7
145A:  MOVLW  FF
145C:  MOVWF  x9A
145E:  MOVLB  0
1460:  CALL   024E
1464:  BTFSC  16.7
1466:  BSF    FF2.7
1468:  MOVLB  2
146A:  BRA    144C
146C:  CLRF   16
146E:  BTFSC  FF2.7
1470:  BSF    16.7
1472:  BCF    FF2.7
1474:  MOVFF  25D,29A
1478:  MOVLB  0
147A:  CALL   024E
147E:  BTFSC  16.7
1480:  BSF    FF2.7
....................                                rb2=0; 
1482:  BCF    F81.2
....................                                delay_ms(quantum); 
1484:  MOVFF  25E,28A
1488:  MOVLB  2
148A:  INCF   x8A,F
148C:  DECF   x8A,F
148E:  BTFSC  FD8.2
1490:  BRA    14AC
1492:  CLRF   16
1494:  BTFSC  FF2.7
1496:  BSF    16.7
1498:  BCF    FF2.7
149A:  MOVLW  FF
149C:  MOVWF  x9A
149E:  MOVLB  0
14A0:  CALL   024E
14A4:  BTFSC  16.7
14A6:  BSF    FF2.7
14A8:  MOVLB  2
14AA:  BRA    148C
14AC:  CLRF   16
14AE:  BTFSC  FF2.7
14B0:  BSF    16.7
14B2:  BCF    FF2.7
14B4:  MOVFF  25D,29A
14B8:  MOVLB  0
14BA:  CALL   024E
14BE:  BTFSC  16.7
14C0:  BSF    FF2.7
14C2:  MOVLB  2
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
14C4:  MOVF   19,W
14C6:  SUBLW  0A
14C8:  BNZ   14D8
14CA:  MOVF   1C,W
14CC:  SUBLW  09
14CE:  BNC   14D8
14D0:  MOVLB  0
14D2:  RCALL  1140
....................                  else{ if(contador2==16) do_proceso2();} 
14D4:  BRA    14E2
14D6:  MOVLB  2
14D8:  MOVF   1A,W
14DA:  SUBLW  10
14DC:  BNZ   14E4
14DE:  MOVLB  0
14E0:  RCALL  1198
14E2:  MOVLB  2
....................           
....................                  if(tecla_pulsada=='3'){ 
14E4:  MOVF   17,W
14E6:  SUBLW  33
14E8:  BNZ   14F0
....................                       break; 
14EA:  MOVLB  0
14EC:  BRA    14F8
14EE:  MOVLB  2
....................                   } 
....................                
....................                   contador1++; 
14F0:  INCF   19,F
....................                    
....................               } 
14F2:  INCF   1A,F
14F4:  MOVLB  0
14F6:  BRA    1340
....................  
....................               if(tecla_pulsada=='3'){ 
14F8:  MOVF   17,W
14FA:  SUBLW  33
14FC:  BTFSS  FD8.2
14FE:  BRA    1784
....................                       for (contador3=1;contador3<=20;contador3++){ 
1500:  MOVLW  01
1502:  MOVWF  1B
1504:  MOVF   1B,W
1506:  SUBLW  14
1508:  BTFSS  FD8.0
150A:  BRA    1784
....................                            copia3=contador3; 
150C:  MOVFF  1B,1E
1510:  CLRF   16
1512:  BTFSC  FF2.7
1514:  BSF    16.7
1516:  BCF    FF2.7
....................                            if(quantum*contador1<time1){ 
1518:  MOVFF  25E,299
151C:  MOVFF  25D,298
1520:  MOVLB  2
1522:  CLRF   x9B
1524:  MOVFF  19,29A
1528:  MOVLB  0
152A:  CALL   0276
152E:  BTFSC  16.7
1530:  BSF    FF2.7
1532:  MOVFF  02,28B
1536:  MOVFF  01,28A
153A:  MOVLB  2
153C:  MOVF   02,W
153E:  SUBWF  x58,W
1540:  BNC   15D4
1542:  BNZ   154A
1544:  MOVF   x57,W
1546:  SUBWF  x8A,W
1548:  BC    15D4
....................                             rb3=1; 
154A:  BSF    F81.3
....................                             rb2=1; 
154C:  BSF    F81.2
....................                             rb1=1; 
154E:  BSF    F81.1
....................                             delay_ms(quantum); 
1550:  MOVFF  25E,28A
1554:  INCF   x8A,F
1556:  DECF   x8A,F
1558:  BTFSC  FD8.2
155A:  BRA    1576
155C:  CLRF   16
155E:  BTFSC  FF2.7
1560:  BSF    16.7
1562:  BCF    FF2.7
1564:  MOVLW  FF
1566:  MOVWF  x9A
1568:  MOVLB  0
156A:  CALL   024E
156E:  BTFSC  16.7
1570:  BSF    FF2.7
1572:  MOVLB  2
1574:  BRA    1556
1576:  CLRF   16
1578:  BTFSC  FF2.7
157A:  BSF    16.7
157C:  BCF    FF2.7
157E:  MOVFF  25D,29A
1582:  MOVLB  0
1584:  CALL   024E
1588:  BTFSC  16.7
158A:  BSF    FF2.7
....................                             rb3=0; 
158C:  BCF    F81.3
....................                             rb1=0; 
158E:  BCF    F81.1
....................                             rb2=0; 
1590:  BCF    F81.2
....................                             delay_ms(quantum); 
1592:  MOVFF  25E,28A
1596:  MOVLB  2
1598:  INCF   x8A,F
159A:  DECF   x8A,F
159C:  BTFSC  FD8.2
159E:  BRA    15BA
15A0:  CLRF   16
15A2:  BTFSC  FF2.7
15A4:  BSF    16.7
15A6:  BCF    FF2.7
15A8:  MOVLW  FF
15AA:  MOVWF  x9A
15AC:  MOVLB  0
15AE:  CALL   024E
15B2:  BTFSC  16.7
15B4:  BSF    FF2.7
15B6:  MOVLB  2
15B8:  BRA    159A
15BA:  CLRF   16
15BC:  BTFSC  FF2.7
15BE:  BSF    16.7
15C0:  BCF    FF2.7
15C2:  MOVFF  25D,29A
15C6:  MOVLB  0
15C8:  CALL   024E
15CC:  BTFSC  16.7
15CE:  BSF    FF2.7
....................                                                }                                              
....................                    else  { 
15D0:  BRA    1748
15D2:  MOVLB  2
15D4:  CLRF   16
15D6:  BTFSC  FF2.7
15D8:  BSF    16.7
15DA:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<time2){ 
15DC:  MOVFF  25E,299
15E0:  MOVFF  25D,298
15E4:  CLRF   x9B
15E6:  MOVFF  1A,29A
15EA:  MOVLB  0
15EC:  CALL   0276
15F0:  BTFSC  16.7
15F2:  BSF    FF2.7
15F4:  MOVFF  02,28B
15F8:  MOVFF  01,28A
15FC:  MOVLB  2
15FE:  MOVF   02,W
1600:  SUBWF  x5A,W
1602:  BNC   1692
1604:  BNZ   160C
1606:  MOVF   x59,W
1608:  SUBWF  x8A,W
160A:  BC    1692
....................                                rb3=1; 
160C:  BSF    F81.3
....................                                rb2=1; 
160E:  BSF    F81.2
....................                                delay_ms(quantum); 
1610:  MOVFF  25E,28A
1614:  INCF   x8A,F
1616:  DECF   x8A,F
1618:  BTFSC  FD8.2
161A:  BRA    1636
161C:  CLRF   16
161E:  BTFSC  FF2.7
1620:  BSF    16.7
1622:  BCF    FF2.7
1624:  MOVLW  FF
1626:  MOVWF  x9A
1628:  MOVLB  0
162A:  CALL   024E
162E:  BTFSC  16.7
1630:  BSF    FF2.7
1632:  MOVLB  2
1634:  BRA    1616
1636:  CLRF   16
1638:  BTFSC  FF2.7
163A:  BSF    16.7
163C:  BCF    FF2.7
163E:  MOVFF  25D,29A
1642:  MOVLB  0
1644:  CALL   024E
1648:  BTFSC  16.7
164A:  BSF    FF2.7
....................                                rb3=0; 
164C:  BCF    F81.3
....................                                rb2=0; 
164E:  BCF    F81.2
....................                                delay_ms(quantum); 
1650:  MOVFF  25E,28A
1654:  MOVLB  2
1656:  INCF   x8A,F
1658:  DECF   x8A,F
165A:  BTFSC  FD8.2
165C:  BRA    1678
165E:  CLRF   16
1660:  BTFSC  FF2.7
1662:  BSF    16.7
1664:  BCF    FF2.7
1666:  MOVLW  FF
1668:  MOVWF  x9A
166A:  MOVLB  0
166C:  CALL   024E
1670:  BTFSC  16.7
1672:  BSF    FF2.7
1674:  MOVLB  2
1676:  BRA    1658
1678:  CLRF   16
167A:  BTFSC  FF2.7
167C:  BSF    16.7
167E:  BCF    FF2.7
1680:  MOVFF  25D,29A
1684:  MOVLB  0
1686:  CALL   024E
168A:  BTFSC  16.7
168C:  BSF    FF2.7
....................                                                     }  
....................                      else { 
168E:  BRA    1748
1690:  MOVLB  2
1692:  CLRF   16
1694:  BTFSC  FF2.7
1696:  BSF    16.7
1698:  BCF    FF2.7
....................                          if(quantum*contador3<time3){ 
169A:  MOVFF  25E,299
169E:  MOVFF  25D,298
16A2:  CLRF   x9B
16A4:  MOVFF  1B,29A
16A8:  MOVLB  0
16AA:  CALL   0276
16AE:  BTFSC  16.7
16B0:  BSF    FF2.7
16B2:  MOVFF  02,28B
16B6:  MOVFF  01,28A
16BA:  MOVLB  2
16BC:  MOVF   02,W
16BE:  SUBWF  x5C,W
16C0:  BNC   174A
16C2:  BNZ   16CA
16C4:  MOVF   x5B,W
16C6:  SUBWF  x8A,W
16C8:  BC    174A
....................                                rb3=1; 
16CA:  BSF    F81.3
....................                                delay_ms(quantum); 
16CC:  MOVFF  25E,28A
16D0:  INCF   x8A,F
16D2:  DECF   x8A,F
16D4:  BTFSC  FD8.2
16D6:  BRA    16F2
16D8:  CLRF   16
16DA:  BTFSC  FF2.7
16DC:  BSF    16.7
16DE:  BCF    FF2.7
16E0:  MOVLW  FF
16E2:  MOVWF  x9A
16E4:  MOVLB  0
16E6:  CALL   024E
16EA:  BTFSC  16.7
16EC:  BSF    FF2.7
16EE:  MOVLB  2
16F0:  BRA    16D2
16F2:  CLRF   16
16F4:  BTFSC  FF2.7
16F6:  BSF    16.7
16F8:  BCF    FF2.7
16FA:  MOVFF  25D,29A
16FE:  MOVLB  0
1700:  CALL   024E
1704:  BTFSC  16.7
1706:  BSF    FF2.7
....................                                rb3=0; 
1708:  BCF    F81.3
....................                                delay_ms(quantum); 
170A:  MOVFF  25E,28A
170E:  MOVLB  2
1710:  INCF   x8A,F
1712:  DECF   x8A,F
1714:  BTFSC  FD8.2
1716:  BRA    1732
1718:  CLRF   16
171A:  BTFSC  FF2.7
171C:  BSF    16.7
171E:  BCF    FF2.7
1720:  MOVLW  FF
1722:  MOVWF  x9A
1724:  MOVLB  0
1726:  CALL   024E
172A:  BTFSC  16.7
172C:  BSF    FF2.7
172E:  MOVLB  2
1730:  BRA    1712
1732:  CLRF   16
1734:  BTFSC  FF2.7
1736:  BSF    16.7
1738:  BCF    FF2.7
173A:  MOVFF  25D,29A
173E:  MOVLB  0
1740:  CALL   024E
1744:  BTFSC  16.7
1746:  BSF    FF2.7
1748:  MOVLB  2
....................                                                      }  
....................                              } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1();                 
174A:  MOVF   19,W
174C:  SUBLW  0A
174E:  BNZ   175C
1750:  MOVF   1C,W
1752:  SUBLW  09
1754:  BNC   175C
1756:  MOVLB  0
1758:  RCALL  1140
175A:  MOVLB  2
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
175C:  MOVF   1A,W
175E:  SUBLW  10
1760:  BNZ   176E
1762:  MOVF   1D,W
1764:  SUBLW  0F
1766:  BNC   176E
1768:  MOVLB  0
176A:  RCALL  1198
176C:  MOVLB  2
....................                  if(contador3==20 )do_proceso3(); 
176E:  MOVF   1B,W
1770:  SUBLW  14
1772:  BNZ   177A
1774:  MOVLB  0
1776:  RCALL  11F0
1778:  MOVLB  2
....................  
....................                   contador1++; 
177A:  INCF   19,F
....................                   contador2++; 
177C:  INCF   1A,F
....................                  
....................               } 
177E:  INCF   1B,F
1780:  MOVLB  0
1782:  BRA    1504
....................                     
....................                    
....................    } 
....................          
....................                
.................... } 
....................           else { 
1784:  BRA    1E68
....................           if(tecla_pulsada=='3'){ 
1786:  MOVF   17,W
1788:  SUBLW  33
178A:  BTFSS  FD8.2
178C:  BRA    1E68
....................                for (contador3=1;contador3<=20;contador3++){ 
178E:  MOVLW  01
1790:  MOVWF  1B
1792:  MOVF   1B,W
1794:  SUBLW  14
1796:  BTFSS  FD8.0
1798:  BRA    1948
....................                     copia3=contador3; 
179A:  MOVFF  1B,1E
179E:  CLRF   16
17A0:  BTFSC  FF2.7
17A2:  BSF    16.7
17A4:  BCF    FF2.7
....................                     if(quantum*contador1<time1){ 
17A6:  MOVFF  25E,299
17AA:  MOVFF  25D,298
17AE:  MOVLB  2
17B0:  CLRF   x9B
17B2:  MOVFF  19,29A
17B6:  MOVLB  0
17B8:  CALL   0276
17BC:  BTFSC  16.7
17BE:  BSF    FF2.7
17C0:  MOVFF  02,28B
17C4:  MOVFF  01,28A
17C8:  MOVLB  2
17CA:  MOVF   02,W
17CC:  SUBWF  x58,W
17CE:  BNC   185E
17D0:  BNZ   17D8
17D2:  MOVF   x57,W
17D4:  SUBWF  x8A,W
17D6:  BC    185E
....................                       rb3=1; 
17D8:  BSF    F81.3
....................                       rb1=1; 
17DA:  BSF    F81.1
....................                       delay_ms(quantum); 
17DC:  MOVFF  25E,28A
17E0:  INCF   x8A,F
17E2:  DECF   x8A,F
17E4:  BTFSC  FD8.2
17E6:  BRA    1802
17E8:  CLRF   16
17EA:  BTFSC  FF2.7
17EC:  BSF    16.7
17EE:  BCF    FF2.7
17F0:  MOVLW  FF
17F2:  MOVWF  x9A
17F4:  MOVLB  0
17F6:  CALL   024E
17FA:  BTFSC  16.7
17FC:  BSF    FF2.7
17FE:  MOVLB  2
1800:  BRA    17E2
1802:  CLRF   16
1804:  BTFSC  FF2.7
1806:  BSF    16.7
1808:  BCF    FF2.7
180A:  MOVFF  25D,29A
180E:  MOVLB  0
1810:  CALL   024E
1814:  BTFSC  16.7
1816:  BSF    FF2.7
....................                       rb3=0; 
1818:  BCF    F81.3
....................                       rb1=0; 
181A:  BCF    F81.1
....................                       delay_ms(quantum); 
181C:  MOVFF  25E,28A
1820:  MOVLB  2
1822:  INCF   x8A,F
1824:  DECF   x8A,F
1826:  BTFSC  FD8.2
1828:  BRA    1844
182A:  CLRF   16
182C:  BTFSC  FF2.7
182E:  BSF    16.7
1830:  BCF    FF2.7
1832:  MOVLW  FF
1834:  MOVWF  x9A
1836:  MOVLB  0
1838:  CALL   024E
183C:  BTFSC  16.7
183E:  BSF    FF2.7
1840:  MOVLB  2
1842:  BRA    1824
1844:  CLRF   16
1846:  BTFSC  FF2.7
1848:  BSF    16.7
184A:  BCF    FF2.7
184C:  MOVFF  25D,29A
1850:  MOVLB  0
1852:  CALL   024E
1856:  BTFSC  16.7
1858:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
185A:  BRA    1914
185C:  MOVLB  2
185E:  CLRF   16
1860:  BTFSC  FF2.7
1862:  BSF    16.7
1864:  BCF    FF2.7
....................                     
....................                           if(quantum*contador3<=time3){ 
1866:  MOVFF  25E,299
186A:  MOVFF  25D,298
186E:  CLRF   x9B
1870:  MOVFF  1B,29A
1874:  MOVLB  0
1876:  CALL   0276
187A:  BTFSC  16.7
187C:  BSF    FF2.7
187E:  MOVFF  02,28B
1882:  MOVFF  01,28A
1886:  MOVLB  2
1888:  MOVF   02,W
188A:  SUBWF  x5C,W
188C:  BNC   1916
188E:  BNZ   1896
1890:  MOVF   x8A,W
1892:  SUBWF  x5B,W
1894:  BNC   1916
....................                                rb3=1; 
1896:  BSF    F81.3
....................                                delay_ms(quantum); 
1898:  MOVFF  25E,28A
189C:  INCF   x8A,F
189E:  DECF   x8A,F
18A0:  BTFSC  FD8.2
18A2:  BRA    18BE
18A4:  CLRF   16
18A6:  BTFSC  FF2.7
18A8:  BSF    16.7
18AA:  BCF    FF2.7
18AC:  MOVLW  FF
18AE:  MOVWF  x9A
18B0:  MOVLB  0
18B2:  CALL   024E
18B6:  BTFSC  16.7
18B8:  BSF    FF2.7
18BA:  MOVLB  2
18BC:  BRA    189E
18BE:  CLRF   16
18C0:  BTFSC  FF2.7
18C2:  BSF    16.7
18C4:  BCF    FF2.7
18C6:  MOVFF  25D,29A
18CA:  MOVLB  0
18CC:  CALL   024E
18D0:  BTFSC  16.7
18D2:  BSF    FF2.7
....................                                rb3=0; 
18D4:  BCF    F81.3
....................                                delay_ms(quantum); 
18D6:  MOVFF  25E,28A
18DA:  MOVLB  2
18DC:  INCF   x8A,F
18DE:  DECF   x8A,F
18E0:  BTFSC  FD8.2
18E2:  BRA    18FE
18E4:  CLRF   16
18E6:  BTFSC  FF2.7
18E8:  BSF    16.7
18EA:  BCF    FF2.7
18EC:  MOVLW  FF
18EE:  MOVWF  x9A
18F0:  MOVLB  0
18F2:  CALL   024E
18F6:  BTFSC  16.7
18F8:  BSF    FF2.7
18FA:  MOVLB  2
18FC:  BRA    18DE
18FE:  CLRF   16
1900:  BTFSC  FF2.7
1902:  BSF    16.7
1904:  BCF    FF2.7
1906:  MOVFF  25D,29A
190A:  MOVLB  0
190C:  CALL   024E
1910:  BTFSC  16.7
1912:  BSF    FF2.7
1914:  MOVLB  2
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
1916:  MOVF   19,W
1918:  SUBLW  0A
191A:  BNZ   1928
191C:  MOVF   1C,W
191E:  SUBLW  09
1920:  BNC   1928
1922:  MOVLB  0
1924:  RCALL  1140
1926:  MOVLB  2
....................                  if(contador3==20 )do_proceso3(); 
1928:  MOVF   1B,W
192A:  SUBLW  14
192C:  BNZ   1934
192E:  MOVLB  0
1930:  RCALL  11F0
1932:  MOVLB  2
....................                   
....................                  if(tecla_pulsada=='2'){ 
1934:  MOVF   17,W
1936:  SUBLW  32
1938:  BNZ   1940
....................                       break; 
193A:  MOVLB  0
193C:  BRA    1948
193E:  MOVLB  2
....................                   } 
....................                   contador1++; 
1940:  INCF   19,F
....................  
....................                  } 
1942:  INCF   1B,F
1944:  MOVLB  0
1946:  BRA    1792
....................                  if(tecla_pulsada=='2'){ 
1948:  MOVF   17,W
194A:  SUBLW  32
194C:  BTFSS  FD8.2
194E:  BRA    1E68
....................                          if(copia3<=4){///////////// 
1950:  MOVF   1E,W
1952:  SUBLW  04
1954:  BTFSS  FD8.0
1956:  BRA    1BDE
....................                            for (contador3=copia3;contador3<=20;contador3++){ 
1958:  MOVFF  1E,1B
195C:  MOVF   1B,W
195E:  SUBLW  14
1960:  BTFSS  FD8.0
1962:  BRA    1BDC
....................                     copia3=contador3; 
1964:  MOVFF  1B,1E
1968:  CLRF   16
196A:  BTFSC  FF2.7
196C:  BSF    16.7
196E:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
1970:  MOVFF  25E,299
1974:  MOVFF  25D,298
1978:  MOVLB  2
197A:  CLRF   x9B
197C:  MOVFF  19,29A
1980:  MOVLB  0
1982:  CALL   0276
1986:  BTFSC  16.7
1988:  BSF    FF2.7
198A:  MOVFF  02,28B
198E:  MOVFF  01,28A
1992:  MOVLB  2
1994:  MOVF   02,W
1996:  SUBWF  x58,W
1998:  BNC   1A2C
199A:  BNZ   19A2
199C:  MOVF   x8A,W
199E:  SUBWF  x57,W
19A0:  BNC   1A2C
....................                       rb2=1; 
19A2:  BSF    F81.2
....................                       rb3=1; 
19A4:  BSF    F81.3
....................                       rb1=1; 
19A6:  BSF    F81.1
....................                       delay_ms(quantum); 
19A8:  MOVFF  25E,28A
19AC:  INCF   x8A,F
19AE:  DECF   x8A,F
19B0:  BTFSC  FD8.2
19B2:  BRA    19CE
19B4:  CLRF   16
19B6:  BTFSC  FF2.7
19B8:  BSF    16.7
19BA:  BCF    FF2.7
19BC:  MOVLW  FF
19BE:  MOVWF  x9A
19C0:  MOVLB  0
19C2:  CALL   024E
19C6:  BTFSC  16.7
19C8:  BSF    FF2.7
19CA:  MOVLB  2
19CC:  BRA    19AE
19CE:  CLRF   16
19D0:  BTFSC  FF2.7
19D2:  BSF    16.7
19D4:  BCF    FF2.7
19D6:  MOVFF  25D,29A
19DA:  MOVLB  0
19DC:  CALL   024E
19E0:  BTFSC  16.7
19E2:  BSF    FF2.7
....................                       rb2=0; 
19E4:  BCF    F81.2
....................                       rb3=0; 
19E6:  BCF    F81.3
....................                       rb1=0; 
19E8:  BCF    F81.1
....................                       delay_ms(quantum); 
19EA:  MOVFF  25E,28A
19EE:  MOVLB  2
19F0:  INCF   x8A,F
19F2:  DECF   x8A,F
19F4:  BTFSC  FD8.2
19F6:  BRA    1A12
19F8:  CLRF   16
19FA:  BTFSC  FF2.7
19FC:  BSF    16.7
19FE:  BCF    FF2.7
1A00:  MOVLW  FF
1A02:  MOVWF  x9A
1A04:  MOVLB  0
1A06:  CALL   024E
1A0A:  BTFSC  16.7
1A0C:  BSF    FF2.7
1A0E:  MOVLB  2
1A10:  BRA    19F2
1A12:  CLRF   16
1A14:  BTFSC  FF2.7
1A16:  BSF    16.7
1A18:  BCF    FF2.7
1A1A:  MOVFF  25D,29A
1A1E:  MOVLB  0
1A20:  CALL   024E
1A24:  BTFSC  16.7
1A26:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
1A28:  BRA    1BA0
1A2A:  MOVLB  2
1A2C:  CLRF   16
1A2E:  BTFSC  FF2.7
1A30:  BSF    16.7
1A32:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<=time2){ 
1A34:  MOVFF  25E,299
1A38:  MOVFF  25D,298
1A3C:  CLRF   x9B
1A3E:  MOVFF  1A,29A
1A42:  MOVLB  0
1A44:  CALL   0276
1A48:  BTFSC  16.7
1A4A:  BSF    FF2.7
1A4C:  MOVFF  02,28B
1A50:  MOVFF  01,28A
1A54:  MOVLB  2
1A56:  MOVF   02,W
1A58:  SUBWF  x5A,W
1A5A:  BNC   1AEA
1A5C:  BNZ   1A64
1A5E:  MOVF   x8A,W
1A60:  SUBWF  x59,W
1A62:  BNC   1AEA
....................                                rb2=1; 
1A64:  BSF    F81.2
....................                                rb3=1; 
1A66:  BSF    F81.3
....................                                delay_ms(quantum); 
1A68:  MOVFF  25E,28A
1A6C:  INCF   x8A,F
1A6E:  DECF   x8A,F
1A70:  BTFSC  FD8.2
1A72:  BRA    1A8E
1A74:  CLRF   16
1A76:  BTFSC  FF2.7
1A78:  BSF    16.7
1A7A:  BCF    FF2.7
1A7C:  MOVLW  FF
1A7E:  MOVWF  x9A
1A80:  MOVLB  0
1A82:  CALL   024E
1A86:  BTFSC  16.7
1A88:  BSF    FF2.7
1A8A:  MOVLB  2
1A8C:  BRA    1A6E
1A8E:  CLRF   16
1A90:  BTFSC  FF2.7
1A92:  BSF    16.7
1A94:  BCF    FF2.7
1A96:  MOVFF  25D,29A
1A9A:  MOVLB  0
1A9C:  CALL   024E
1AA0:  BTFSC  16.7
1AA2:  BSF    FF2.7
....................                                rb2=0; 
1AA4:  BCF    F81.2
....................                                rb3=0; 
1AA6:  BCF    F81.3
....................                                delay_ms(quantum); 
1AA8:  MOVFF  25E,28A
1AAC:  MOVLB  2
1AAE:  INCF   x8A,F
1AB0:  DECF   x8A,F
1AB2:  BTFSC  FD8.2
1AB4:  BRA    1AD0
1AB6:  CLRF   16
1AB8:  BTFSC  FF2.7
1ABA:  BSF    16.7
1ABC:  BCF    FF2.7
1ABE:  MOVLW  FF
1AC0:  MOVWF  x9A
1AC2:  MOVLB  0
1AC4:  CALL   024E
1AC8:  BTFSC  16.7
1ACA:  BSF    FF2.7
1ACC:  MOVLB  2
1ACE:  BRA    1AB0
1AD0:  CLRF   16
1AD2:  BTFSC  FF2.7
1AD4:  BSF    16.7
1AD6:  BCF    FF2.7
1AD8:  MOVFF  25D,29A
1ADC:  MOVLB  0
1ADE:  CALL   024E
1AE2:  BTFSC  16.7
1AE4:  BSF    FF2.7
....................                                                      }  
....................                              else{ 
1AE6:  BRA    1BA0
1AE8:  MOVLB  2
1AEA:  CLRF   16
1AEC:  BTFSC  FF2.7
1AEE:  BSF    16.7
1AF0:  BCF    FF2.7
....................                                         if(quantum*contador3<=time3){ 
1AF2:  MOVFF  25E,299
1AF6:  MOVFF  25D,298
1AFA:  CLRF   x9B
1AFC:  MOVFF  1B,29A
1B00:  MOVLB  0
1B02:  CALL   0276
1B06:  BTFSC  16.7
1B08:  BSF    FF2.7
1B0A:  MOVFF  02,28B
1B0E:  MOVFF  01,28A
1B12:  MOVLB  2
1B14:  MOVF   02,W
1B16:  SUBWF  x5C,W
1B18:  BNC   1BA2
1B1A:  BNZ   1B22
1B1C:  MOVF   x8A,W
1B1E:  SUBWF  x5B,W
1B20:  BNC   1BA2
....................                                rb3=1; 
1B22:  BSF    F81.3
....................                                
....................                                delay_ms(quantum); 
1B24:  MOVFF  25E,28A
1B28:  INCF   x8A,F
1B2A:  DECF   x8A,F
1B2C:  BTFSC  FD8.2
1B2E:  BRA    1B4A
1B30:  CLRF   16
1B32:  BTFSC  FF2.7
1B34:  BSF    16.7
1B36:  BCF    FF2.7
1B38:  MOVLW  FF
1B3A:  MOVWF  x9A
1B3C:  MOVLB  0
1B3E:  CALL   024E
1B42:  BTFSC  16.7
1B44:  BSF    FF2.7
1B46:  MOVLB  2
1B48:  BRA    1B2A
1B4A:  CLRF   16
1B4C:  BTFSC  FF2.7
1B4E:  BSF    16.7
1B50:  BCF    FF2.7
1B52:  MOVFF  25D,29A
1B56:  MOVLB  0
1B58:  CALL   024E
1B5C:  BTFSC  16.7
1B5E:  BSF    FF2.7
....................                                rb3=0; 
1B60:  BCF    F81.3
....................                                
....................                                delay_ms(quantum); 
1B62:  MOVFF  25E,28A
1B66:  MOVLB  2
1B68:  INCF   x8A,F
1B6A:  DECF   x8A,F
1B6C:  BTFSC  FD8.2
1B6E:  BRA    1B8A
1B70:  CLRF   16
1B72:  BTFSC  FF2.7
1B74:  BSF    16.7
1B76:  BCF    FF2.7
1B78:  MOVLW  FF
1B7A:  MOVWF  x9A
1B7C:  MOVLB  0
1B7E:  CALL   024E
1B82:  BTFSC  16.7
1B84:  BSF    FF2.7
1B86:  MOVLB  2
1B88:  BRA    1B6A
1B8A:  CLRF   16
1B8C:  BTFSC  FF2.7
1B8E:  BSF    16.7
1B90:  BCF    FF2.7
1B92:  MOVFF  25D,29A
1B96:  MOVLB  0
1B98:  CALL   024E
1B9C:  BTFSC  16.7
1B9E:  BSF    FF2.7
1BA0:  MOVLB  2
....................                                                      }                
....................                                                       
....................                                                      } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
1BA2:  MOVF   19,W
1BA4:  SUBLW  0A
1BA6:  BNZ   1BB6
1BA8:  MOVF   1C,W
1BAA:  SUBLW  09
1BAC:  BNC   1BB6
1BAE:  MOVLB  0
1BB0:  CALL   1140
1BB4:  MOVLB  2
....................                  if(contador3==20 )do_proceso3(); 
1BB6:  MOVF   1B,W
1BB8:  SUBLW  14
1BBA:  BNZ   1BC4
1BBC:  MOVLB  0
1BBE:  CALL   11F0
1BC2:  MOVLB  2
....................                  if(contador2==16 )do_proceso2(); 
1BC4:  MOVF   1A,W
1BC6:  SUBLW  10
1BC8:  BNZ   1BD2
1BCA:  MOVLB  0
1BCC:  CALL   1198
1BD0:  MOVLB  2
....................                   contador1++; 
1BD2:  INCF   19,F
....................                   contador2++; 
1BD4:  INCF   1A,F
....................  
....................                  } 
1BD6:  INCF   1B,F
1BD8:  MOVLB  0
1BDA:  BRA    195C
....................                          } 
....................                          else{ 
1BDC:  BRA    1E68
....................                               for (contador2=1;contador2<=16;contador2++){ 
1BDE:  MOVLW  01
1BE0:  MOVWF  1A
1BE2:  MOVF   1A,W
1BE4:  SUBLW  10
1BE6:  BTFSS  FD8.0
1BE8:  BRA    1E68
....................                     copia2=contador2; 
1BEA:  MOVFF  1A,1D
1BEE:  CLRF   16
1BF0:  BTFSC  FF2.7
1BF2:  BSF    16.7
1BF4:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
1BF6:  MOVFF  25E,299
1BFA:  MOVFF  25D,298
1BFE:  MOVLB  2
1C00:  CLRF   x9B
1C02:  MOVFF  19,29A
1C06:  MOVLB  0
1C08:  CALL   0276
1C0C:  BTFSC  16.7
1C0E:  BSF    FF2.7
1C10:  MOVFF  02,28B
1C14:  MOVFF  01,28A
1C18:  MOVLB  2
1C1A:  MOVF   02,W
1C1C:  SUBWF  x58,W
1C1E:  BNC   1CB2
1C20:  BNZ   1C28
1C22:  MOVF   x8A,W
1C24:  SUBWF  x57,W
1C26:  BNC   1CB2
....................                       rb2=1; 
1C28:  BSF    F81.2
....................                       rb3=1; 
1C2A:  BSF    F81.3
....................                       rb1=1; 
1C2C:  BSF    F81.1
....................                       delay_ms(quantum); 
1C2E:  MOVFF  25E,28A
1C32:  INCF   x8A,F
1C34:  DECF   x8A,F
1C36:  BTFSC  FD8.2
1C38:  BRA    1C54
1C3A:  CLRF   16
1C3C:  BTFSC  FF2.7
1C3E:  BSF    16.7
1C40:  BCF    FF2.7
1C42:  MOVLW  FF
1C44:  MOVWF  x9A
1C46:  MOVLB  0
1C48:  CALL   024E
1C4C:  BTFSC  16.7
1C4E:  BSF    FF2.7
1C50:  MOVLB  2
1C52:  BRA    1C34
1C54:  CLRF   16
1C56:  BTFSC  FF2.7
1C58:  BSF    16.7
1C5A:  BCF    FF2.7
1C5C:  MOVFF  25D,29A
1C60:  MOVLB  0
1C62:  CALL   024E
1C66:  BTFSC  16.7
1C68:  BSF    FF2.7
....................                       rb2=0; 
1C6A:  BCF    F81.2
....................                       rb3=0; 
1C6C:  BCF    F81.3
....................                       rb1=0; 
1C6E:  BCF    F81.1
....................                       delay_ms(quantum); 
1C70:  MOVFF  25E,28A
1C74:  MOVLB  2
1C76:  INCF   x8A,F
1C78:  DECF   x8A,F
1C7A:  BTFSC  FD8.2
1C7C:  BRA    1C98
1C7E:  CLRF   16
1C80:  BTFSC  FF2.7
1C82:  BSF    16.7
1C84:  BCF    FF2.7
1C86:  MOVLW  FF
1C88:  MOVWF  x9A
1C8A:  MOVLB  0
1C8C:  CALL   024E
1C90:  BTFSC  16.7
1C92:  BSF    FF2.7
1C94:  MOVLB  2
1C96:  BRA    1C78
1C98:  CLRF   16
1C9A:  BTFSC  FF2.7
1C9C:  BSF    16.7
1C9E:  BCF    FF2.7
1CA0:  MOVFF  25D,29A
1CA4:  MOVLB  0
1CA6:  CALL   024E
1CAA:  BTFSC  16.7
1CAC:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
1CAE:  BRA    1E26
1CB0:  MOVLB  2
1CB2:  CLRF   16
1CB4:  BTFSC  FF2.7
1CB6:  BSF    16.7
1CB8:  BCF    FF2.7
....................                     
....................                           if(quantum*contador3<=time3){ 
1CBA:  MOVFF  25E,299
1CBE:  MOVFF  25D,298
1CC2:  CLRF   x9B
1CC4:  MOVFF  1B,29A
1CC8:  MOVLB  0
1CCA:  CALL   0276
1CCE:  BTFSC  16.7
1CD0:  BSF    FF2.7
1CD2:  MOVFF  02,28B
1CD6:  MOVFF  01,28A
1CDA:  MOVLB  2
1CDC:  MOVF   02,W
1CDE:  SUBWF  x5C,W
1CE0:  BNC   1D70
1CE2:  BNZ   1CEA
1CE4:  MOVF   x8A,W
1CE6:  SUBWF  x5B,W
1CE8:  BNC   1D70
....................                                rb2=1; 
1CEA:  BSF    F81.2
....................                                rb3=1; 
1CEC:  BSF    F81.3
....................                                delay_ms(quantum); 
1CEE:  MOVFF  25E,28A
1CF2:  INCF   x8A,F
1CF4:  DECF   x8A,F
1CF6:  BTFSC  FD8.2
1CF8:  BRA    1D14
1CFA:  CLRF   16
1CFC:  BTFSC  FF2.7
1CFE:  BSF    16.7
1D00:  BCF    FF2.7
1D02:  MOVLW  FF
1D04:  MOVWF  x9A
1D06:  MOVLB  0
1D08:  CALL   024E
1D0C:  BTFSC  16.7
1D0E:  BSF    FF2.7
1D10:  MOVLB  2
1D12:  BRA    1CF4
1D14:  CLRF   16
1D16:  BTFSC  FF2.7
1D18:  BSF    16.7
1D1A:  BCF    FF2.7
1D1C:  MOVFF  25D,29A
1D20:  MOVLB  0
1D22:  CALL   024E
1D26:  BTFSC  16.7
1D28:  BSF    FF2.7
....................                                rb2=0; 
1D2A:  BCF    F81.2
....................                                rb3=0; 
1D2C:  BCF    F81.3
....................                                delay_ms(quantum); 
1D2E:  MOVFF  25E,28A
1D32:  MOVLB  2
1D34:  INCF   x8A,F
1D36:  DECF   x8A,F
1D38:  BTFSC  FD8.2
1D3A:  BRA    1D56
1D3C:  CLRF   16
1D3E:  BTFSC  FF2.7
1D40:  BSF    16.7
1D42:  BCF    FF2.7
1D44:  MOVLW  FF
1D46:  MOVWF  x9A
1D48:  MOVLB  0
1D4A:  CALL   024E
1D4E:  BTFSC  16.7
1D50:  BSF    FF2.7
1D52:  MOVLB  2
1D54:  BRA    1D36
1D56:  CLRF   16
1D58:  BTFSC  FF2.7
1D5A:  BSF    16.7
1D5C:  BCF    FF2.7
1D5E:  MOVFF  25D,29A
1D62:  MOVLB  0
1D64:  CALL   024E
1D68:  BTFSC  16.7
1D6A:  BSF    FF2.7
....................                                                      }  
....................                              else{ 
1D6C:  BRA    1E26
1D6E:  MOVLB  2
1D70:  CLRF   16
1D72:  BTFSC  FF2.7
1D74:  BSF    16.7
1D76:  BCF    FF2.7
....................                                         if(quantum*contador2<=time2){ 
1D78:  MOVFF  25E,299
1D7C:  MOVFF  25D,298
1D80:  CLRF   x9B
1D82:  MOVFF  1A,29A
1D86:  MOVLB  0
1D88:  CALL   0276
1D8C:  BTFSC  16.7
1D8E:  BSF    FF2.7
1D90:  MOVFF  02,28B
1D94:  MOVFF  01,28A
1D98:  MOVLB  2
1D9A:  MOVF   02,W
1D9C:  SUBWF  x5A,W
1D9E:  BNC   1E28
1DA0:  BNZ   1DA8
1DA2:  MOVF   x8A,W
1DA4:  SUBWF  x59,W
1DA6:  BNC   1E28
....................                                rb2=1; 
1DA8:  BSF    F81.2
....................                                
....................                                delay_ms(quantum); 
1DAA:  MOVFF  25E,28A
1DAE:  INCF   x8A,F
1DB0:  DECF   x8A,F
1DB2:  BTFSC  FD8.2
1DB4:  BRA    1DD0
1DB6:  CLRF   16
1DB8:  BTFSC  FF2.7
1DBA:  BSF    16.7
1DBC:  BCF    FF2.7
1DBE:  MOVLW  FF
1DC0:  MOVWF  x9A
1DC2:  MOVLB  0
1DC4:  CALL   024E
1DC8:  BTFSC  16.7
1DCA:  BSF    FF2.7
1DCC:  MOVLB  2
1DCE:  BRA    1DB0
1DD0:  CLRF   16
1DD2:  BTFSC  FF2.7
1DD4:  BSF    16.7
1DD6:  BCF    FF2.7
1DD8:  MOVFF  25D,29A
1DDC:  MOVLB  0
1DDE:  CALL   024E
1DE2:  BTFSC  16.7
1DE4:  BSF    FF2.7
....................                                rb2=0; 
1DE6:  BCF    F81.2
....................                                
....................                                delay_ms(quantum); 
1DE8:  MOVFF  25E,28A
1DEC:  MOVLB  2
1DEE:  INCF   x8A,F
1DF0:  DECF   x8A,F
1DF2:  BTFSC  FD8.2
1DF4:  BRA    1E10
1DF6:  CLRF   16
1DF8:  BTFSC  FF2.7
1DFA:  BSF    16.7
1DFC:  BCF    FF2.7
1DFE:  MOVLW  FF
1E00:  MOVWF  x9A
1E02:  MOVLB  0
1E04:  CALL   024E
1E08:  BTFSC  16.7
1E0A:  BSF    FF2.7
1E0C:  MOVLB  2
1E0E:  BRA    1DF0
1E10:  CLRF   16
1E12:  BTFSC  FF2.7
1E14:  BSF    16.7
1E16:  BCF    FF2.7
1E18:  MOVFF  25D,29A
1E1C:  MOVLB  0
1E1E:  CALL   024E
1E22:  BTFSC  16.7
1E24:  BSF    FF2.7
1E26:  MOVLB  2
....................                                                      }                
....................                                                       
....................                                                      } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
1E28:  MOVF   19,W
1E2A:  SUBLW  0A
1E2C:  BNZ   1E3C
1E2E:  MOVF   1C,W
1E30:  SUBLW  09
1E32:  BNC   1E3C
1E34:  MOVLB  0
1E36:  CALL   1140
1E3A:  MOVLB  2
....................                  if(contador3==20 && copia3<20)do_proceso3(); 
1E3C:  MOVF   1B,W
1E3E:  SUBLW  14
1E40:  BNZ   1E50
1E42:  MOVF   1E,W
1E44:  SUBLW  13
1E46:  BNC   1E50
1E48:  MOVLB  0
1E4A:  CALL   11F0
1E4E:  MOVLB  2
....................                  if(contador2==16 )do_proceso2(); 
1E50:  MOVF   1A,W
1E52:  SUBLW  10
1E54:  BNZ   1E5E
1E56:  MOVLB  0
1E58:  CALL   1198
1E5C:  MOVLB  2
....................                   contador1++; 
1E5E:  INCF   19,F
....................                   contador3++; 
1E60:  INCF   1B,F
....................  
....................                  } 
1E62:  INCF   1A,F
1E64:  MOVLB  0
1E66:  BRA    1BE2
....................                              } 
....................                   
....................                                        } 
....................               } 
.................... }   
....................           } 
1E68:  GOTO   4400 (RETURN)
....................            
.................... //////////////////////////////////////////// 
.................... void do_proceso22(){ 
.................... for (contador2=1;contador2<=16;contador2++){ 
1E6C:  MOVLW  01
1E6E:  MOVWF  1A
1E70:  MOVF   1A,W
1E72:  SUBLW  10
1E74:  BNC   1F50
....................              copia2=contador2; 
1E76:  MOVFF  1A,1D
1E7A:  CLRF   16
1E7C:  BTFSC  FF2.7
1E7E:  BSF    16.7
1E80:  BCF    FF2.7
....................              if(quantum*contador2<time2){ 
1E82:  MOVFF  25E,299
1E86:  MOVFF  25D,298
1E8A:  MOVLB  2
1E8C:  CLRF   x9B
1E8E:  MOVFF  1A,29A
1E92:  MOVLB  0
1E94:  CALL   0276
1E98:  BTFSC  16.7
1E9A:  BSF    FF2.7
1E9C:  MOVFF  02,28B
1EA0:  MOVFF  01,28A
1EA4:  MOVLB  2
1EA6:  MOVF   02,W
1EA8:  SUBWF  x5A,W
1EAA:  BNC   1F36
1EAC:  BNZ   1EB4
1EAE:  MOVF   x59,W
1EB0:  SUBWF  x8A,W
1EB2:  BC    1F36
....................                 rb2=1; 
1EB4:  BSF    F81.2
....................                 delay_ms(quantum); 
1EB6:  MOVFF  25E,28A
1EBA:  INCF   x8A,F
1EBC:  DECF   x8A,F
1EBE:  BTFSC  FD8.2
1EC0:  BRA    1EDC
1EC2:  CLRF   16
1EC4:  BTFSC  FF2.7
1EC6:  BSF    16.7
1EC8:  BCF    FF2.7
1ECA:  MOVLW  FF
1ECC:  MOVWF  x9A
1ECE:  MOVLB  0
1ED0:  CALL   024E
1ED4:  BTFSC  16.7
1ED6:  BSF    FF2.7
1ED8:  MOVLB  2
1EDA:  BRA    1EBC
1EDC:  CLRF   16
1EDE:  BTFSC  FF2.7
1EE0:  BSF    16.7
1EE2:  BCF    FF2.7
1EE4:  MOVFF  25D,29A
1EE8:  MOVLB  0
1EEA:  CALL   024E
1EEE:  BTFSC  16.7
1EF0:  BSF    FF2.7
....................                 rb2=0; 
1EF2:  BCF    F81.2
....................                 delay_ms(quantum); 
1EF4:  MOVFF  25E,28A
1EF8:  MOVLB  2
1EFA:  INCF   x8A,F
1EFC:  DECF   x8A,F
1EFE:  BTFSC  FD8.2
1F00:  BRA    1F1C
1F02:  CLRF   16
1F04:  BTFSC  FF2.7
1F06:  BSF    16.7
1F08:  BCF    FF2.7
1F0A:  MOVLW  FF
1F0C:  MOVWF  x9A
1F0E:  MOVLB  0
1F10:  CALL   024E
1F14:  BTFSC  16.7
1F16:  BSF    FF2.7
1F18:  MOVLB  2
1F1A:  BRA    1EFC
1F1C:  CLRF   16
1F1E:  BTFSC  FF2.7
1F20:  BSF    16.7
1F22:  BCF    FF2.7
1F24:  MOVFF  25D,29A
1F28:  MOVLB  0
1F2A:  CALL   024E
1F2E:  BTFSC  16.7
1F30:  BSF    FF2.7
....................                                         } 
....................              else { 
1F32:  BRA    1F3C
1F34:  MOVLB  2
....................                     do_proceso2(); 
1F36:  MOVLB  0
1F38:  CALL   1198
....................                    }   
....................              if(tecla_pulsada=='1'){ 
1F3C:  MOVF   17,W
1F3E:  SUBLW  31
1F40:  BNZ   1F44
....................                    break; 
1F42:  BRA    1F50
....................                   } 
....................              if(tecla_pulsada=='3'){ 
1F44:  MOVF   17,W
1F46:  SUBLW  33
1F48:  BNZ   1F4C
....................                    break; 
1F4A:  BRA    1F50
....................                   } 
....................          } 
1F4C:  INCF   1A,F
1F4E:  BRA    1E70
....................   
....................      if(tecla_pulsada=='1'){ 
1F50:  MOVF   17,W
1F52:  SUBLW  31
1F54:  BTFSS  FD8.2
1F56:  BRA    263A
....................                if(copia2<=6){ 
1F58:  MOVF   1D,W
1F5A:  SUBLW  06
1F5C:  BTFSS  FD8.0
1F5E:  BRA    2120
....................                for (contador2=copia2;contador2<=16;contador2++){ 
1F60:  MOVFF  1D,1A
1F64:  MOVF   1A,W
1F66:  SUBLW  10
1F68:  BTFSS  FD8.0
1F6A:  BRA    211E
....................                     copia2=contador2; 
1F6C:  MOVFF  1A,1D
1F70:  CLRF   16
1F72:  BTFSC  FF2.7
1F74:  BSF    16.7
1F76:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
1F78:  MOVFF  25E,299
1F7C:  MOVFF  25D,298
1F80:  MOVLB  2
1F82:  CLRF   x9B
1F84:  MOVFF  19,29A
1F88:  MOVLB  0
1F8A:  CALL   0276
1F8E:  BTFSC  16.7
1F90:  BSF    FF2.7
1F92:  MOVFF  02,28B
1F96:  MOVFF  01,28A
1F9A:  MOVLB  2
1F9C:  MOVF   02,W
1F9E:  SUBWF  x58,W
1FA0:  BNC   2030
1FA2:  BNZ   1FAA
1FA4:  MOVF   x8A,W
1FA6:  SUBWF  x57,W
1FA8:  BNC   2030
....................                       rb2=1; 
1FAA:  BSF    F81.2
....................                       rb1=1; 
1FAC:  BSF    F81.1
....................                       delay_ms(quantum); 
1FAE:  MOVFF  25E,28A
1FB2:  INCF   x8A,F
1FB4:  DECF   x8A,F
1FB6:  BTFSC  FD8.2
1FB8:  BRA    1FD4
1FBA:  CLRF   16
1FBC:  BTFSC  FF2.7
1FBE:  BSF    16.7
1FC0:  BCF    FF2.7
1FC2:  MOVLW  FF
1FC4:  MOVWF  x9A
1FC6:  MOVLB  0
1FC8:  CALL   024E
1FCC:  BTFSC  16.7
1FCE:  BSF    FF2.7
1FD0:  MOVLB  2
1FD2:  BRA    1FB4
1FD4:  CLRF   16
1FD6:  BTFSC  FF2.7
1FD8:  BSF    16.7
1FDA:  BCF    FF2.7
1FDC:  MOVFF  25D,29A
1FE0:  MOVLB  0
1FE2:  CALL   024E
1FE6:  BTFSC  16.7
1FE8:  BSF    FF2.7
....................                       rb1=0; 
1FEA:  BCF    F81.1
....................                       rb2=0; 
1FEC:  BCF    F81.2
....................                       delay_ms(quantum); 
1FEE:  MOVFF  25E,28A
1FF2:  MOVLB  2
1FF4:  INCF   x8A,F
1FF6:  DECF   x8A,F
1FF8:  BTFSC  FD8.2
1FFA:  BRA    2016
1FFC:  CLRF   16
1FFE:  BTFSC  FF2.7
2000:  BSF    16.7
2002:  BCF    FF2.7
2004:  MOVLW  FF
2006:  MOVWF  x9A
2008:  MOVLB  0
200A:  CALL   024E
200E:  BTFSC  16.7
2010:  BSF    FF2.7
2012:  MOVLB  2
2014:  BRA    1FF6
2016:  CLRF   16
2018:  BTFSC  FF2.7
201A:  BSF    16.7
201C:  BCF    FF2.7
201E:  MOVFF  25D,29A
2022:  MOVLB  0
2024:  CALL   024E
2028:  BTFSC  16.7
202A:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
202C:  BRA    20E6
202E:  MOVLB  2
2030:  CLRF   16
2032:  BTFSC  FF2.7
2034:  BSF    16.7
2036:  BCF    FF2.7
....................  
....................                           if(quantum*contador2<time2){ 
2038:  MOVFF  25E,299
203C:  MOVFF  25D,298
2040:  CLRF   x9B
2042:  MOVFF  1A,29A
2046:  MOVLB  0
2048:  CALL   0276
204C:  BTFSC  16.7
204E:  BSF    FF2.7
2050:  MOVFF  02,28B
2054:  MOVFF  01,28A
2058:  MOVLB  2
205A:  MOVF   02,W
205C:  SUBWF  x5A,W
205E:  BNC   20E8
2060:  BNZ   2068
2062:  MOVF   x59,W
2064:  SUBWF  x8A,W
2066:  BC    20E8
....................                                rb2=1; 
2068:  BSF    F81.2
....................                                delay_ms(quantum); 
206A:  MOVFF  25E,28A
206E:  INCF   x8A,F
2070:  DECF   x8A,F
2072:  BTFSC  FD8.2
2074:  BRA    2090
2076:  CLRF   16
2078:  BTFSC  FF2.7
207A:  BSF    16.7
207C:  BCF    FF2.7
207E:  MOVLW  FF
2080:  MOVWF  x9A
2082:  MOVLB  0
2084:  CALL   024E
2088:  BTFSC  16.7
208A:  BSF    FF2.7
208C:  MOVLB  2
208E:  BRA    2070
2090:  CLRF   16
2092:  BTFSC  FF2.7
2094:  BSF    16.7
2096:  BCF    FF2.7
2098:  MOVFF  25D,29A
209C:  MOVLB  0
209E:  CALL   024E
20A2:  BTFSC  16.7
20A4:  BSF    FF2.7
....................                                rb2=0; 
20A6:  BCF    F81.2
....................                                delay_ms(quantum); 
20A8:  MOVFF  25E,28A
20AC:  MOVLB  2
20AE:  INCF   x8A,F
20B0:  DECF   x8A,F
20B2:  BTFSC  FD8.2
20B4:  BRA    20D0
20B6:  CLRF   16
20B8:  BTFSC  FF2.7
20BA:  BSF    16.7
20BC:  BCF    FF2.7
20BE:  MOVLW  FF
20C0:  MOVWF  x9A
20C2:  MOVLB  0
20C4:  CALL   024E
20C8:  BTFSC  16.7
20CA:  BSF    FF2.7
20CC:  MOVLB  2
20CE:  BRA    20B0
20D0:  CLRF   16
20D2:  BTFSC  FF2.7
20D4:  BSF    16.7
20D6:  BCF    FF2.7
20D8:  MOVFF  25D,29A
20DC:  MOVLB  0
20DE:  CALL   024E
20E2:  BTFSC  16.7
20E4:  BSF    FF2.7
20E6:  MOVLB  2
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
20E8:  MOVF   19,W
20EA:  SUBLW  0A
20EC:  BNZ   20FC
20EE:  MOVF   1C,W
20F0:  SUBLW  09
20F2:  BNC   20FC
20F4:  MOVLB  0
20F6:  CALL   1140
20FA:  MOVLB  2
....................                  if(contador2==16 ) do_proceso2(); 
20FC:  MOVF   1A,W
20FE:  SUBLW  10
2100:  BNZ   210A
2102:  MOVLB  0
2104:  CALL   1198
2108:  MOVLB  2
....................           
....................                  if(tecla_pulsada=='3'){ 
210A:  MOVF   17,W
210C:  SUBLW  33
210E:  BNZ   2116
....................                       break; 
2110:  MOVLB  0
2112:  BRA    211E
2114:  MOVLB  2
....................                   } 
....................                
....................                   contador1++; 
2116:  INCF   19,F
....................                    
....................               } 
2118:  INCF   1A,F
211A:  MOVLB  0
211C:  BRA    1F64
....................              } 
....................                        else{ 
211E:  BRA    22E4
....................                         for (contador1=1;contador1<=10;contador1++){ 
2120:  MOVLW  01
2122:  MOVWF  19
2124:  MOVF   19,W
2126:  SUBLW  0A
2128:  BTFSS  FD8.0
212A:  BRA    22E4
....................                     copia1=contador1; 
212C:  MOVFF  19,1C
2130:  CLRF   16
2132:  BTFSC  FF2.7
2134:  BSF    16.7
2136:  BCF    FF2.7
....................                     if(quantum*contador2<=time2){ 
2138:  MOVFF  25E,299
213C:  MOVFF  25D,298
2140:  MOVLB  2
2142:  CLRF   x9B
2144:  MOVFF  1A,29A
2148:  MOVLB  0
214A:  CALL   0276
214E:  BTFSC  16.7
2150:  BSF    FF2.7
2152:  MOVFF  02,28B
2156:  MOVFF  01,28A
215A:  MOVLB  2
215C:  MOVF   02,W
215E:  SUBWF  x5A,W
2160:  BNC   21F0
2162:  BNZ   216A
2164:  MOVF   x8A,W
2166:  SUBWF  x59,W
2168:  BNC   21F0
....................                       rb2=1; 
216A:  BSF    F81.2
....................                       rb1=1; 
216C:  BSF    F81.1
....................                       delay_ms(quantum); 
216E:  MOVFF  25E,28A
2172:  INCF   x8A,F
2174:  DECF   x8A,F
2176:  BTFSC  FD8.2
2178:  BRA    2194
217A:  CLRF   16
217C:  BTFSC  FF2.7
217E:  BSF    16.7
2180:  BCF    FF2.7
2182:  MOVLW  FF
2184:  MOVWF  x9A
2186:  MOVLB  0
2188:  CALL   024E
218C:  BTFSC  16.7
218E:  BSF    FF2.7
2190:  MOVLB  2
2192:  BRA    2174
2194:  CLRF   16
2196:  BTFSC  FF2.7
2198:  BSF    16.7
219A:  BCF    FF2.7
219C:  MOVFF  25D,29A
21A0:  MOVLB  0
21A2:  CALL   024E
21A6:  BTFSC  16.7
21A8:  BSF    FF2.7
....................                       rb1=0; 
21AA:  BCF    F81.1
....................                       rb2=0; 
21AC:  BCF    F81.2
....................                       delay_ms(quantum); 
21AE:  MOVFF  25E,28A
21B2:  MOVLB  2
21B4:  INCF   x8A,F
21B6:  DECF   x8A,F
21B8:  BTFSC  FD8.2
21BA:  BRA    21D6
21BC:  CLRF   16
21BE:  BTFSC  FF2.7
21C0:  BSF    16.7
21C2:  BCF    FF2.7
21C4:  MOVLW  FF
21C6:  MOVWF  x9A
21C8:  MOVLB  0
21CA:  CALL   024E
21CE:  BTFSC  16.7
21D0:  BSF    FF2.7
21D2:  MOVLB  2
21D4:  BRA    21B6
21D6:  CLRF   16
21D8:  BTFSC  FF2.7
21DA:  BSF    16.7
21DC:  BCF    FF2.7
21DE:  MOVFF  25D,29A
21E2:  MOVLB  0
21E4:  CALL   024E
21E8:  BTFSC  16.7
21EA:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
21EC:  BRA    22A6
21EE:  MOVLB  2
21F0:  CLRF   16
21F2:  BTFSC  FF2.7
21F4:  BSF    16.7
21F6:  BCF    FF2.7
....................  
....................                           if(quantum*contador1<time1){ 
21F8:  MOVFF  25E,299
21FC:  MOVFF  25D,298
2200:  CLRF   x9B
2202:  MOVFF  19,29A
2206:  MOVLB  0
2208:  CALL   0276
220C:  BTFSC  16.7
220E:  BSF    FF2.7
2210:  MOVFF  02,28B
2214:  MOVFF  01,28A
2218:  MOVLB  2
221A:  MOVF   02,W
221C:  SUBWF  x58,W
221E:  BNC   22A8
2220:  BNZ   2228
2222:  MOVF   x57,W
2224:  SUBWF  x8A,W
2226:  BC    22A8
....................                                rb1=1; 
2228:  BSF    F81.1
....................                                delay_ms(quantum); 
222A:  MOVFF  25E,28A
222E:  INCF   x8A,F
2230:  DECF   x8A,F
2232:  BTFSC  FD8.2
2234:  BRA    2250
2236:  CLRF   16
2238:  BTFSC  FF2.7
223A:  BSF    16.7
223C:  BCF    FF2.7
223E:  MOVLW  FF
2240:  MOVWF  x9A
2242:  MOVLB  0
2244:  CALL   024E
2248:  BTFSC  16.7
224A:  BSF    FF2.7
224C:  MOVLB  2
224E:  BRA    2230
2250:  CLRF   16
2252:  BTFSC  FF2.7
2254:  BSF    16.7
2256:  BCF    FF2.7
2258:  MOVFF  25D,29A
225C:  MOVLB  0
225E:  CALL   024E
2262:  BTFSC  16.7
2264:  BSF    FF2.7
....................                                rb1=0; 
2266:  BCF    F81.1
....................                                delay_ms(quantum); 
2268:  MOVFF  25E,28A
226C:  MOVLB  2
226E:  INCF   x8A,F
2270:  DECF   x8A,F
2272:  BTFSC  FD8.2
2274:  BRA    2290
2276:  CLRF   16
2278:  BTFSC  FF2.7
227A:  BSF    16.7
227C:  BCF    FF2.7
227E:  MOVLW  FF
2280:  MOVWF  x9A
2282:  MOVLB  0
2284:  CALL   024E
2288:  BTFSC  16.7
228A:  BSF    FF2.7
228C:  MOVLB  2
228E:  BRA    2270
2290:  CLRF   16
2292:  BTFSC  FF2.7
2294:  BSF    16.7
2296:  BCF    FF2.7
2298:  MOVFF  25D,29A
229C:  MOVLB  0
229E:  CALL   024E
22A2:  BTFSC  16.7
22A4:  BSF    FF2.7
22A6:  MOVLB  2
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
22A8:  MOVF   19,W
22AA:  SUBLW  0A
22AC:  BNZ   22BC
22AE:  MOVF   1C,W
22B0:  SUBLW  09
22B2:  BNC   22BC
22B4:  MOVLB  0
22B6:  CALL   1140
22BA:  MOVLB  2
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
22BC:  MOVF   1A,W
22BE:  SUBLW  10
22C0:  BNZ   22D0
22C2:  MOVF   1D,W
22C4:  SUBLW  0F
22C6:  BNC   22D0
22C8:  MOVLB  0
22CA:  CALL   1198
22CE:  MOVLB  2
....................           
....................                  if(tecla_pulsada=='3'){ 
22D0:  MOVF   17,W
22D2:  SUBLW  33
22D4:  BNZ   22DC
....................                       break; 
22D6:  MOVLB  0
22D8:  BRA    22E4
22DA:  MOVLB  2
....................                   } 
....................                
....................                   contador2++; 
22DC:  INCF   1A,F
....................                    
....................               } 
22DE:  INCF   19,F
22E0:  MOVLB  0
22E2:  BRA    2124
....................                         
....................                         
....................           } 
....................               if(tecla_pulsada=='3'){ 
22E4:  MOVF   17,W
22E6:  SUBLW  33
22E8:  BTFSS  FD8.2
22EA:  BRA    2638
....................                       for (contador3=1;contador3<=20;contador3++){ 
22EC:  MOVLW  01
22EE:  MOVWF  1B
22F0:  MOVF   1B,W
22F2:  SUBLW  14
22F4:  BTFSS  FD8.0
22F6:  BRA    2638
....................                            copia3=contador3; 
22F8:  MOVFF  1B,1E
22FC:  CLRF   16
22FE:  BTFSC  FF2.7
2300:  BSF    16.7
2302:  BCF    FF2.7
....................                            if(quantum*contador1<time1){ 
2304:  MOVFF  25E,299
2308:  MOVFF  25D,298
230C:  MOVLB  2
230E:  CLRF   x9B
2310:  MOVFF  19,29A
2314:  MOVLB  0
2316:  CALL   0276
231A:  BTFSC  16.7
231C:  BSF    FF2.7
231E:  MOVFF  02,28B
2322:  MOVFF  01,28A
2326:  MOVLB  2
2328:  MOVF   02,W
232A:  SUBWF  x58,W
232C:  BTFSS  FD8.0
232E:  BRA    2482
2330:  BNZ   233A
2332:  MOVF   x57,W
2334:  SUBWF  x8A,W
2336:  BTFSC  FD8.0
2338:  BRA    2482
233A:  CLRF   16
233C:  BTFSC  FF2.7
233E:  BSF    16.7
2340:  BCF    FF2.7
....................                            if(quantum*contador2<=time2){ 
2342:  MOVFF  25E,299
2346:  MOVFF  25D,298
234A:  CLRF   x9B
234C:  MOVFF  1A,29A
2350:  MOVLB  0
2352:  CALL   0276
2356:  BTFSC  16.7
2358:  BSF    FF2.7
235A:  MOVFF  02,28B
235E:  MOVFF  01,28A
2362:  MOVLB  2
2364:  MOVF   02,W
2366:  SUBWF  x5A,W
2368:  BNC   23FC
236A:  BNZ   2372
236C:  MOVF   x8A,W
236E:  SUBWF  x59,W
2370:  BNC   23FC
....................                              rb2=1; 
2372:  BSF    F81.2
....................                              rb3=1; 
2374:  BSF    F81.3
....................                              rb1=1; 
2376:  BSF    F81.1
....................                              delay_ms(quantum); 
2378:  MOVFF  25E,28A
237C:  INCF   x8A,F
237E:  DECF   x8A,F
2380:  BTFSC  FD8.2
2382:  BRA    239E
2384:  CLRF   16
2386:  BTFSC  FF2.7
2388:  BSF    16.7
238A:  BCF    FF2.7
238C:  MOVLW  FF
238E:  MOVWF  x9A
2390:  MOVLB  0
2392:  CALL   024E
2396:  BTFSC  16.7
2398:  BSF    FF2.7
239A:  MOVLB  2
239C:  BRA    237E
239E:  CLRF   16
23A0:  BTFSC  FF2.7
23A2:  BSF    16.7
23A4:  BCF    FF2.7
23A6:  MOVFF  25D,29A
23AA:  MOVLB  0
23AC:  CALL   024E
23B0:  BTFSC  16.7
23B2:  BSF    FF2.7
....................                              rb2=0; 
23B4:  BCF    F81.2
....................                              rb3=0; 
23B6:  BCF    F81.3
....................                              rb1=0; 
23B8:  BCF    F81.1
....................                              delay_ms(quantum); 
23BA:  MOVFF  25E,28A
23BE:  MOVLB  2
23C0:  INCF   x8A,F
23C2:  DECF   x8A,F
23C4:  BTFSC  FD8.2
23C6:  BRA    23E2
23C8:  CLRF   16
23CA:  BTFSC  FF2.7
23CC:  BSF    16.7
23CE:  BCF    FF2.7
23D0:  MOVLW  FF
23D2:  MOVWF  x9A
23D4:  MOVLB  0
23D6:  CALL   024E
23DA:  BTFSC  16.7
23DC:  BSF    FF2.7
23DE:  MOVLB  2
23E0:  BRA    23C2
23E2:  CLRF   16
23E4:  BTFSC  FF2.7
23E6:  BSF    16.7
23E8:  BCF    FF2.7
23EA:  MOVFF  25D,29A
23EE:  MOVLB  0
23F0:  CALL   024E
23F4:  BTFSC  16.7
23F6:  BSF    FF2.7
....................                           } 
....................                           else{    
23F8:  BRA    247E
23FA:  MOVLB  2
....................                              rb3=1; 
23FC:  BSF    F81.3
....................                              rb1=1; 
23FE:  BSF    F81.1
....................                              delay_ms(quantum); 
2400:  MOVFF  25E,28A
2404:  INCF   x8A,F
2406:  DECF   x8A,F
2408:  BTFSC  FD8.2
240A:  BRA    2426
240C:  CLRF   16
240E:  BTFSC  FF2.7
2410:  BSF    16.7
2412:  BCF    FF2.7
2414:  MOVLW  FF
2416:  MOVWF  x9A
2418:  MOVLB  0
241A:  CALL   024E
241E:  BTFSC  16.7
2420:  BSF    FF2.7
2422:  MOVLB  2
2424:  BRA    2406
2426:  CLRF   16
2428:  BTFSC  FF2.7
242A:  BSF    16.7
242C:  BCF    FF2.7
242E:  MOVFF  25D,29A
2432:  MOVLB  0
2434:  CALL   024E
2438:  BTFSC  16.7
243A:  BSF    FF2.7
....................                              rb3=0; 
243C:  BCF    F81.3
....................                              rb1=0; 
243E:  BCF    F81.1
....................                              delay_ms(quantum); 
2440:  MOVFF  25E,28A
2444:  MOVLB  2
2446:  INCF   x8A,F
2448:  DECF   x8A,F
244A:  BTFSC  FD8.2
244C:  BRA    2468
244E:  CLRF   16
2450:  BTFSC  FF2.7
2452:  BSF    16.7
2454:  BCF    FF2.7
2456:  MOVLW  FF
2458:  MOVWF  x9A
245A:  MOVLB  0
245C:  CALL   024E
2460:  BTFSC  16.7
2462:  BSF    FF2.7
2464:  MOVLB  2
2466:  BRA    2448
2468:  CLRF   16
246A:  BTFSC  FF2.7
246C:  BSF    16.7
246E:  BCF    FF2.7
2470:  MOVFF  25D,29A
2474:  MOVLB  0
2476:  CALL   024E
247A:  BTFSC  16.7
247C:  BSF    FF2.7
....................                           } 
....................                                                }                                              
....................                    else  { 
247E:  BRA    25F6
2480:  MOVLB  2
2482:  CLRF   16
2484:  BTFSC  FF2.7
2486:  BSF    16.7
2488:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<time2){ 
248A:  MOVFF  25E,299
248E:  MOVFF  25D,298
2492:  CLRF   x9B
2494:  MOVFF  1A,29A
2498:  MOVLB  0
249A:  CALL   0276
249E:  BTFSC  16.7
24A0:  BSF    FF2.7
24A2:  MOVFF  02,28B
24A6:  MOVFF  01,28A
24AA:  MOVLB  2
24AC:  MOVF   02,W
24AE:  SUBWF  x5A,W
24B0:  BNC   2540
24B2:  BNZ   24BA
24B4:  MOVF   x59,W
24B6:  SUBWF  x8A,W
24B8:  BC    2540
....................                                rb3=1; 
24BA:  BSF    F81.3
....................                                rb2=1; 
24BC:  BSF    F81.2
....................                                delay_ms(quantum); 
24BE:  MOVFF  25E,28A
24C2:  INCF   x8A,F
24C4:  DECF   x8A,F
24C6:  BTFSC  FD8.2
24C8:  BRA    24E4
24CA:  CLRF   16
24CC:  BTFSC  FF2.7
24CE:  BSF    16.7
24D0:  BCF    FF2.7
24D2:  MOVLW  FF
24D4:  MOVWF  x9A
24D6:  MOVLB  0
24D8:  CALL   024E
24DC:  BTFSC  16.7
24DE:  BSF    FF2.7
24E0:  MOVLB  2
24E2:  BRA    24C4
24E4:  CLRF   16
24E6:  BTFSC  FF2.7
24E8:  BSF    16.7
24EA:  BCF    FF2.7
24EC:  MOVFF  25D,29A
24F0:  MOVLB  0
24F2:  CALL   024E
24F6:  BTFSC  16.7
24F8:  BSF    FF2.7
....................                                rb3=0; 
24FA:  BCF    F81.3
....................                                rb2=0; 
24FC:  BCF    F81.2
....................                                delay_ms(quantum); 
24FE:  MOVFF  25E,28A
2502:  MOVLB  2
2504:  INCF   x8A,F
2506:  DECF   x8A,F
2508:  BTFSC  FD8.2
250A:  BRA    2526
250C:  CLRF   16
250E:  BTFSC  FF2.7
2510:  BSF    16.7
2512:  BCF    FF2.7
2514:  MOVLW  FF
2516:  MOVWF  x9A
2518:  MOVLB  0
251A:  CALL   024E
251E:  BTFSC  16.7
2520:  BSF    FF2.7
2522:  MOVLB  2
2524:  BRA    2506
2526:  CLRF   16
2528:  BTFSC  FF2.7
252A:  BSF    16.7
252C:  BCF    FF2.7
252E:  MOVFF  25D,29A
2532:  MOVLB  0
2534:  CALL   024E
2538:  BTFSC  16.7
253A:  BSF    FF2.7
....................                                                     }  
....................                      else{ 
253C:  BRA    25F6
253E:  MOVLB  2
2540:  CLRF   16
2542:  BTFSC  FF2.7
2544:  BSF    16.7
2546:  BCF    FF2.7
....................                          if(quantum*contador3<time3){ 
2548:  MOVFF  25E,299
254C:  MOVFF  25D,298
2550:  CLRF   x9B
2552:  MOVFF  1B,29A
2556:  MOVLB  0
2558:  CALL   0276
255C:  BTFSC  16.7
255E:  BSF    FF2.7
2560:  MOVFF  02,28B
2564:  MOVFF  01,28A
2568:  MOVLB  2
256A:  MOVF   02,W
256C:  SUBWF  x5C,W
256E:  BNC   25F8
2570:  BNZ   2578
2572:  MOVF   x5B,W
2574:  SUBWF  x8A,W
2576:  BC    25F8
....................                                rb3=1; 
2578:  BSF    F81.3
....................                                delay_ms(quantum); 
257A:  MOVFF  25E,28A
257E:  INCF   x8A,F
2580:  DECF   x8A,F
2582:  BTFSC  FD8.2
2584:  BRA    25A0
2586:  CLRF   16
2588:  BTFSC  FF2.7
258A:  BSF    16.7
258C:  BCF    FF2.7
258E:  MOVLW  FF
2590:  MOVWF  x9A
2592:  MOVLB  0
2594:  CALL   024E
2598:  BTFSC  16.7
259A:  BSF    FF2.7
259C:  MOVLB  2
259E:  BRA    2580
25A0:  CLRF   16
25A2:  BTFSC  FF2.7
25A4:  BSF    16.7
25A6:  BCF    FF2.7
25A8:  MOVFF  25D,29A
25AC:  MOVLB  0
25AE:  CALL   024E
25B2:  BTFSC  16.7
25B4:  BSF    FF2.7
....................                                rb3=0; 
25B6:  BCF    F81.3
....................                                delay_ms(quantum); 
25B8:  MOVFF  25E,28A
25BC:  MOVLB  2
25BE:  INCF   x8A,F
25C0:  DECF   x8A,F
25C2:  BTFSC  FD8.2
25C4:  BRA    25E0
25C6:  CLRF   16
25C8:  BTFSC  FF2.7
25CA:  BSF    16.7
25CC:  BCF    FF2.7
25CE:  MOVLW  FF
25D0:  MOVWF  x9A
25D2:  MOVLB  0
25D4:  CALL   024E
25D8:  BTFSC  16.7
25DA:  BSF    FF2.7
25DC:  MOVLB  2
25DE:  BRA    25C0
25E0:  CLRF   16
25E2:  BTFSC  FF2.7
25E4:  BSF    16.7
25E6:  BCF    FF2.7
25E8:  MOVFF  25D,29A
25EC:  MOVLB  0
25EE:  CALL   024E
25F2:  BTFSC  16.7
25F4:  BSF    FF2.7
25F6:  MOVLB  2
....................                                                      }  
....................                            } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1();                 
25F8:  MOVF   19,W
25FA:  SUBLW  0A
25FC:  BNZ   260C
25FE:  MOVF   1C,W
2600:  SUBLW  09
2602:  BNC   260C
2604:  MOVLB  0
2606:  CALL   1140
260A:  MOVLB  2
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
260C:  MOVF   1A,W
260E:  SUBLW  10
2610:  BNZ   2620
2612:  MOVF   1D,W
2614:  SUBLW  0F
2616:  BNC   2620
2618:  MOVLB  0
261A:  CALL   1198
261E:  MOVLB  2
....................                  if(contador3==20 )do_proceso3(); 
2620:  MOVF   1B,W
2622:  SUBLW  14
2624:  BNZ   262E
2626:  MOVLB  0
2628:  CALL   11F0
262C:  MOVLB  2
....................  
....................                   contador1++; 
262E:  INCF   19,F
....................                   contador2++; 
2630:  INCF   1A,F
....................                  
....................               }                                   
2632:  INCF   1B,F
2634:  MOVLB  0
2636:  BRA    22F0
....................          }       
....................      }   
....................      //       
....................          else{ 
2638:  BRA    2A86
....................           if(tecla_pulsada=='3'){ 
263A:  MOVF   17,W
263C:  SUBLW  33
263E:  BTFSS  FD8.2
2640:  BRA    2A86
....................                for (contador3=1;contador3<=20;contador3++){ 
2642:  MOVLW  01
2644:  MOVWF  1B
2646:  MOVF   1B,W
2648:  SUBLW  14
264A:  BTFSS  FD8.0
264C:  BRA    2800
....................                     copia3=contador3; 
264E:  MOVFF  1B,1E
2652:  CLRF   16
2654:  BTFSC  FF2.7
2656:  BSF    16.7
2658:  BCF    FF2.7
....................                     if(quantum*contador2<time2){ 
265A:  MOVFF  25E,299
265E:  MOVFF  25D,298
2662:  MOVLB  2
2664:  CLRF   x9B
2666:  MOVFF  1A,29A
266A:  MOVLB  0
266C:  CALL   0276
2670:  BTFSC  16.7
2672:  BSF    FF2.7
2674:  MOVFF  02,28B
2678:  MOVFF  01,28A
267C:  MOVLB  2
267E:  MOVF   02,W
2680:  SUBWF  x5A,W
2682:  BNC   2712
2684:  BNZ   268C
2686:  MOVF   x59,W
2688:  SUBWF  x8A,W
268A:  BC    2712
....................                       rb3=1; 
268C:  BSF    F81.3
....................                       rb2=1; 
268E:  BSF    F81.2
....................                       delay_ms(quantum); 
2690:  MOVFF  25E,28A
2694:  INCF   x8A,F
2696:  DECF   x8A,F
2698:  BTFSC  FD8.2
269A:  BRA    26B6
269C:  CLRF   16
269E:  BTFSC  FF2.7
26A0:  BSF    16.7
26A2:  BCF    FF2.7
26A4:  MOVLW  FF
26A6:  MOVWF  x9A
26A8:  MOVLB  0
26AA:  CALL   024E
26AE:  BTFSC  16.7
26B0:  BSF    FF2.7
26B2:  MOVLB  2
26B4:  BRA    2696
26B6:  CLRF   16
26B8:  BTFSC  FF2.7
26BA:  BSF    16.7
26BC:  BCF    FF2.7
26BE:  MOVFF  25D,29A
26C2:  MOVLB  0
26C4:  CALL   024E
26C8:  BTFSC  16.7
26CA:  BSF    FF2.7
....................                       rb3=0; 
26CC:  BCF    F81.3
....................                       rb2=0; 
26CE:  BCF    F81.2
....................                       delay_ms(quantum); 
26D0:  MOVFF  25E,28A
26D4:  MOVLB  2
26D6:  INCF   x8A,F
26D8:  DECF   x8A,F
26DA:  BTFSC  FD8.2
26DC:  BRA    26F8
26DE:  CLRF   16
26E0:  BTFSC  FF2.7
26E2:  BSF    16.7
26E4:  BCF    FF2.7
26E6:  MOVLW  FF
26E8:  MOVWF  x9A
26EA:  MOVLB  0
26EC:  CALL   024E
26F0:  BTFSC  16.7
26F2:  BSF    FF2.7
26F4:  MOVLB  2
26F6:  BRA    26D8
26F8:  CLRF   16
26FA:  BTFSC  FF2.7
26FC:  BSF    16.7
26FE:  BCF    FF2.7
2700:  MOVFF  25D,29A
2704:  MOVLB  0
2706:  CALL   024E
270A:  BTFSC  16.7
270C:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
270E:  BRA    27C8
2710:  MOVLB  2
2712:  CLRF   16
2714:  BTFSC  FF2.7
2716:  BSF    16.7
2718:  BCF    FF2.7
....................                     
....................                           if(quantum*contador3<=time3){ 
271A:  MOVFF  25E,299
271E:  MOVFF  25D,298
2722:  CLRF   x9B
2724:  MOVFF  1B,29A
2728:  MOVLB  0
272A:  CALL   0276
272E:  BTFSC  16.7
2730:  BSF    FF2.7
2732:  MOVFF  02,28B
2736:  MOVFF  01,28A
273A:  MOVLB  2
273C:  MOVF   02,W
273E:  SUBWF  x5C,W
2740:  BNC   27CA
2742:  BNZ   274A
2744:  MOVF   x8A,W
2746:  SUBWF  x5B,W
2748:  BNC   27CA
....................                                rb3=1; 
274A:  BSF    F81.3
....................                                delay_ms(quantum); 
274C:  MOVFF  25E,28A
2750:  INCF   x8A,F
2752:  DECF   x8A,F
2754:  BTFSC  FD8.2
2756:  BRA    2772
2758:  CLRF   16
275A:  BTFSC  FF2.7
275C:  BSF    16.7
275E:  BCF    FF2.7
2760:  MOVLW  FF
2762:  MOVWF  x9A
2764:  MOVLB  0
2766:  CALL   024E
276A:  BTFSC  16.7
276C:  BSF    FF2.7
276E:  MOVLB  2
2770:  BRA    2752
2772:  CLRF   16
2774:  BTFSC  FF2.7
2776:  BSF    16.7
2778:  BCF    FF2.7
277A:  MOVFF  25D,29A
277E:  MOVLB  0
2780:  CALL   024E
2784:  BTFSC  16.7
2786:  BSF    FF2.7
....................                                rb3=0; 
2788:  BCF    F81.3
....................                                delay_ms(quantum); 
278A:  MOVFF  25E,28A
278E:  MOVLB  2
2790:  INCF   x8A,F
2792:  DECF   x8A,F
2794:  BTFSC  FD8.2
2796:  BRA    27B2
2798:  CLRF   16
279A:  BTFSC  FF2.7
279C:  BSF    16.7
279E:  BCF    FF2.7
27A0:  MOVLW  FF
27A2:  MOVWF  x9A
27A4:  MOVLB  0
27A6:  CALL   024E
27AA:  BTFSC  16.7
27AC:  BSF    FF2.7
27AE:  MOVLB  2
27B0:  BRA    2792
27B2:  CLRF   16
27B4:  BTFSC  FF2.7
27B6:  BSF    16.7
27B8:  BCF    FF2.7
27BA:  MOVFF  25D,29A
27BE:  MOVLB  0
27C0:  CALL   024E
27C4:  BTFSC  16.7
27C6:  BSF    FF2.7
27C8:  MOVLB  2
....................                                                      }  
....................                          } 
....................  
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
27CA:  MOVF   1A,W
27CC:  SUBLW  10
27CE:  BNZ   27DE
27D0:  MOVF   1D,W
27D2:  SUBLW  0F
27D4:  BNC   27DE
27D6:  MOVLB  0
27D8:  CALL   1198
27DC:  MOVLB  2
....................                  if(contador3==20 )do_proceso3(); 
27DE:  MOVF   1B,W
27E0:  SUBLW  14
27E2:  BNZ   27EC
27E4:  MOVLB  0
27E6:  CALL   11F0
27EA:  MOVLB  2
....................                   
....................                  if(tecla_pulsada=='1'){ 
27EC:  MOVF   17,W
27EE:  SUBLW  31
27F0:  BNZ   27F8
....................                       break; 
27F2:  MOVLB  0
27F4:  BRA    2800
27F6:  MOVLB  2
....................                   } 
....................                   contador2++; 
27F8:  INCF   1A,F
....................  
....................                  } 
27FA:  INCF   1B,F
27FC:  MOVLB  0
27FE:  BRA    2646
....................                  if(tecla_pulsada=='1'){ 
2800:  MOVF   17,W
2802:  SUBLW  31
2804:  BTFSS  FD8.2
2806:  BRA    2A86
....................                           
....................                          for (contador3=copia3;contador3<=20;contador3++){ 
2808:  MOVFF  1E,1B
280C:  MOVF   1B,W
280E:  SUBLW  14
2810:  BTFSS  FD8.0
2812:  BRA    2A86
....................                               copia3=contador3; 
2814:  MOVFF  1B,1E
2818:  CLRF   16
281A:  BTFSC  FF2.7
281C:  BSF    16.7
281E:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
2820:  MOVFF  25E,299
2824:  MOVFF  25D,298
2828:  MOVLB  2
282A:  CLRF   x9B
282C:  MOVFF  19,29A
2830:  MOVLB  0
2832:  CALL   0276
2836:  BTFSC  16.7
2838:  BSF    FF2.7
283A:  MOVFF  02,28B
283E:  MOVFF  01,28A
2842:  MOVLB  2
2844:  MOVF   02,W
2846:  SUBWF  x58,W
2848:  BNC   28DC
284A:  BNZ   2852
284C:  MOVF   x8A,W
284E:  SUBWF  x57,W
2850:  BNC   28DC
....................                            
....................                              rb2=1; 
2852:  BSF    F81.2
....................                              rb3=1; 
2854:  BSF    F81.3
....................                              rb1=1; 
2856:  BSF    F81.1
....................                              delay_ms(quantum); 
2858:  MOVFF  25E,28A
285C:  INCF   x8A,F
285E:  DECF   x8A,F
2860:  BTFSC  FD8.2
2862:  BRA    287E
2864:  CLRF   16
2866:  BTFSC  FF2.7
2868:  BSF    16.7
286A:  BCF    FF2.7
286C:  MOVLW  FF
286E:  MOVWF  x9A
2870:  MOVLB  0
2872:  CALL   024E
2876:  BTFSC  16.7
2878:  BSF    FF2.7
287A:  MOVLB  2
287C:  BRA    285E
287E:  CLRF   16
2880:  BTFSC  FF2.7
2882:  BSF    16.7
2884:  BCF    FF2.7
2886:  MOVFF  25D,29A
288A:  MOVLB  0
288C:  CALL   024E
2890:  BTFSC  16.7
2892:  BSF    FF2.7
....................                              rb2=0; 
2894:  BCF    F81.2
....................                              rb3=0; 
2896:  BCF    F81.3
....................                              rb1=0; 
2898:  BCF    F81.1
....................                              delay_ms(quantum); 
289A:  MOVFF  25E,28A
289E:  MOVLB  2
28A0:  INCF   x8A,F
28A2:  DECF   x8A,F
28A4:  BTFSC  FD8.2
28A6:  BRA    28C2
28A8:  CLRF   16
28AA:  BTFSC  FF2.7
28AC:  BSF    16.7
28AE:  BCF    FF2.7
28B0:  MOVLW  FF
28B2:  MOVWF  x9A
28B4:  MOVLB  0
28B6:  CALL   024E
28BA:  BTFSC  16.7
28BC:  BSF    FF2.7
28BE:  MOVLB  2
28C0:  BRA    28A2
28C2:  CLRF   16
28C4:  BTFSC  FF2.7
28C6:  BSF    16.7
28C8:  BCF    FF2.7
28CA:  MOVFF  25D,29A
28CE:  MOVLB  0
28D0:  CALL   024E
28D4:  BTFSC  16.7
28D6:  BSF    FF2.7
....................                           
....................                                                } 
....................                                                 
....................                    else  { 
28D8:  BRA    2A50
28DA:  MOVLB  2
28DC:  CLRF   16
28DE:  BTFSC  FF2.7
28E0:  BSF    16.7
28E2:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<=time2){ 
28E4:  MOVFF  25E,299
28E8:  MOVFF  25D,298
28EC:  CLRF   x9B
28EE:  MOVFF  1A,29A
28F2:  MOVLB  0
28F4:  CALL   0276
28F8:  BTFSC  16.7
28FA:  BSF    FF2.7
28FC:  MOVFF  02,28B
2900:  MOVFF  01,28A
2904:  MOVLB  2
2906:  MOVF   02,W
2908:  SUBWF  x5A,W
290A:  BNC   299A
290C:  BNZ   2914
290E:  MOVF   x8A,W
2910:  SUBWF  x59,W
2912:  BNC   299A
....................                                rb2=1; 
2914:  BSF    F81.2
....................                                rb3=1; 
2916:  BSF    F81.3
....................                                delay_ms(quantum); 
2918:  MOVFF  25E,28A
291C:  INCF   x8A,F
291E:  DECF   x8A,F
2920:  BTFSC  FD8.2
2922:  BRA    293E
2924:  CLRF   16
2926:  BTFSC  FF2.7
2928:  BSF    16.7
292A:  BCF    FF2.7
292C:  MOVLW  FF
292E:  MOVWF  x9A
2930:  MOVLB  0
2932:  CALL   024E
2936:  BTFSC  16.7
2938:  BSF    FF2.7
293A:  MOVLB  2
293C:  BRA    291E
293E:  CLRF   16
2940:  BTFSC  FF2.7
2942:  BSF    16.7
2944:  BCF    FF2.7
2946:  MOVFF  25D,29A
294A:  MOVLB  0
294C:  CALL   024E
2950:  BTFSC  16.7
2952:  BSF    FF2.7
....................                                rb2=0; 
2954:  BCF    F81.2
....................                                rb3=0; 
2956:  BCF    F81.3
....................                                delay_ms(quantum); 
2958:  MOVFF  25E,28A
295C:  MOVLB  2
295E:  INCF   x8A,F
2960:  DECF   x8A,F
2962:  BTFSC  FD8.2
2964:  BRA    2980
2966:  CLRF   16
2968:  BTFSC  FF2.7
296A:  BSF    16.7
296C:  BCF    FF2.7
296E:  MOVLW  FF
2970:  MOVWF  x9A
2972:  MOVLB  0
2974:  CALL   024E
2978:  BTFSC  16.7
297A:  BSF    FF2.7
297C:  MOVLB  2
297E:  BRA    2960
2980:  CLRF   16
2982:  BTFSC  FF2.7
2984:  BSF    16.7
2986:  BCF    FF2.7
2988:  MOVFF  25D,29A
298C:  MOVLB  0
298E:  CALL   024E
2992:  BTFSC  16.7
2994:  BSF    FF2.7
....................                                                      }  
....................                              else{ 
2996:  BRA    2A50
2998:  MOVLB  2
299A:  CLRF   16
299C:  BTFSC  FF2.7
299E:  BSF    16.7
29A0:  BCF    FF2.7
....................                                         if(quantum*contador3<=time3){ 
29A2:  MOVFF  25E,299
29A6:  MOVFF  25D,298
29AA:  CLRF   x9B
29AC:  MOVFF  1B,29A
29B0:  MOVLB  0
29B2:  CALL   0276
29B6:  BTFSC  16.7
29B8:  BSF    FF2.7
29BA:  MOVFF  02,28B
29BE:  MOVFF  01,28A
29C2:  MOVLB  2
29C4:  MOVF   02,W
29C6:  SUBWF  x5C,W
29C8:  BNC   2A52
29CA:  BNZ   29D2
29CC:  MOVF   x8A,W
29CE:  SUBWF  x5B,W
29D0:  BNC   2A52
....................                                rb3=1; 
29D2:  BSF    F81.3
....................                                
....................                                delay_ms(quantum); 
29D4:  MOVFF  25E,28A
29D8:  INCF   x8A,F
29DA:  DECF   x8A,F
29DC:  BTFSC  FD8.2
29DE:  BRA    29FA
29E0:  CLRF   16
29E2:  BTFSC  FF2.7
29E4:  BSF    16.7
29E6:  BCF    FF2.7
29E8:  MOVLW  FF
29EA:  MOVWF  x9A
29EC:  MOVLB  0
29EE:  CALL   024E
29F2:  BTFSC  16.7
29F4:  BSF    FF2.7
29F6:  MOVLB  2
29F8:  BRA    29DA
29FA:  CLRF   16
29FC:  BTFSC  FF2.7
29FE:  BSF    16.7
2A00:  BCF    FF2.7
2A02:  MOVFF  25D,29A
2A06:  MOVLB  0
2A08:  CALL   024E
2A0C:  BTFSC  16.7
2A0E:  BSF    FF2.7
....................                                rb3=0; 
2A10:  BCF    F81.3
....................                                
....................                                delay_ms(quantum); 
2A12:  MOVFF  25E,28A
2A16:  MOVLB  2
2A18:  INCF   x8A,F
2A1A:  DECF   x8A,F
2A1C:  BTFSC  FD8.2
2A1E:  BRA    2A3A
2A20:  CLRF   16
2A22:  BTFSC  FF2.7
2A24:  BSF    16.7
2A26:  BCF    FF2.7
2A28:  MOVLW  FF
2A2A:  MOVWF  x9A
2A2C:  MOVLB  0
2A2E:  CALL   024E
2A32:  BTFSC  16.7
2A34:  BSF    FF2.7
2A36:  MOVLB  2
2A38:  BRA    2A1A
2A3A:  CLRF   16
2A3C:  BTFSC  FF2.7
2A3E:  BSF    16.7
2A40:  BCF    FF2.7
2A42:  MOVFF  25D,29A
2A46:  MOVLB  0
2A48:  CALL   024E
2A4C:  BTFSC  16.7
2A4E:  BSF    FF2.7
2A50:  MOVLB  2
....................                                                      }                
....................                                                       
....................                                                      } 
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
2A52:  MOVF   19,W
2A54:  SUBLW  0A
2A56:  BNZ   2A60
2A58:  MOVLB  0
2A5A:  CALL   1140
2A5E:  MOVLB  2
....................                  if(contador3==20 )do_proceso3(); 
2A60:  MOVF   1B,W
2A62:  SUBLW  14
2A64:  BNZ   2A6E
2A66:  MOVLB  0
2A68:  CALL   11F0
2A6C:  MOVLB  2
....................                  if(contador2==16 )do_proceso2(); 
2A6E:  MOVF   1A,W
2A70:  SUBLW  10
2A72:  BNZ   2A7C
2A74:  MOVLB  0
2A76:  CALL   1198
2A7A:  MOVLB  2
....................                   contador1++; 
2A7C:  INCF   19,F
....................                   contador2++; 
2A7E:  INCF   1A,F
....................  
....................                  } 
2A80:  INCF   1B,F
2A82:  MOVLB  0
2A84:  BRA    280C
....................                           
....................                          
....................                   
....................                                        } 
....................               } 
....................        }    
....................    } 
2A86:  GOTO   4418 (RETURN)
....................            
.................... //////////////////////////////////////// 
.................... void do_proceso33(){ 
.................... for (contador3=1;contador2<=20;contador3++){ 
2A8A:  MOVLW  01
2A8C:  MOVWF  1B
2A8E:  MOVF   1A,W
2A90:  SUBLW  14
2A92:  BNC   2B6E
....................              copia3=contador3; 
2A94:  MOVFF  1B,1E
2A98:  CLRF   16
2A9A:  BTFSC  FF2.7
2A9C:  BSF    16.7
2A9E:  BCF    FF2.7
....................              if(quantum*contador3<time3){ 
2AA0:  MOVFF  25E,299
2AA4:  MOVFF  25D,298
2AA8:  MOVLB  2
2AAA:  CLRF   x9B
2AAC:  MOVFF  1B,29A
2AB0:  MOVLB  0
2AB2:  CALL   0276
2AB6:  BTFSC  16.7
2AB8:  BSF    FF2.7
2ABA:  MOVFF  02,28B
2ABE:  MOVFF  01,28A
2AC2:  MOVLB  2
2AC4:  MOVF   02,W
2AC6:  SUBWF  x5C,W
2AC8:  BNC   2B54
2ACA:  BNZ   2AD2
2ACC:  MOVF   x5B,W
2ACE:  SUBWF  x8A,W
2AD0:  BC    2B54
....................                 rb3=1; 
2AD2:  BSF    F81.3
....................                 delay_ms(quantum); 
2AD4:  MOVFF  25E,28A
2AD8:  INCF   x8A,F
2ADA:  DECF   x8A,F
2ADC:  BTFSC  FD8.2
2ADE:  BRA    2AFA
2AE0:  CLRF   16
2AE2:  BTFSC  FF2.7
2AE4:  BSF    16.7
2AE6:  BCF    FF2.7
2AE8:  MOVLW  FF
2AEA:  MOVWF  x9A
2AEC:  MOVLB  0
2AEE:  CALL   024E
2AF2:  BTFSC  16.7
2AF4:  BSF    FF2.7
2AF6:  MOVLB  2
2AF8:  BRA    2ADA
2AFA:  CLRF   16
2AFC:  BTFSC  FF2.7
2AFE:  BSF    16.7
2B00:  BCF    FF2.7
2B02:  MOVFF  25D,29A
2B06:  MOVLB  0
2B08:  CALL   024E
2B0C:  BTFSC  16.7
2B0E:  BSF    FF2.7
....................                 rb3=0; 
2B10:  BCF    F81.3
....................                 delay_ms(quantum); 
2B12:  MOVFF  25E,28A
2B16:  MOVLB  2
2B18:  INCF   x8A,F
2B1A:  DECF   x8A,F
2B1C:  BTFSC  FD8.2
2B1E:  BRA    2B3A
2B20:  CLRF   16
2B22:  BTFSC  FF2.7
2B24:  BSF    16.7
2B26:  BCF    FF2.7
2B28:  MOVLW  FF
2B2A:  MOVWF  x9A
2B2C:  MOVLB  0
2B2E:  CALL   024E
2B32:  BTFSC  16.7
2B34:  BSF    FF2.7
2B36:  MOVLB  2
2B38:  BRA    2B1A
2B3A:  CLRF   16
2B3C:  BTFSC  FF2.7
2B3E:  BSF    16.7
2B40:  BCF    FF2.7
2B42:  MOVFF  25D,29A
2B46:  MOVLB  0
2B48:  CALL   024E
2B4C:  BTFSC  16.7
2B4E:  BSF    FF2.7
....................                                         } 
....................              else { 
2B50:  BRA    2B5A
2B52:  MOVLB  2
....................                     do_proceso3(); 
2B54:  MOVLB  0
2B56:  CALL   11F0
....................                    }   
....................              if(tecla_pulsada=='1'){ 
2B5A:  MOVF   17,W
2B5C:  SUBLW  31
2B5E:  BNZ   2B62
....................                    break; 
2B60:  BRA    2B6E
....................                   } 
....................              if(tecla_pulsada=='2'){ 
2B62:  MOVF   17,W
2B64:  SUBLW  32
2B66:  BNZ   2B6A
....................                    break; 
2B68:  BRA    2B6E
....................                   } 
....................          } 
2B6A:  INCF   1B,F
2B6C:  BRA    2A8E
....................   
....................      if(tecla_pulsada=='1'){ 
2B6E:  MOVF   17,W
2B70:  SUBLW  31
2B72:  BTFSS  FD8.2
2B74:  GOTO   3426
....................                if(copia3<=10){ 
2B78:  MOVF   1E,W
2B7A:  SUBLW  0A
2B7C:  BTFSS  FD8.0
2B7E:  BRA    2D40
....................                for (contador3=copia3;contador3<=20;contador3++){ 
2B80:  MOVFF  1E,1B
2B84:  MOVF   1B,W
2B86:  SUBLW  14
2B88:  BTFSS  FD8.0
2B8A:  BRA    2D3E
....................                     copia3=contador3; 
2B8C:  MOVFF  1B,1E
2B90:  CLRF   16
2B92:  BTFSC  FF2.7
2B94:  BSF    16.7
2B96:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
2B98:  MOVFF  25E,299
2B9C:  MOVFF  25D,298
2BA0:  MOVLB  2
2BA2:  CLRF   x9B
2BA4:  MOVFF  19,29A
2BA8:  MOVLB  0
2BAA:  CALL   0276
2BAE:  BTFSC  16.7
2BB0:  BSF    FF2.7
2BB2:  MOVFF  02,28B
2BB6:  MOVFF  01,28A
2BBA:  MOVLB  2
2BBC:  MOVF   02,W
2BBE:  SUBWF  x58,W
2BC0:  BNC   2C50
2BC2:  BNZ   2BCA
2BC4:  MOVF   x8A,W
2BC6:  SUBWF  x57,W
2BC8:  BNC   2C50
....................                       rb3=1; 
2BCA:  BSF    F81.3
....................                       rb1=1; 
2BCC:  BSF    F81.1
....................                       delay_ms(quantum); 
2BCE:  MOVFF  25E,28A
2BD2:  INCF   x8A,F
2BD4:  DECF   x8A,F
2BD6:  BTFSC  FD8.2
2BD8:  BRA    2BF4
2BDA:  CLRF   16
2BDC:  BTFSC  FF2.7
2BDE:  BSF    16.7
2BE0:  BCF    FF2.7
2BE2:  MOVLW  FF
2BE4:  MOVWF  x9A
2BE6:  MOVLB  0
2BE8:  CALL   024E
2BEC:  BTFSC  16.7
2BEE:  BSF    FF2.7
2BF0:  MOVLB  2
2BF2:  BRA    2BD4
2BF4:  CLRF   16
2BF6:  BTFSC  FF2.7
2BF8:  BSF    16.7
2BFA:  BCF    FF2.7
2BFC:  MOVFF  25D,29A
2C00:  MOVLB  0
2C02:  CALL   024E
2C06:  BTFSC  16.7
2C08:  BSF    FF2.7
....................                       rb1=0; 
2C0A:  BCF    F81.1
....................                       rb3=0; 
2C0C:  BCF    F81.3
....................                       delay_ms(quantum); 
2C0E:  MOVFF  25E,28A
2C12:  MOVLB  2
2C14:  INCF   x8A,F
2C16:  DECF   x8A,F
2C18:  BTFSC  FD8.2
2C1A:  BRA    2C36
2C1C:  CLRF   16
2C1E:  BTFSC  FF2.7
2C20:  BSF    16.7
2C22:  BCF    FF2.7
2C24:  MOVLW  FF
2C26:  MOVWF  x9A
2C28:  MOVLB  0
2C2A:  CALL   024E
2C2E:  BTFSC  16.7
2C30:  BSF    FF2.7
2C32:  MOVLB  2
2C34:  BRA    2C16
2C36:  CLRF   16
2C38:  BTFSC  FF2.7
2C3A:  BSF    16.7
2C3C:  BCF    FF2.7
2C3E:  MOVFF  25D,29A
2C42:  MOVLB  0
2C44:  CALL   024E
2C48:  BTFSC  16.7
2C4A:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
2C4C:  BRA    2D06
2C4E:  MOVLB  2
2C50:  CLRF   16
2C52:  BTFSC  FF2.7
2C54:  BSF    16.7
2C56:  BCF    FF2.7
....................  
....................                           if(quantum*contador3<time3){ 
2C58:  MOVFF  25E,299
2C5C:  MOVFF  25D,298
2C60:  CLRF   x9B
2C62:  MOVFF  1B,29A
2C66:  MOVLB  0
2C68:  CALL   0276
2C6C:  BTFSC  16.7
2C6E:  BSF    FF2.7
2C70:  MOVFF  02,28B
2C74:  MOVFF  01,28A
2C78:  MOVLB  2
2C7A:  MOVF   02,W
2C7C:  SUBWF  x5C,W
2C7E:  BNC   2D08
2C80:  BNZ   2C88
2C82:  MOVF   x5B,W
2C84:  SUBWF  x8A,W
2C86:  BC    2D08
....................                                rb3=1; 
2C88:  BSF    F81.3
....................                                delay_ms(quantum); 
2C8A:  MOVFF  25E,28A
2C8E:  INCF   x8A,F
2C90:  DECF   x8A,F
2C92:  BTFSC  FD8.2
2C94:  BRA    2CB0
2C96:  CLRF   16
2C98:  BTFSC  FF2.7
2C9A:  BSF    16.7
2C9C:  BCF    FF2.7
2C9E:  MOVLW  FF
2CA0:  MOVWF  x9A
2CA2:  MOVLB  0
2CA4:  CALL   024E
2CA8:  BTFSC  16.7
2CAA:  BSF    FF2.7
2CAC:  MOVLB  2
2CAE:  BRA    2C90
2CB0:  CLRF   16
2CB2:  BTFSC  FF2.7
2CB4:  BSF    16.7
2CB6:  BCF    FF2.7
2CB8:  MOVFF  25D,29A
2CBC:  MOVLB  0
2CBE:  CALL   024E
2CC2:  BTFSC  16.7
2CC4:  BSF    FF2.7
....................                                rb3=0; 
2CC6:  BCF    F81.3
....................                                delay_ms(quantum); 
2CC8:  MOVFF  25E,28A
2CCC:  MOVLB  2
2CCE:  INCF   x8A,F
2CD0:  DECF   x8A,F
2CD2:  BTFSC  FD8.2
2CD4:  BRA    2CF0
2CD6:  CLRF   16
2CD8:  BTFSC  FF2.7
2CDA:  BSF    16.7
2CDC:  BCF    FF2.7
2CDE:  MOVLW  FF
2CE0:  MOVWF  x9A
2CE2:  MOVLB  0
2CE4:  CALL   024E
2CE8:  BTFSC  16.7
2CEA:  BSF    FF2.7
2CEC:  MOVLB  2
2CEE:  BRA    2CD0
2CF0:  CLRF   16
2CF2:  BTFSC  FF2.7
2CF4:  BSF    16.7
2CF6:  BCF    FF2.7
2CF8:  MOVFF  25D,29A
2CFC:  MOVLB  0
2CFE:  CALL   024E
2D02:  BTFSC  16.7
2D04:  BSF    FF2.7
2D06:  MOVLB  2
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1(); 
2D08:  MOVF   19,W
2D0A:  SUBLW  0A
2D0C:  BNZ   2D1C
2D0E:  MOVF   1C,W
2D10:  SUBLW  09
2D12:  BNC   2D1C
2D14:  MOVLB  0
2D16:  CALL   1140
2D1A:  MOVLB  2
....................                  if(contador3==20 ) do_proceso3(); 
2D1C:  MOVF   1B,W
2D1E:  SUBLW  14
2D20:  BNZ   2D2A
2D22:  MOVLB  0
2D24:  CALL   11F0
2D28:  MOVLB  2
....................           
....................                  if(tecla_pulsada=='2'){ 
2D2A:  MOVF   17,W
2D2C:  SUBLW  32
2D2E:  BNZ   2D36
....................                       break; 
2D30:  MOVLB  0
2D32:  BRA    2D3E
2D34:  MOVLB  2
....................                   } 
....................                
....................                   contador1++; 
2D36:  INCF   19,F
....................                    
....................               } 
2D38:  INCF   1B,F
2D3A:  MOVLB  0
2D3C:  BRA    2B84
....................              } 
....................                        else{ 
2D3E:  BRA    2EFE
....................                         for (contador1=1;contador1<=10;contador1++){ 
2D40:  MOVLW  01
2D42:  MOVWF  19
2D44:  MOVF   19,W
2D46:  SUBLW  0A
2D48:  BTFSS  FD8.0
2D4A:  BRA    2EFE
....................                     copia1=contador1; 
2D4C:  MOVFF  19,1C
2D50:  CLRF   16
2D52:  BTFSC  FF2.7
2D54:  BSF    16.7
2D56:  BCF    FF2.7
....................                     if(quantum*contador3<=time3){ 
2D58:  MOVFF  25E,299
2D5C:  MOVFF  25D,298
2D60:  MOVLB  2
2D62:  CLRF   x9B
2D64:  MOVFF  1B,29A
2D68:  MOVLB  0
2D6A:  CALL   0276
2D6E:  BTFSC  16.7
2D70:  BSF    FF2.7
2D72:  MOVFF  02,28B
2D76:  MOVFF  01,28A
2D7A:  MOVLB  2
2D7C:  MOVF   02,W
2D7E:  SUBWF  x5C,W
2D80:  BNC   2E10
2D82:  BNZ   2D8A
2D84:  MOVF   x8A,W
2D86:  SUBWF  x5B,W
2D88:  BNC   2E10
....................                       rb3=1; 
2D8A:  BSF    F81.3
....................                       rb1=1; 
2D8C:  BSF    F81.1
....................                       delay_ms(quantum); 
2D8E:  MOVFF  25E,28A
2D92:  INCF   x8A,F
2D94:  DECF   x8A,F
2D96:  BTFSC  FD8.2
2D98:  BRA    2DB4
2D9A:  CLRF   16
2D9C:  BTFSC  FF2.7
2D9E:  BSF    16.7
2DA0:  BCF    FF2.7
2DA2:  MOVLW  FF
2DA4:  MOVWF  x9A
2DA6:  MOVLB  0
2DA8:  CALL   024E
2DAC:  BTFSC  16.7
2DAE:  BSF    FF2.7
2DB0:  MOVLB  2
2DB2:  BRA    2D94
2DB4:  CLRF   16
2DB6:  BTFSC  FF2.7
2DB8:  BSF    16.7
2DBA:  BCF    FF2.7
2DBC:  MOVFF  25D,29A
2DC0:  MOVLB  0
2DC2:  CALL   024E
2DC6:  BTFSC  16.7
2DC8:  BSF    FF2.7
....................                       rb1=0; 
2DCA:  BCF    F81.1
....................                       rb3=0; 
2DCC:  BCF    F81.3
....................                       delay_ms(quantum); 
2DCE:  MOVFF  25E,28A
2DD2:  MOVLB  2
2DD4:  INCF   x8A,F
2DD6:  DECF   x8A,F
2DD8:  BTFSC  FD8.2
2DDA:  BRA    2DF6
2DDC:  CLRF   16
2DDE:  BTFSC  FF2.7
2DE0:  BSF    16.7
2DE2:  BCF    FF2.7
2DE4:  MOVLW  FF
2DE6:  MOVWF  x9A
2DE8:  MOVLB  0
2DEA:  CALL   024E
2DEE:  BTFSC  16.7
2DF0:  BSF    FF2.7
2DF2:  MOVLB  2
2DF4:  BRA    2DD6
2DF6:  CLRF   16
2DF8:  BTFSC  FF2.7
2DFA:  BSF    16.7
2DFC:  BCF    FF2.7
2DFE:  MOVFF  25D,29A
2E02:  MOVLB  0
2E04:  CALL   024E
2E08:  BTFSC  16.7
2E0A:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
2E0C:  BRA    2EC6
2E0E:  MOVLB  2
2E10:  CLRF   16
2E12:  BTFSC  FF2.7
2E14:  BSF    16.7
2E16:  BCF    FF2.7
....................  
....................                           if(quantum*contador1<time1){ 
2E18:  MOVFF  25E,299
2E1C:  MOVFF  25D,298
2E20:  CLRF   x9B
2E22:  MOVFF  19,29A
2E26:  MOVLB  0
2E28:  CALL   0276
2E2C:  BTFSC  16.7
2E2E:  BSF    FF2.7
2E30:  MOVFF  02,28B
2E34:  MOVFF  01,28A
2E38:  MOVLB  2
2E3A:  MOVF   02,W
2E3C:  SUBWF  x58,W
2E3E:  BNC   2EC8
2E40:  BNZ   2E48
2E42:  MOVF   x57,W
2E44:  SUBWF  x8A,W
2E46:  BC    2EC8
....................                                rb1=1; 
2E48:  BSF    F81.1
....................                                delay_ms(quantum); 
2E4A:  MOVFF  25E,28A
2E4E:  INCF   x8A,F
2E50:  DECF   x8A,F
2E52:  BTFSC  FD8.2
2E54:  BRA    2E70
2E56:  CLRF   16
2E58:  BTFSC  FF2.7
2E5A:  BSF    16.7
2E5C:  BCF    FF2.7
2E5E:  MOVLW  FF
2E60:  MOVWF  x9A
2E62:  MOVLB  0
2E64:  CALL   024E
2E68:  BTFSC  16.7
2E6A:  BSF    FF2.7
2E6C:  MOVLB  2
2E6E:  BRA    2E50
2E70:  CLRF   16
2E72:  BTFSC  FF2.7
2E74:  BSF    16.7
2E76:  BCF    FF2.7
2E78:  MOVFF  25D,29A
2E7C:  MOVLB  0
2E7E:  CALL   024E
2E82:  BTFSC  16.7
2E84:  BSF    FF2.7
....................                                rb1=0; 
2E86:  BCF    F81.1
....................                                delay_ms(quantum); 
2E88:  MOVFF  25E,28A
2E8C:  MOVLB  2
2E8E:  INCF   x8A,F
2E90:  DECF   x8A,F
2E92:  BTFSC  FD8.2
2E94:  BRA    2EB0
2E96:  CLRF   16
2E98:  BTFSC  FF2.7
2E9A:  BSF    16.7
2E9C:  BCF    FF2.7
2E9E:  MOVLW  FF
2EA0:  MOVWF  x9A
2EA2:  MOVLB  0
2EA4:  CALL   024E
2EA8:  BTFSC  16.7
2EAA:  BSF    FF2.7
2EAC:  MOVLB  2
2EAE:  BRA    2E90
2EB0:  CLRF   16
2EB2:  BTFSC  FF2.7
2EB4:  BSF    16.7
2EB6:  BCF    FF2.7
2EB8:  MOVFF  25D,29A
2EBC:  MOVLB  0
2EBE:  CALL   024E
2EC2:  BTFSC  16.7
2EC4:  BSF    FF2.7
2EC6:  MOVLB  2
....................                                                      }  
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
2EC8:  MOVF   19,W
2ECA:  SUBLW  0A
2ECC:  BNZ   2ED6
2ECE:  MOVLB  0
2ED0:  CALL   1140
2ED4:  MOVLB  2
....................                  if(contador3==20 && copia3<20) do_proceso3(); 
2ED6:  MOVF   1B,W
2ED8:  SUBLW  14
2EDA:  BNZ   2EEA
2EDC:  MOVF   1E,W
2EDE:  SUBLW  13
2EE0:  BNC   2EEA
2EE2:  MOVLB  0
2EE4:  CALL   11F0
2EE8:  MOVLB  2
....................           
....................                  if(tecla_pulsada=='2'){ 
2EEA:  MOVF   17,W
2EEC:  SUBLW  32
2EEE:  BNZ   2EF6
....................                       break; 
2EF0:  MOVLB  0
2EF2:  BRA    2EFE
2EF4:  MOVLB  2
....................                   } 
....................                
....................                   contador3++; 
2EF6:  INCF   1B,F
....................                    
....................               } 
2EF8:  INCF   19,F
2EFA:  MOVLB  0
2EFC:  BRA    2D44
....................                         
....................                         
....................           } 
....................            
....................               if(tecla_pulsada=='2'){ 
2EFE:  MOVF   17,W
2F00:  SUBLW  32
2F02:  BTFSS  FD8.2
2F04:  BRA    3422
....................                           if (copia3<=4){ 
2F06:  MOVF   1E,W
2F08:  SUBLW  04
2F0A:  BTFSS  FD8.0
2F0C:  BRA    319A
....................                       for (contador3=1;contador3<=20;contador3++){ 
2F0E:  MOVLW  01
2F10:  MOVWF  1B
2F12:  MOVF   1B,W
2F14:  SUBLW  14
2F16:  BTFSS  FD8.0
2F18:  BRA    3198
....................                            copia3=contador3; 
2F1A:  MOVFF  1B,1E
2F1E:  CLRF   16
2F20:  BTFSC  FF2.7
2F22:  BSF    16.7
2F24:  BCF    FF2.7
....................                            if(quantum*contador1<time1){ 
2F26:  MOVFF  25E,299
2F2A:  MOVFF  25D,298
2F2E:  MOVLB  2
2F30:  CLRF   x9B
2F32:  MOVFF  19,29A
2F36:  MOVLB  0
2F38:  CALL   0276
2F3C:  BTFSC  16.7
2F3E:  BSF    FF2.7
2F40:  MOVFF  02,28B
2F44:  MOVFF  01,28A
2F48:  MOVLB  2
2F4A:  MOVF   02,W
2F4C:  SUBWF  x58,W
2F4E:  BNC   2FE2
2F50:  BNZ   2F58
2F52:  MOVF   x57,W
2F54:  SUBWF  x8A,W
2F56:  BC    2FE2
....................                              rb2=1; 
2F58:  BSF    F81.2
....................                              rb3=1; 
2F5A:  BSF    F81.3
....................                              rb1=1; 
2F5C:  BSF    F81.1
....................                              delay_ms(quantum); 
2F5E:  MOVFF  25E,28A
2F62:  INCF   x8A,F
2F64:  DECF   x8A,F
2F66:  BTFSC  FD8.2
2F68:  BRA    2F84
2F6A:  CLRF   16
2F6C:  BTFSC  FF2.7
2F6E:  BSF    16.7
2F70:  BCF    FF2.7
2F72:  MOVLW  FF
2F74:  MOVWF  x9A
2F76:  MOVLB  0
2F78:  CALL   024E
2F7C:  BTFSC  16.7
2F7E:  BSF    FF2.7
2F80:  MOVLB  2
2F82:  BRA    2F64
2F84:  CLRF   16
2F86:  BTFSC  FF2.7
2F88:  BSF    16.7
2F8A:  BCF    FF2.7
2F8C:  MOVFF  25D,29A
2F90:  MOVLB  0
2F92:  CALL   024E
2F96:  BTFSC  16.7
2F98:  BSF    FF2.7
....................                              rb2=0; 
2F9A:  BCF    F81.2
....................                              rb3=0; 
2F9C:  BCF    F81.3
....................                              rb1=0; 
2F9E:  BCF    F81.1
....................                              delay_ms(quantum); 
2FA0:  MOVFF  25E,28A
2FA4:  MOVLB  2
2FA6:  INCF   x8A,F
2FA8:  DECF   x8A,F
2FAA:  BTFSC  FD8.2
2FAC:  BRA    2FC8
2FAE:  CLRF   16
2FB0:  BTFSC  FF2.7
2FB2:  BSF    16.7
2FB4:  BCF    FF2.7
2FB6:  MOVLW  FF
2FB8:  MOVWF  x9A
2FBA:  MOVLB  0
2FBC:  CALL   024E
2FC0:  BTFSC  16.7
2FC2:  BSF    FF2.7
2FC4:  MOVLB  2
2FC6:  BRA    2FA8
2FC8:  CLRF   16
2FCA:  BTFSC  FF2.7
2FCC:  BSF    16.7
2FCE:  BCF    FF2.7
2FD0:  MOVFF  25D,29A
2FD4:  MOVLB  0
2FD6:  CALL   024E
2FDA:  BTFSC  16.7
2FDC:  BSF    FF2.7
....................                          
....................                                                }                                              
....................                    else  { 
2FDE:  BRA    3156
2FE0:  MOVLB  2
2FE2:  CLRF   16
2FE4:  BTFSC  FF2.7
2FE6:  BSF    16.7
2FE8:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<time2){ 
2FEA:  MOVFF  25E,299
2FEE:  MOVFF  25D,298
2FF2:  CLRF   x9B
2FF4:  MOVFF  1A,29A
2FF8:  MOVLB  0
2FFA:  CALL   0276
2FFE:  BTFSC  16.7
3000:  BSF    FF2.7
3002:  MOVFF  02,28B
3006:  MOVFF  01,28A
300A:  MOVLB  2
300C:  MOVF   02,W
300E:  SUBWF  x5A,W
3010:  BNC   30A0
3012:  BNZ   301A
3014:  MOVF   x59,W
3016:  SUBWF  x8A,W
3018:  BC    30A0
....................                                rb3=1; 
301A:  BSF    F81.3
....................                                rb2=1; 
301C:  BSF    F81.2
....................                                delay_ms(quantum); 
301E:  MOVFF  25E,28A
3022:  INCF   x8A,F
3024:  DECF   x8A,F
3026:  BTFSC  FD8.2
3028:  BRA    3044
302A:  CLRF   16
302C:  BTFSC  FF2.7
302E:  BSF    16.7
3030:  BCF    FF2.7
3032:  MOVLW  FF
3034:  MOVWF  x9A
3036:  MOVLB  0
3038:  CALL   024E
303C:  BTFSC  16.7
303E:  BSF    FF2.7
3040:  MOVLB  2
3042:  BRA    3024
3044:  CLRF   16
3046:  BTFSC  FF2.7
3048:  BSF    16.7
304A:  BCF    FF2.7
304C:  MOVFF  25D,29A
3050:  MOVLB  0
3052:  CALL   024E
3056:  BTFSC  16.7
3058:  BSF    FF2.7
....................                                rb3=0; 
305A:  BCF    F81.3
....................                                rb2=0; 
305C:  BCF    F81.2
....................                                delay_ms(quantum); 
305E:  MOVFF  25E,28A
3062:  MOVLB  2
3064:  INCF   x8A,F
3066:  DECF   x8A,F
3068:  BTFSC  FD8.2
306A:  BRA    3086
306C:  CLRF   16
306E:  BTFSC  FF2.7
3070:  BSF    16.7
3072:  BCF    FF2.7
3074:  MOVLW  FF
3076:  MOVWF  x9A
3078:  MOVLB  0
307A:  CALL   024E
307E:  BTFSC  16.7
3080:  BSF    FF2.7
3082:  MOVLB  2
3084:  BRA    3066
3086:  CLRF   16
3088:  BTFSC  FF2.7
308A:  BSF    16.7
308C:  BCF    FF2.7
308E:  MOVFF  25D,29A
3092:  MOVLB  0
3094:  CALL   024E
3098:  BTFSC  16.7
309A:  BSF    FF2.7
....................                                                     }  
....................                      else{ 
309C:  BRA    3156
309E:  MOVLB  2
30A0:  CLRF   16
30A2:  BTFSC  FF2.7
30A4:  BSF    16.7
30A6:  BCF    FF2.7
....................                          if(quantum*contador3<time3){ 
30A8:  MOVFF  25E,299
30AC:  MOVFF  25D,298
30B0:  CLRF   x9B
30B2:  MOVFF  1B,29A
30B6:  MOVLB  0
30B8:  CALL   0276
30BC:  BTFSC  16.7
30BE:  BSF    FF2.7
30C0:  MOVFF  02,28B
30C4:  MOVFF  01,28A
30C8:  MOVLB  2
30CA:  MOVF   02,W
30CC:  SUBWF  x5C,W
30CE:  BNC   3158
30D0:  BNZ   30D8
30D2:  MOVF   x5B,W
30D4:  SUBWF  x8A,W
30D6:  BC    3158
....................                                rb3=1; 
30D8:  BSF    F81.3
....................                                delay_ms(quantum); 
30DA:  MOVFF  25E,28A
30DE:  INCF   x8A,F
30E0:  DECF   x8A,F
30E2:  BTFSC  FD8.2
30E4:  BRA    3100
30E6:  CLRF   16
30E8:  BTFSC  FF2.7
30EA:  BSF    16.7
30EC:  BCF    FF2.7
30EE:  MOVLW  FF
30F0:  MOVWF  x9A
30F2:  MOVLB  0
30F4:  CALL   024E
30F8:  BTFSC  16.7
30FA:  BSF    FF2.7
30FC:  MOVLB  2
30FE:  BRA    30E0
3100:  CLRF   16
3102:  BTFSC  FF2.7
3104:  BSF    16.7
3106:  BCF    FF2.7
3108:  MOVFF  25D,29A
310C:  MOVLB  0
310E:  CALL   024E
3112:  BTFSC  16.7
3114:  BSF    FF2.7
....................                                rb3=0; 
3116:  BCF    F81.3
....................                                delay_ms(quantum); 
3118:  MOVFF  25E,28A
311C:  MOVLB  2
311E:  INCF   x8A,F
3120:  DECF   x8A,F
3122:  BTFSC  FD8.2
3124:  BRA    3140
3126:  CLRF   16
3128:  BTFSC  FF2.7
312A:  BSF    16.7
312C:  BCF    FF2.7
312E:  MOVLW  FF
3130:  MOVWF  x9A
3132:  MOVLB  0
3134:  CALL   024E
3138:  BTFSC  16.7
313A:  BSF    FF2.7
313C:  MOVLB  2
313E:  BRA    3120
3140:  CLRF   16
3142:  BTFSC  FF2.7
3144:  BSF    16.7
3146:  BCF    FF2.7
3148:  MOVFF  25D,29A
314C:  MOVLB  0
314E:  CALL   024E
3152:  BTFSC  16.7
3154:  BSF    FF2.7
3156:  MOVLB  2
....................                                                      }  
....................                            } 
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1();                 
3158:  MOVF   19,W
315A:  SUBLW  0A
315C:  BNZ   316C
315E:  MOVF   1C,W
3160:  SUBLW  09
3162:  BNC   316C
3164:  MOVLB  0
3166:  CALL   1140
316A:  MOVLB  2
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
316C:  MOVF   1A,W
316E:  SUBLW  10
3170:  BNZ   3180
3172:  MOVF   1D,W
3174:  SUBLW  0F
3176:  BNC   3180
3178:  MOVLB  0
317A:  CALL   1198
317E:  MOVLB  2
....................                  if(contador3==20 )do_proceso3(); 
3180:  MOVF   1B,W
3182:  SUBLW  14
3184:  BNZ   318E
3186:  MOVLB  0
3188:  CALL   11F0
318C:  MOVLB  2
....................  
....................                   contador1++; 
318E:  INCF   19,F
....................                   contador2++; 
3190:  INCF   1A,F
....................                  
....................               } // 
3192:  INCF   1B,F
3194:  MOVLB  0
3196:  BRA    2F12
....................                           } 
....................               
....................               
....................              else 
3198:  BRA    3422
....................                  { 
....................                      for (contador2=1;contador2<=16;contador2++){ 
319A:  MOVLW  01
319C:  MOVWF  1A
319E:  MOVF   1A,W
31A0:  SUBLW  10
31A2:  BTFSS  FD8.0
31A4:  BRA    3422
....................                            copia2=contador2; 
31A6:  MOVFF  1A,1D
31AA:  CLRF   16
31AC:  BTFSC  FF2.7
31AE:  BSF    16.7
31B0:  BCF    FF2.7
....................                            if(quantum*contador1<time1){ 
31B2:  MOVFF  25E,299
31B6:  MOVFF  25D,298
31BA:  MOVLB  2
31BC:  CLRF   x9B
31BE:  MOVFF  19,29A
31C2:  MOVLB  0
31C4:  CALL   0276
31C8:  BTFSC  16.7
31CA:  BSF    FF2.7
31CC:  MOVFF  02,28B
31D0:  MOVFF  01,28A
31D4:  MOVLB  2
31D6:  MOVF   02,W
31D8:  SUBWF  x58,W
31DA:  BTFSS  FD8.0
31DC:  BRA    3330
31DE:  BNZ   31E8
31E0:  MOVF   x57,W
31E2:  SUBWF  x8A,W
31E4:  BTFSC  FD8.0
31E6:  BRA    3330
31E8:  CLRF   16
31EA:  BTFSC  FF2.7
31EC:  BSF    16.7
31EE:  BCF    FF2.7
....................                            if(quantum*contador3<time3){ 
31F0:  MOVFF  25E,299
31F4:  MOVFF  25D,298
31F8:  CLRF   x9B
31FA:  MOVFF  1B,29A
31FE:  MOVLB  0
3200:  CALL   0276
3204:  BTFSC  16.7
3206:  BSF    FF2.7
3208:  MOVFF  02,28B
320C:  MOVFF  01,28A
3210:  MOVLB  2
3212:  MOVF   02,W
3214:  SUBWF  x5C,W
3216:  BNC   32AA
3218:  BNZ   3220
321A:  MOVF   x5B,W
321C:  SUBWF  x8A,W
321E:  BC    32AA
....................                              rb2=1; 
3220:  BSF    F81.2
....................                              rb3=1; 
3222:  BSF    F81.3
....................                              rb1=1; 
3224:  BSF    F81.1
....................                              delay_ms(quantum); 
3226:  MOVFF  25E,28A
322A:  INCF   x8A,F
322C:  DECF   x8A,F
322E:  BTFSC  FD8.2
3230:  BRA    324C
3232:  CLRF   16
3234:  BTFSC  FF2.7
3236:  BSF    16.7
3238:  BCF    FF2.7
323A:  MOVLW  FF
323C:  MOVWF  x9A
323E:  MOVLB  0
3240:  CALL   024E
3244:  BTFSC  16.7
3246:  BSF    FF2.7
3248:  MOVLB  2
324A:  BRA    322C
324C:  CLRF   16
324E:  BTFSC  FF2.7
3250:  BSF    16.7
3252:  BCF    FF2.7
3254:  MOVFF  25D,29A
3258:  MOVLB  0
325A:  CALL   024E
325E:  BTFSC  16.7
3260:  BSF    FF2.7
....................                              rb2=0; 
3262:  BCF    F81.2
....................                              rb3=0; 
3264:  BCF    F81.3
....................                              rb1=0; 
3266:  BCF    F81.1
....................                              delay_ms(quantum); 
3268:  MOVFF  25E,28A
326C:  MOVLB  2
326E:  INCF   x8A,F
3270:  DECF   x8A,F
3272:  BTFSC  FD8.2
3274:  BRA    3290
3276:  CLRF   16
3278:  BTFSC  FF2.7
327A:  BSF    16.7
327C:  BCF    FF2.7
327E:  MOVLW  FF
3280:  MOVWF  x9A
3282:  MOVLB  0
3284:  CALL   024E
3288:  BTFSC  16.7
328A:  BSF    FF2.7
328C:  MOVLB  2
328E:  BRA    3270
3290:  CLRF   16
3292:  BTFSC  FF2.7
3294:  BSF    16.7
3296:  BCF    FF2.7
3298:  MOVFF  25D,29A
329C:  MOVLB  0
329E:  CALL   024E
32A2:  BTFSC  16.7
32A4:  BSF    FF2.7
....................                              } 
....................                              else{ 
32A6:  BRA    332C
32A8:  MOVLB  2
....................                              rb2=1; 
32AA:  BSF    F81.2
....................                              rb1=1; 
32AC:  BSF    F81.1
....................                              delay_ms(quantum); 
32AE:  MOVFF  25E,28A
32B2:  INCF   x8A,F
32B4:  DECF   x8A,F
32B6:  BTFSC  FD8.2
32B8:  BRA    32D4
32BA:  CLRF   16
32BC:  BTFSC  FF2.7
32BE:  BSF    16.7
32C0:  BCF    FF2.7
32C2:  MOVLW  FF
32C4:  MOVWF  x9A
32C6:  MOVLB  0
32C8:  CALL   024E
32CC:  BTFSC  16.7
32CE:  BSF    FF2.7
32D0:  MOVLB  2
32D2:  BRA    32B4
32D4:  CLRF   16
32D6:  BTFSC  FF2.7
32D8:  BSF    16.7
32DA:  BCF    FF2.7
32DC:  MOVFF  25D,29A
32E0:  MOVLB  0
32E2:  CALL   024E
32E6:  BTFSC  16.7
32E8:  BSF    FF2.7
....................                              rb2=0; 
32EA:  BCF    F81.2
....................                              rb1=0; 
32EC:  BCF    F81.1
....................                              delay_ms(quantum); 
32EE:  MOVFF  25E,28A
32F2:  MOVLB  2
32F4:  INCF   x8A,F
32F6:  DECF   x8A,F
32F8:  BTFSC  FD8.2
32FA:  BRA    3316
32FC:  CLRF   16
32FE:  BTFSC  FF2.7
3300:  BSF    16.7
3302:  BCF    FF2.7
3304:  MOVLW  FF
3306:  MOVWF  x9A
3308:  MOVLB  0
330A:  CALL   024E
330E:  BTFSC  16.7
3310:  BSF    FF2.7
3312:  MOVLB  2
3314:  BRA    32F6
3316:  CLRF   16
3318:  BTFSC  FF2.7
331A:  BSF    16.7
331C:  BCF    FF2.7
331E:  MOVFF  25D,29A
3322:  MOVLB  0
3324:  CALL   024E
3328:  BTFSC  16.7
332A:  BSF    FF2.7
....................                              } 
....................                               
....................                          
....................                                                }                                              
....................                    else  { 
332C:  BRA    33E6
332E:  MOVLB  2
3330:  CLRF   16
3332:  BTFSC  FF2.7
3334:  BSF    16.7
3336:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<time2){ 
3338:  MOVFF  25E,299
333C:  MOVFF  25D,298
3340:  CLRF   x9B
3342:  MOVFF  1A,29A
3346:  MOVLB  0
3348:  CALL   0276
334C:  BTFSC  16.7
334E:  BSF    FF2.7
3350:  MOVFF  02,28B
3354:  MOVFF  01,28A
3358:  MOVLB  2
335A:  MOVF   02,W
335C:  SUBWF  x5A,W
335E:  BNC   33E8
3360:  BNZ   3368
3362:  MOVF   x59,W
3364:  SUBWF  x8A,W
3366:  BC    33E8
....................                                rb2=1; 
3368:  BSF    F81.2
....................                                delay_ms(quantum); 
336A:  MOVFF  25E,28A
336E:  INCF   x8A,F
3370:  DECF   x8A,F
3372:  BTFSC  FD8.2
3374:  BRA    3390
3376:  CLRF   16
3378:  BTFSC  FF2.7
337A:  BSF    16.7
337C:  BCF    FF2.7
337E:  MOVLW  FF
3380:  MOVWF  x9A
3382:  MOVLB  0
3384:  CALL   024E
3388:  BTFSC  16.7
338A:  BSF    FF2.7
338C:  MOVLB  2
338E:  BRA    3370
3390:  CLRF   16
3392:  BTFSC  FF2.7
3394:  BSF    16.7
3396:  BCF    FF2.7
3398:  MOVFF  25D,29A
339C:  MOVLB  0
339E:  CALL   024E
33A2:  BTFSC  16.7
33A4:  BSF    FF2.7
....................                                rb2=0; 
33A6:  BCF    F81.2
....................                                delay_ms(quantum); 
33A8:  MOVFF  25E,28A
33AC:  MOVLB  2
33AE:  INCF   x8A,F
33B0:  DECF   x8A,F
33B2:  BTFSC  FD8.2
33B4:  BRA    33D0
33B6:  CLRF   16
33B8:  BTFSC  FF2.7
33BA:  BSF    16.7
33BC:  BCF    FF2.7
33BE:  MOVLW  FF
33C0:  MOVWF  x9A
33C2:  MOVLB  0
33C4:  CALL   024E
33C8:  BTFSC  16.7
33CA:  BSF    FF2.7
33CC:  MOVLB  2
33CE:  BRA    33B0
33D0:  CLRF   16
33D2:  BTFSC  FF2.7
33D4:  BSF    16.7
33D6:  BCF    FF2.7
33D8:  MOVFF  25D,29A
33DC:  MOVLB  0
33DE:  CALL   024E
33E2:  BTFSC  16.7
33E4:  BSF    FF2.7
33E6:  MOVLB  2
....................                                                     }  
....................                          } 
....................  
....................                  if(contador1==10 && copia1<10) do_proceso1();                 
33E8:  MOVF   19,W
33EA:  SUBLW  0A
33EC:  BNZ   33FC
33EE:  MOVF   1C,W
33F0:  SUBLW  09
33F2:  BNC   33FC
33F4:  MOVLB  0
33F6:  CALL   1140
33FA:  MOVLB  2
....................                  if(contador2==16 ) do_proceso2(); 
33FC:  MOVF   1A,W
33FE:  SUBLW  10
3400:  BNZ   340A
3402:  MOVLB  0
3404:  CALL   1198
3408:  MOVLB  2
....................                  if(contador3==20 )do_proceso3(); 
340A:  MOVF   1B,W
340C:  SUBLW  14
340E:  BNZ   3418
3410:  MOVLB  0
3412:  CALL   11F0
3416:  MOVLB  2
....................  
....................                   contador1++; 
3418:  INCF   19,F
....................                   contador3++; 
341A:  INCF   1B,F
....................                  
....................               } // 
341C:  INCF   1A,F
341E:  MOVLB  0
3420:  BRA    319E
....................           
....................           
....................                  } 
....................          }   
....................           
....................           
....................      }   
....................      //       
....................          else{ 
3422:  GOTO   429C
....................           
....................           if(tecla_pulsada=='2'){ 
3426:  MOVF   17,W
3428:  SUBLW  32
342A:  BTFSS  FD8.2
342C:  GOTO   429C
....................                if(copia3<=4){// 
3430:  MOVF   1E,W
3432:  SUBLW  04
3434:  BTFSS  FD8.0
3436:  GOTO   3BCE
....................                for (contador3=1;contador3<=20;contador3++){ 
343A:  MOVLW  01
343C:  MOVWF  1B
343E:  MOVF   1B,W
3440:  SUBLW  14
3442:  BTFSS  FD8.0
3444:  BRA    35F8
....................                     copia3=contador3; 
3446:  MOVFF  1B,1E
344A:  CLRF   16
344C:  BTFSC  FF2.7
344E:  BSF    16.7
3450:  BCF    FF2.7
....................                     if(quantum*contador2<time2){ 
3452:  MOVFF  25E,299
3456:  MOVFF  25D,298
345A:  MOVLB  2
345C:  CLRF   x9B
345E:  MOVFF  1A,29A
3462:  MOVLB  0
3464:  CALL   0276
3468:  BTFSC  16.7
346A:  BSF    FF2.7
346C:  MOVFF  02,28B
3470:  MOVFF  01,28A
3474:  MOVLB  2
3476:  MOVF   02,W
3478:  SUBWF  x5A,W
347A:  BNC   350A
347C:  BNZ   3484
347E:  MOVF   x59,W
3480:  SUBWF  x8A,W
3482:  BC    350A
....................                       
....................                       rb3=1; 
3484:  BSF    F81.3
....................                       rb2=1; 
3486:  BSF    F81.2
....................                       delay_ms(quantum); 
3488:  MOVFF  25E,28A
348C:  INCF   x8A,F
348E:  DECF   x8A,F
3490:  BTFSC  FD8.2
3492:  BRA    34AE
3494:  CLRF   16
3496:  BTFSC  FF2.7
3498:  BSF    16.7
349A:  BCF    FF2.7
349C:  MOVLW  FF
349E:  MOVWF  x9A
34A0:  MOVLB  0
34A2:  CALL   024E
34A6:  BTFSC  16.7
34A8:  BSF    FF2.7
34AA:  MOVLB  2
34AC:  BRA    348E
34AE:  CLRF   16
34B0:  BTFSC  FF2.7
34B2:  BSF    16.7
34B4:  BCF    FF2.7
34B6:  MOVFF  25D,29A
34BA:  MOVLB  0
34BC:  CALL   024E
34C0:  BTFSC  16.7
34C2:  BSF    FF2.7
....................                       rb3=0; 
34C4:  BCF    F81.3
....................                       rb2=0; 
34C6:  BCF    F81.2
....................                       
....................                       delay_ms(quantum); 
34C8:  MOVFF  25E,28A
34CC:  MOVLB  2
34CE:  INCF   x8A,F
34D0:  DECF   x8A,F
34D2:  BTFSC  FD8.2
34D4:  BRA    34F0
34D6:  CLRF   16
34D8:  BTFSC  FF2.7
34DA:  BSF    16.7
34DC:  BCF    FF2.7
34DE:  MOVLW  FF
34E0:  MOVWF  x9A
34E2:  MOVLB  0
34E4:  CALL   024E
34E8:  BTFSC  16.7
34EA:  BSF    FF2.7
34EC:  MOVLB  2
34EE:  BRA    34D0
34F0:  CLRF   16
34F2:  BTFSC  FF2.7
34F4:  BSF    16.7
34F6:  BCF    FF2.7
34F8:  MOVFF  25D,29A
34FC:  MOVLB  0
34FE:  CALL   024E
3502:  BTFSC  16.7
3504:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
3506:  BRA    35C0
3508:  MOVLB  2
350A:  CLRF   16
350C:  BTFSC  FF2.7
350E:  BSF    16.7
3510:  BCF    FF2.7
....................                     
....................                           if(quantum*contador3<=time3){ 
3512:  MOVFF  25E,299
3516:  MOVFF  25D,298
351A:  CLRF   x9B
351C:  MOVFF  1B,29A
3520:  MOVLB  0
3522:  CALL   0276
3526:  BTFSC  16.7
3528:  BSF    FF2.7
352A:  MOVFF  02,28B
352E:  MOVFF  01,28A
3532:  MOVLB  2
3534:  MOVF   02,W
3536:  SUBWF  x5C,W
3538:  BNC   35C2
353A:  BNZ   3542
353C:  MOVF   x8A,W
353E:  SUBWF  x5B,W
3540:  BNC   35C2
....................                                 
....................                                rb3=1; 
3542:  BSF    F81.3
....................                                delay_ms(quantum); 
3544:  MOVFF  25E,28A
3548:  INCF   x8A,F
354A:  DECF   x8A,F
354C:  BTFSC  FD8.2
354E:  BRA    356A
3550:  CLRF   16
3552:  BTFSC  FF2.7
3554:  BSF    16.7
3556:  BCF    FF2.7
3558:  MOVLW  FF
355A:  MOVWF  x9A
355C:  MOVLB  0
355E:  CALL   024E
3562:  BTFSC  16.7
3564:  BSF    FF2.7
3566:  MOVLB  2
3568:  BRA    354A
356A:  CLRF   16
356C:  BTFSC  FF2.7
356E:  BSF    16.7
3570:  BCF    FF2.7
3572:  MOVFF  25D,29A
3576:  MOVLB  0
3578:  CALL   024E
357C:  BTFSC  16.7
357E:  BSF    FF2.7
....................                                rb3=0; 
3580:  BCF    F81.3
....................                                delay_ms(quantum); 
3582:  MOVFF  25E,28A
3586:  MOVLB  2
3588:  INCF   x8A,F
358A:  DECF   x8A,F
358C:  BTFSC  FD8.2
358E:  BRA    35AA
3590:  CLRF   16
3592:  BTFSC  FF2.7
3594:  BSF    16.7
3596:  BCF    FF2.7
3598:  MOVLW  FF
359A:  MOVWF  x9A
359C:  MOVLB  0
359E:  CALL   024E
35A2:  BTFSC  16.7
35A4:  BSF    FF2.7
35A6:  MOVLB  2
35A8:  BRA    358A
35AA:  CLRF   16
35AC:  BTFSC  FF2.7
35AE:  BSF    16.7
35B0:  BCF    FF2.7
35B2:  MOVFF  25D,29A
35B6:  MOVLB  0
35B8:  CALL   024E
35BC:  BTFSC  16.7
35BE:  BSF    FF2.7
35C0:  MOVLB  2
....................                                                      }  
....................                          } 
....................  
....................                  if(contador2==16 && copia2<16) do_proceso2(); 
35C2:  MOVF   1A,W
35C4:  SUBLW  10
35C6:  BNZ   35D6
35C8:  MOVF   1D,W
35CA:  SUBLW  0F
35CC:  BNC   35D6
35CE:  MOVLB  0
35D0:  CALL   1198
35D4:  MOVLB  2
....................                  if(contador3==20 )do_proceso3(); 
35D6:  MOVF   1B,W
35D8:  SUBLW  14
35DA:  BNZ   35E4
35DC:  MOVLB  0
35DE:  CALL   11F0
35E2:  MOVLB  2
....................                   
....................                  if(tecla_pulsada=='1'){ 
35E4:  MOVF   17,W
35E6:  SUBLW  31
35E8:  BNZ   35F0
....................                       break; 
35EA:  MOVLB  0
35EC:  BRA    35F8
35EE:  MOVLB  2
....................                   } 
....................                   contador2++; 
35F0:  INCF   1A,F
....................  
....................                  } 
35F2:  INCF   1B,F
35F4:  MOVLB  0
35F6:  BRA    343E
....................                  if(tecla_pulsada=='1'){ 
35F8:  MOVF   17,W
35FA:  SUBLW  31
35FC:  BTFSS  FD8.2
35FE:  BRA    3BCC
....................                          if(copia3<=10){ 
3600:  MOVF   1E,W
3602:  SUBLW  0A
3604:  BTFSS  FD8.0
3606:  BRA    394A
....................                          for (contador3=copia3;contador3<=20;contador3++){ 
3608:  MOVFF  1E,1B
360C:  MOVF   1B,W
360E:  SUBLW  14
3610:  BTFSS  FD8.0
3612:  BRA    3948
....................                               copia3=contador3; 
3614:  MOVFF  1B,1E
3618:  CLRF   16
361A:  BTFSC  FF2.7
361C:  BSF    16.7
361E:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
3620:  MOVFF  25E,299
3624:  MOVFF  25D,298
3628:  MOVLB  2
362A:  CLRF   x9B
362C:  MOVFF  19,29A
3630:  MOVLB  0
3632:  CALL   0276
3636:  BTFSC  16.7
3638:  BSF    FF2.7
363A:  MOVFF  02,28B
363E:  MOVFF  01,28A
3642:  MOVLB  2
3644:  MOVF   02,W
3646:  SUBWF  x58,W
3648:  BTFSS  FD8.0
364A:  BRA    379E
364C:  BNZ   3656
364E:  MOVF   x8A,W
3650:  SUBWF  x57,W
3652:  BTFSS  FD8.0
3654:  BRA    379E
3656:  CLRF   16
3658:  BTFSC  FF2.7
365A:  BSF    16.7
365C:  BCF    FF2.7
....................                     if(quantum*contador2<=time2){ 
365E:  MOVFF  25E,299
3662:  MOVFF  25D,298
3666:  CLRF   x9B
3668:  MOVFF  1A,29A
366C:  MOVLB  0
366E:  CALL   0276
3672:  BTFSC  16.7
3674:  BSF    FF2.7
3676:  MOVFF  02,28B
367A:  MOVFF  01,28A
367E:  MOVLB  2
3680:  MOVF   02,W
3682:  SUBWF  x5A,W
3684:  BNC   3718
3686:  BNZ   368E
3688:  MOVF   x8A,W
368A:  SUBWF  x59,W
368C:  BNC   3718
....................                              rb2=1; 
368E:  BSF    F81.2
....................                              rb3=1; 
3690:  BSF    F81.3
....................                              rb1=1; 
3692:  BSF    F81.1
....................                              delay_ms(quantum); 
3694:  MOVFF  25E,28A
3698:  INCF   x8A,F
369A:  DECF   x8A,F
369C:  BTFSC  FD8.2
369E:  BRA    36BA
36A0:  CLRF   16
36A2:  BTFSC  FF2.7
36A4:  BSF    16.7
36A6:  BCF    FF2.7
36A8:  MOVLW  FF
36AA:  MOVWF  x9A
36AC:  MOVLB  0
36AE:  CALL   024E
36B2:  BTFSC  16.7
36B4:  BSF    FF2.7
36B6:  MOVLB  2
36B8:  BRA    369A
36BA:  CLRF   16
36BC:  BTFSC  FF2.7
36BE:  BSF    16.7
36C0:  BCF    FF2.7
36C2:  MOVFF  25D,29A
36C6:  MOVLB  0
36C8:  CALL   024E
36CC:  BTFSC  16.7
36CE:  BSF    FF2.7
....................                              rb2=0; 
36D0:  BCF    F81.2
....................                              rb3=0; 
36D2:  BCF    F81.3
....................                              rb1=0; 
36D4:  BCF    F81.1
....................                              delay_ms(quantum); 
36D6:  MOVFF  25E,28A
36DA:  MOVLB  2
36DC:  INCF   x8A,F
36DE:  DECF   x8A,F
36E0:  BTFSC  FD8.2
36E2:  BRA    36FE
36E4:  CLRF   16
36E6:  BTFSC  FF2.7
36E8:  BSF    16.7
36EA:  BCF    FF2.7
36EC:  MOVLW  FF
36EE:  MOVWF  x9A
36F0:  MOVLB  0
36F2:  CALL   024E
36F6:  BTFSC  16.7
36F8:  BSF    FF2.7
36FA:  MOVLB  2
36FC:  BRA    36DE
36FE:  CLRF   16
3700:  BTFSC  FF2.7
3702:  BSF    16.7
3704:  BCF    FF2.7
3706:  MOVFF  25D,29A
370A:  MOVLB  0
370C:  CALL   024E
3710:  BTFSC  16.7
3712:  BSF    FF2.7
....................                     } 
....................                     else{   
3714:  BRA    379A
3716:  MOVLB  2
....................                              rb3=1; 
3718:  BSF    F81.3
....................                              rb1=1; 
371A:  BSF    F81.1
....................                              delay_ms(quantum); 
371C:  MOVFF  25E,28A
3720:  INCF   x8A,F
3722:  DECF   x8A,F
3724:  BTFSC  FD8.2
3726:  BRA    3742
3728:  CLRF   16
372A:  BTFSC  FF2.7
372C:  BSF    16.7
372E:  BCF    FF2.7
3730:  MOVLW  FF
3732:  MOVWF  x9A
3734:  MOVLB  0
3736:  CALL   024E
373A:  BTFSC  16.7
373C:  BSF    FF2.7
373E:  MOVLB  2
3740:  BRA    3722
3742:  CLRF   16
3744:  BTFSC  FF2.7
3746:  BSF    16.7
3748:  BCF    FF2.7
374A:  MOVFF  25D,29A
374E:  MOVLB  0
3750:  CALL   024E
3754:  BTFSC  16.7
3756:  BSF    FF2.7
....................                              rb3=0; 
3758:  BCF    F81.3
....................                              rb1=0; 
375A:  BCF    F81.1
....................                              delay_ms(quantum); 
375C:  MOVFF  25E,28A
3760:  MOVLB  2
3762:  INCF   x8A,F
3764:  DECF   x8A,F
3766:  BTFSC  FD8.2
3768:  BRA    3784
376A:  CLRF   16
376C:  BTFSC  FF2.7
376E:  BSF    16.7
3770:  BCF    FF2.7
3772:  MOVLW  FF
3774:  MOVWF  x9A
3776:  MOVLB  0
3778:  CALL   024E
377C:  BTFSC  16.7
377E:  BSF    FF2.7
3780:  MOVLB  2
3782:  BRA    3764
3784:  CLRF   16
3786:  BTFSC  FF2.7
3788:  BSF    16.7
378A:  BCF    FF2.7
378C:  MOVFF  25D,29A
3790:  MOVLB  0
3792:  CALL   024E
3796:  BTFSC  16.7
3798:  BSF    FF2.7
....................                     } 
....................                                                } 
....................                                                 
....................                    else  { 
379A:  BRA    3912
379C:  MOVLB  2
379E:  CLRF   16
37A0:  BTFSC  FF2.7
37A2:  BSF    16.7
37A4:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<=time2){ 
37A6:  MOVFF  25E,299
37AA:  MOVFF  25D,298
37AE:  CLRF   x9B
37B0:  MOVFF  1A,29A
37B4:  MOVLB  0
37B6:  CALL   0276
37BA:  BTFSC  16.7
37BC:  BSF    FF2.7
37BE:  MOVFF  02,28B
37C2:  MOVFF  01,28A
37C6:  MOVLB  2
37C8:  MOVF   02,W
37CA:  SUBWF  x5A,W
37CC:  BNC   385C
37CE:  BNZ   37D6
37D0:  MOVF   x8A,W
37D2:  SUBWF  x59,W
37D4:  BNC   385C
....................                                rb2=1; 
37D6:  BSF    F81.2
....................                                rb3=1; 
37D8:  BSF    F81.3
....................                                delay_ms(quantum); 
37DA:  MOVFF  25E,28A
37DE:  INCF   x8A,F
37E0:  DECF   x8A,F
37E2:  BTFSC  FD8.2
37E4:  BRA    3800
37E6:  CLRF   16
37E8:  BTFSC  FF2.7
37EA:  BSF    16.7
37EC:  BCF    FF2.7
37EE:  MOVLW  FF
37F0:  MOVWF  x9A
37F2:  MOVLB  0
37F4:  CALL   024E
37F8:  BTFSC  16.7
37FA:  BSF    FF2.7
37FC:  MOVLB  2
37FE:  BRA    37E0
3800:  CLRF   16
3802:  BTFSC  FF2.7
3804:  BSF    16.7
3806:  BCF    FF2.7
3808:  MOVFF  25D,29A
380C:  MOVLB  0
380E:  CALL   024E
3812:  BTFSC  16.7
3814:  BSF    FF2.7
....................                                rb2=0; 
3816:  BCF    F81.2
....................                                rb3=0; 
3818:  BCF    F81.3
....................                                delay_ms(quantum); 
381A:  MOVFF  25E,28A
381E:  MOVLB  2
3820:  INCF   x8A,F
3822:  DECF   x8A,F
3824:  BTFSC  FD8.2
3826:  BRA    3842
3828:  CLRF   16
382A:  BTFSC  FF2.7
382C:  BSF    16.7
382E:  BCF    FF2.7
3830:  MOVLW  FF
3832:  MOVWF  x9A
3834:  MOVLB  0
3836:  CALL   024E
383A:  BTFSC  16.7
383C:  BSF    FF2.7
383E:  MOVLB  2
3840:  BRA    3822
3842:  CLRF   16
3844:  BTFSC  FF2.7
3846:  BSF    16.7
3848:  BCF    FF2.7
384A:  MOVFF  25D,29A
384E:  MOVLB  0
3850:  CALL   024E
3854:  BTFSC  16.7
3856:  BSF    FF2.7
....................                                                      }  
....................                              else{ 
3858:  BRA    3912
385A:  MOVLB  2
385C:  CLRF   16
385E:  BTFSC  FF2.7
3860:  BSF    16.7
3862:  BCF    FF2.7
....................                                         if(quantum*contador3<=time3){ 
3864:  MOVFF  25E,299
3868:  MOVFF  25D,298
386C:  CLRF   x9B
386E:  MOVFF  1B,29A
3872:  MOVLB  0
3874:  CALL   0276
3878:  BTFSC  16.7
387A:  BSF    FF2.7
387C:  MOVFF  02,28B
3880:  MOVFF  01,28A
3884:  MOVLB  2
3886:  MOVF   02,W
3888:  SUBWF  x5C,W
388A:  BNC   3914
388C:  BNZ   3894
388E:  MOVF   x8A,W
3890:  SUBWF  x5B,W
3892:  BNC   3914
....................                                rb3=1; 
3894:  BSF    F81.3
....................                                delay_ms(quantum); 
3896:  MOVFF  25E,28A
389A:  INCF   x8A,F
389C:  DECF   x8A,F
389E:  BTFSC  FD8.2
38A0:  BRA    38BC
38A2:  CLRF   16
38A4:  BTFSC  FF2.7
38A6:  BSF    16.7
38A8:  BCF    FF2.7
38AA:  MOVLW  FF
38AC:  MOVWF  x9A
38AE:  MOVLB  0
38B0:  CALL   024E
38B4:  BTFSC  16.7
38B6:  BSF    FF2.7
38B8:  MOVLB  2
38BA:  BRA    389C
38BC:  CLRF   16
38BE:  BTFSC  FF2.7
38C0:  BSF    16.7
38C2:  BCF    FF2.7
38C4:  MOVFF  25D,29A
38C8:  MOVLB  0
38CA:  CALL   024E
38CE:  BTFSC  16.7
38D0:  BSF    FF2.7
....................                                rb3=0; 
38D2:  BCF    F81.3
....................                                
....................                                delay_ms(quantum); 
38D4:  MOVFF  25E,28A
38D8:  MOVLB  2
38DA:  INCF   x8A,F
38DC:  DECF   x8A,F
38DE:  BTFSC  FD8.2
38E0:  BRA    38FC
38E2:  CLRF   16
38E4:  BTFSC  FF2.7
38E6:  BSF    16.7
38E8:  BCF    FF2.7
38EA:  MOVLW  FF
38EC:  MOVWF  x9A
38EE:  MOVLB  0
38F0:  CALL   024E
38F4:  BTFSC  16.7
38F6:  BSF    FF2.7
38F8:  MOVLB  2
38FA:  BRA    38DC
38FC:  CLRF   16
38FE:  BTFSC  FF2.7
3900:  BSF    16.7
3902:  BCF    FF2.7
3904:  MOVFF  25D,29A
3908:  MOVLB  0
390A:  CALL   024E
390E:  BTFSC  16.7
3910:  BSF    FF2.7
3912:  MOVLB  2
....................                                                      }                
....................                                                       
....................                                                      } 
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
3914:  MOVF   19,W
3916:  SUBLW  0A
3918:  BNZ   3922
391A:  MOVLB  0
391C:  CALL   1140
3920:  MOVLB  2
....................                  if(contador3==20 )do_proceso3(); 
3922:  MOVF   1B,W
3924:  SUBLW  14
3926:  BNZ   3930
3928:  MOVLB  0
392A:  CALL   11F0
392E:  MOVLB  2
....................                  if(contador2==16 )do_proceso2(); 
3930:  MOVF   1A,W
3932:  SUBLW  10
3934:  BNZ   393E
3936:  MOVLB  0
3938:  CALL   1198
393C:  MOVLB  2
....................                   contador1++; 
393E:  INCF   19,F
....................                   contador2++; 
3940:  INCF   1A,F
....................  
....................                          }///// 
3942:  INCF   1B,F
3944:  MOVLB  0
3946:  BRA    360C
....................                      } 
....................                  /// 
....................                  else  {/////////////// 
3948:  BRA    3BCC
....................                         for (contador1=copia1;contador1<=10;contador1++){ 
394A:  MOVFF  1C,19
394E:  MOVF   19,W
3950:  SUBLW  0A
3952:  BTFSS  FD8.0
3954:  BRA    3BCC
....................                       copia1=contador1; 
3956:  MOVFF  19,1C
395A:  CLRF   16
395C:  BTFSC  FF2.7
395E:  BSF    16.7
3960:  BCF    FF2.7
....................                     if(quantum*contador2<=time2){ 
3962:  MOVFF  25E,299
3966:  MOVFF  25D,298
396A:  MOVLB  2
396C:  CLRF   x9B
396E:  MOVFF  1A,29A
3972:  MOVLB  0
3974:  CALL   0276
3978:  BTFSC  16.7
397A:  BSF    FF2.7
397C:  MOVFF  02,28B
3980:  MOVFF  01,28A
3984:  MOVLB  2
3986:  MOVF   02,W
3988:  SUBWF  x5A,W
398A:  BTFSS  FD8.0
398C:  BRA    3AE0
398E:  BNZ   3998
3990:  MOVF   x8A,W
3992:  SUBWF  x59,W
3994:  BTFSS  FD8.0
3996:  BRA    3AE0
3998:  CLRF   16
399A:  BTFSC  FF2.7
399C:  BSF    16.7
399E:  BCF    FF2.7
....................                     if(quantum*contador3<=time3){ 
39A0:  MOVFF  25E,299
39A4:  MOVFF  25D,298
39A8:  CLRF   x9B
39AA:  MOVFF  1B,29A
39AE:  MOVLB  0
39B0:  CALL   0276
39B4:  BTFSC  16.7
39B6:  BSF    FF2.7
39B8:  MOVFF  02,28B
39BC:  MOVFF  01,28A
39C0:  MOVLB  2
39C2:  MOVF   02,W
39C4:  SUBWF  x5C,W
39C6:  BNC   3A5A
39C8:  BNZ   39D0
39CA:  MOVF   x8A,W
39CC:  SUBWF  x5B,W
39CE:  BNC   3A5A
....................                              rb2=1; 
39D0:  BSF    F81.2
....................                              rb3=1; 
39D2:  BSF    F81.3
....................                              rb1=1; 
39D4:  BSF    F81.1
....................                              delay_ms(quantum); 
39D6:  MOVFF  25E,28A
39DA:  INCF   x8A,F
39DC:  DECF   x8A,F
39DE:  BTFSC  FD8.2
39E0:  BRA    39FC
39E2:  CLRF   16
39E4:  BTFSC  FF2.7
39E6:  BSF    16.7
39E8:  BCF    FF2.7
39EA:  MOVLW  FF
39EC:  MOVWF  x9A
39EE:  MOVLB  0
39F0:  CALL   024E
39F4:  BTFSC  16.7
39F6:  BSF    FF2.7
39F8:  MOVLB  2
39FA:  BRA    39DC
39FC:  CLRF   16
39FE:  BTFSC  FF2.7
3A00:  BSF    16.7
3A02:  BCF    FF2.7
3A04:  MOVFF  25D,29A
3A08:  MOVLB  0
3A0A:  CALL   024E
3A0E:  BTFSC  16.7
3A10:  BSF    FF2.7
....................                              rb2=0; 
3A12:  BCF    F81.2
....................                              rb3=0; 
3A14:  BCF    F81.3
....................                              rb1=0; 
3A16:  BCF    F81.1
....................                              delay_ms(quantum); 
3A18:  MOVFF  25E,28A
3A1C:  MOVLB  2
3A1E:  INCF   x8A,F
3A20:  DECF   x8A,F
3A22:  BTFSC  FD8.2
3A24:  BRA    3A40
3A26:  CLRF   16
3A28:  BTFSC  FF2.7
3A2A:  BSF    16.7
3A2C:  BCF    FF2.7
3A2E:  MOVLW  FF
3A30:  MOVWF  x9A
3A32:  MOVLB  0
3A34:  CALL   024E
3A38:  BTFSC  16.7
3A3A:  BSF    FF2.7
3A3C:  MOVLB  2
3A3E:  BRA    3A20
3A40:  CLRF   16
3A42:  BTFSC  FF2.7
3A44:  BSF    16.7
3A46:  BCF    FF2.7
3A48:  MOVFF  25D,29A
3A4C:  MOVLB  0
3A4E:  CALL   024E
3A52:  BTFSC  16.7
3A54:  BSF    FF2.7
....................                     } 
....................                     else{    
3A56:  BRA    3ADC
3A58:  MOVLB  2
....................                              rb2=1; 
3A5A:  BSF    F81.2
....................                              rb1=1; 
3A5C:  BSF    F81.1
....................                              delay_ms(quantum); 
3A5E:  MOVFF  25E,28A
3A62:  INCF   x8A,F
3A64:  DECF   x8A,F
3A66:  BTFSC  FD8.2
3A68:  BRA    3A84
3A6A:  CLRF   16
3A6C:  BTFSC  FF2.7
3A6E:  BSF    16.7
3A70:  BCF    FF2.7
3A72:  MOVLW  FF
3A74:  MOVWF  x9A
3A76:  MOVLB  0
3A78:  CALL   024E
3A7C:  BTFSC  16.7
3A7E:  BSF    FF2.7
3A80:  MOVLB  2
3A82:  BRA    3A64
3A84:  CLRF   16
3A86:  BTFSC  FF2.7
3A88:  BSF    16.7
3A8A:  BCF    FF2.7
3A8C:  MOVFF  25D,29A
3A90:  MOVLB  0
3A92:  CALL   024E
3A96:  BTFSC  16.7
3A98:  BSF    FF2.7
....................                              rb2=0; 
3A9A:  BCF    F81.2
....................                              rb1=0; 
3A9C:  BCF    F81.1
....................                              delay_ms(quantum); 
3A9E:  MOVFF  25E,28A
3AA2:  MOVLB  2
3AA4:  INCF   x8A,F
3AA6:  DECF   x8A,F
3AA8:  BTFSC  FD8.2
3AAA:  BRA    3AC6
3AAC:  CLRF   16
3AAE:  BTFSC  FF2.7
3AB0:  BSF    16.7
3AB2:  BCF    FF2.7
3AB4:  MOVLW  FF
3AB6:  MOVWF  x9A
3AB8:  MOVLB  0
3ABA:  CALL   024E
3ABE:  BTFSC  16.7
3AC0:  BSF    FF2.7
3AC2:  MOVLB  2
3AC4:  BRA    3AA6
3AC6:  CLRF   16
3AC8:  BTFSC  FF2.7
3ACA:  BSF    16.7
3ACC:  BCF    FF2.7
3ACE:  MOVFF  25D,29A
3AD2:  MOVLB  0
3AD4:  CALL   024E
3AD8:  BTFSC  16.7
3ADA:  BSF    FF2.7
....................                     } 
....................                                                } 
....................                                                 
....................                    else  {       if(quantum*contador1<=time1){  
3ADC:  BRA    3B96
3ADE:  MOVLB  2
3AE0:  CLRF   16
3AE2:  BTFSC  FF2.7
3AE4:  BSF    16.7
3AE6:  BCF    FF2.7
3AE8:  MOVFF  25E,299
3AEC:  MOVFF  25D,298
3AF0:  CLRF   x9B
3AF2:  MOVFF  19,29A
3AF6:  MOVLB  0
3AF8:  CALL   0276
3AFC:  BTFSC  16.7
3AFE:  BSF    FF2.7
3B00:  MOVFF  02,28B
3B04:  MOVFF  01,28A
3B08:  MOVLB  2
3B0A:  MOVF   02,W
3B0C:  SUBWF  x58,W
3B0E:  BNC   3B98
3B10:  BNZ   3B18
3B12:  MOVF   x8A,W
3B14:  SUBWF  x57,W
3B16:  BNC   3B98
....................                                rb1=1; 
3B18:  BSF    F81.1
....................                                delay_ms(quantum); 
3B1A:  MOVFF  25E,28A
3B1E:  INCF   x8A,F
3B20:  DECF   x8A,F
3B22:  BTFSC  FD8.2
3B24:  BRA    3B40
3B26:  CLRF   16
3B28:  BTFSC  FF2.7
3B2A:  BSF    16.7
3B2C:  BCF    FF2.7
3B2E:  MOVLW  FF
3B30:  MOVWF  x9A
3B32:  MOVLB  0
3B34:  CALL   024E
3B38:  BTFSC  16.7
3B3A:  BSF    FF2.7
3B3C:  MOVLB  2
3B3E:  BRA    3B20
3B40:  CLRF   16
3B42:  BTFSC  FF2.7
3B44:  BSF    16.7
3B46:  BCF    FF2.7
3B48:  MOVFF  25D,29A
3B4C:  MOVLB  0
3B4E:  CALL   024E
3B52:  BTFSC  16.7
3B54:  BSF    FF2.7
....................                                rb1=0;                            
3B56:  BCF    F81.1
....................                                delay_ms(quantum);  }     
3B58:  MOVFF  25E,28A
3B5C:  MOVLB  2
3B5E:  INCF   x8A,F
3B60:  DECF   x8A,F
3B62:  BTFSC  FD8.2
3B64:  BRA    3B80
3B66:  CLRF   16
3B68:  BTFSC  FF2.7
3B6A:  BSF    16.7
3B6C:  BCF    FF2.7
3B6E:  MOVLW  FF
3B70:  MOVWF  x9A
3B72:  MOVLB  0
3B74:  CALL   024E
3B78:  BTFSC  16.7
3B7A:  BSF    FF2.7
3B7C:  MOVLB  2
3B7E:  BRA    3B60
3B80:  CLRF   16
3B82:  BTFSC  FF2.7
3B84:  BSF    16.7
3B86:  BCF    FF2.7
3B88:  MOVFF  25D,29A
3B8C:  MOVLB  0
3B8E:  CALL   024E
3B92:  BTFSC  16.7
3B94:  BSF    FF2.7
3B96:  MOVLB  2
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
3B98:  MOVF   19,W
3B9A:  SUBLW  0A
3B9C:  BNZ   3BA6
3B9E:  MOVLB  0
3BA0:  CALL   1140
3BA4:  MOVLB  2
....................                  if(contador3==20 )do_proceso3(); 
3BA6:  MOVF   1B,W
3BA8:  SUBLW  14
3BAA:  BNZ   3BB4
3BAC:  MOVLB  0
3BAE:  CALL   11F0
3BB2:  MOVLB  2
....................                  if(contador2==16 )do_proceso2(); 
3BB4:  MOVF   1A,W
3BB6:  SUBLW  10
3BB8:  BNZ   3BC2
3BBA:  MOVLB  0
3BBC:  CALL   1198
3BC0:  MOVLB  2
....................                   contador3++; 
3BC2:  INCF   1B,F
....................                   contador2++; 
3BC4:  INCF   1A,F
....................  
....................                          }///// 
3BC6:  INCF   19,F
3BC8:  MOVLB  0
3BCA:  BRA    394E
....................                   
....................                   
....................                  } 
....................                           
....................                          
....................                   
....................                                        } 
....................                } ///// 
....................                 
....................                /// 
....................                else{////////////////////////////kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk 
3BCC:  BRA    429C
....................                     for (contador2=1;contador2<=16;contador2++){ 
3BCE:  MOVLW  01
3BD0:  MOVWF  1A
3BD2:  MOVF   1A,W
3BD4:  SUBLW  10
3BD6:  BTFSS  FD8.0
3BD8:  BRA    3D86
....................                     copia2=contador2; 
3BDA:  MOVFF  1A,1D
3BDE:  CLRF   16
3BE0:  BTFSC  FF2.7
3BE2:  BSF    16.7
3BE4:  BCF    FF2.7
....................                     if(quantum*contador3<time3){ 
3BE6:  MOVFF  25E,299
3BEA:  MOVFF  25D,298
3BEE:  MOVLB  2
3BF0:  CLRF   x9B
3BF2:  MOVFF  1B,29A
3BF6:  MOVLB  0
3BF8:  CALL   0276
3BFC:  BTFSC  16.7
3BFE:  BSF    FF2.7
3C00:  MOVFF  02,28B
3C04:  MOVFF  01,28A
3C08:  MOVLB  2
3C0A:  MOVF   02,W
3C0C:  SUBWF  x5C,W
3C0E:  BNC   3C9E
3C10:  BNZ   3C18
3C12:  MOVF   x5B,W
3C14:  SUBWF  x8A,W
3C16:  BC    3C9E
....................                       
....................                       rb3=1; 
3C18:  BSF    F81.3
....................                       rb2=1; 
3C1A:  BSF    F81.2
....................                       delay_ms(quantum); 
3C1C:  MOVFF  25E,28A
3C20:  INCF   x8A,F
3C22:  DECF   x8A,F
3C24:  BTFSC  FD8.2
3C26:  BRA    3C42
3C28:  CLRF   16
3C2A:  BTFSC  FF2.7
3C2C:  BSF    16.7
3C2E:  BCF    FF2.7
3C30:  MOVLW  FF
3C32:  MOVWF  x9A
3C34:  MOVLB  0
3C36:  CALL   024E
3C3A:  BTFSC  16.7
3C3C:  BSF    FF2.7
3C3E:  MOVLB  2
3C40:  BRA    3C22
3C42:  CLRF   16
3C44:  BTFSC  FF2.7
3C46:  BSF    16.7
3C48:  BCF    FF2.7
3C4A:  MOVFF  25D,29A
3C4E:  MOVLB  0
3C50:  CALL   024E
3C54:  BTFSC  16.7
3C56:  BSF    FF2.7
....................                       rb3=0; 
3C58:  BCF    F81.3
....................                       rb2=0; 
3C5A:  BCF    F81.2
....................                       
....................                       delay_ms(quantum); 
3C5C:  MOVFF  25E,28A
3C60:  MOVLB  2
3C62:  INCF   x8A,F
3C64:  DECF   x8A,F
3C66:  BTFSC  FD8.2
3C68:  BRA    3C84
3C6A:  CLRF   16
3C6C:  BTFSC  FF2.7
3C6E:  BSF    16.7
3C70:  BCF    FF2.7
3C72:  MOVLW  FF
3C74:  MOVWF  x9A
3C76:  MOVLB  0
3C78:  CALL   024E
3C7C:  BTFSC  16.7
3C7E:  BSF    FF2.7
3C80:  MOVLB  2
3C82:  BRA    3C64
3C84:  CLRF   16
3C86:  BTFSC  FF2.7
3C88:  BSF    16.7
3C8A:  BCF    FF2.7
3C8C:  MOVFF  25D,29A
3C90:  MOVLB  0
3C92:  CALL   024E
3C96:  BTFSC  16.7
3C98:  BSF    FF2.7
....................                                                } 
....................                                                 
....................                    else  { 
3C9A:  BRA    3D54
3C9C:  MOVLB  2
3C9E:  CLRF   16
3CA0:  BTFSC  FF2.7
3CA2:  BSF    16.7
3CA4:  BCF    FF2.7
....................                     
....................                           if(quantum*contador2<=time2){ 
3CA6:  MOVFF  25E,299
3CAA:  MOVFF  25D,298
3CAE:  CLRF   x9B
3CB0:  MOVFF  1A,29A
3CB4:  MOVLB  0
3CB6:  CALL   0276
3CBA:  BTFSC  16.7
3CBC:  BSF    FF2.7
3CBE:  MOVFF  02,28B
3CC2:  MOVFF  01,28A
3CC6:  MOVLB  2
3CC8:  MOVF   02,W
3CCA:  SUBWF  x5A,W
3CCC:  BNC   3D56
3CCE:  BNZ   3CD6
3CD0:  MOVF   x8A,W
3CD2:  SUBWF  x59,W
3CD4:  BNC   3D56
....................                                 
....................                                rb2=1; 
3CD6:  BSF    F81.2
....................                                delay_ms(quantum); 
3CD8:  MOVFF  25E,28A
3CDC:  INCF   x8A,F
3CDE:  DECF   x8A,F
3CE0:  BTFSC  FD8.2
3CE2:  BRA    3CFE
3CE4:  CLRF   16
3CE6:  BTFSC  FF2.7
3CE8:  BSF    16.7
3CEA:  BCF    FF2.7
3CEC:  MOVLW  FF
3CEE:  MOVWF  x9A
3CF0:  MOVLB  0
3CF2:  CALL   024E
3CF6:  BTFSC  16.7
3CF8:  BSF    FF2.7
3CFA:  MOVLB  2
3CFC:  BRA    3CDE
3CFE:  CLRF   16
3D00:  BTFSC  FF2.7
3D02:  BSF    16.7
3D04:  BCF    FF2.7
3D06:  MOVFF  25D,29A
3D0A:  MOVLB  0
3D0C:  CALL   024E
3D10:  BTFSC  16.7
3D12:  BSF    FF2.7
....................                                rb2=0; 
3D14:  BCF    F81.2
....................                                delay_ms(quantum); 
3D16:  MOVFF  25E,28A
3D1A:  MOVLB  2
3D1C:  INCF   x8A,F
3D1E:  DECF   x8A,F
3D20:  BTFSC  FD8.2
3D22:  BRA    3D3E
3D24:  CLRF   16
3D26:  BTFSC  FF2.7
3D28:  BSF    16.7
3D2A:  BCF    FF2.7
3D2C:  MOVLW  FF
3D2E:  MOVWF  x9A
3D30:  MOVLB  0
3D32:  CALL   024E
3D36:  BTFSC  16.7
3D38:  BSF    FF2.7
3D3A:  MOVLB  2
3D3C:  BRA    3D1E
3D3E:  CLRF   16
3D40:  BTFSC  FF2.7
3D42:  BSF    16.7
3D44:  BCF    FF2.7
3D46:  MOVFF  25D,29A
3D4A:  MOVLB  0
3D4C:  CALL   024E
3D50:  BTFSC  16.7
3D52:  BSF    FF2.7
3D54:  MOVLB  2
....................                                                      }  
....................                          } 
....................  
....................                  if(contador2==16 ) do_proceso2(); 
3D56:  MOVF   1A,W
3D58:  SUBLW  10
3D5A:  BNZ   3D64
3D5C:  MOVLB  0
3D5E:  CALL   1198
3D62:  MOVLB  2
....................                  if(contador3==20 )do_proceso3(); 
3D64:  MOVF   1B,W
3D66:  SUBLW  14
3D68:  BNZ   3D72
3D6A:  MOVLB  0
3D6C:  CALL   11F0
3D70:  MOVLB  2
....................                   
....................                  if(tecla_pulsada=='1'){ 
3D72:  MOVF   17,W
3D74:  SUBLW  31
3D76:  BNZ   3D7E
....................                       break; 
3D78:  MOVLB  0
3D7A:  BRA    3D86
3D7C:  MOVLB  2
....................                   } 
....................                   contador3++; 
3D7E:  INCF   1B,F
....................  
....................                  } 
3D80:  INCF   1A,F
3D82:  MOVLB  0
3D84:  BRA    3BD2
....................                  if(tecla_pulsada=='1'){ 
3D86:  MOVF   17,W
3D88:  SUBLW  31
3D8A:  BTFSS  FD8.2
3D8C:  BRA    429C
....................                          if(copia3<=10){ 
3D8E:  MOVF   1E,W
3D90:  SUBLW  0A
3D92:  BTFSS  FD8.0
3D94:  BRA    401A
....................                          for (contador2=copia2;contador2<=16;contador2++){ 
3D96:  MOVFF  1D,1A
3D9A:  MOVF   1A,W
3D9C:  SUBLW  10
3D9E:  BTFSS  FD8.0
3DA0:  BRA    4018
....................                               copia2=contador2; 
3DA2:  MOVFF  1A,1D
3DA6:  CLRF   16
3DA8:  BTFSC  FF2.7
3DAA:  BSF    16.7
3DAC:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
3DAE:  MOVFF  25E,299
3DB2:  MOVFF  25D,298
3DB6:  MOVLB  2
3DB8:  CLRF   x9B
3DBA:  MOVFF  19,29A
3DBE:  MOVLB  0
3DC0:  CALL   0276
3DC4:  BTFSC  16.7
3DC6:  BSF    FF2.7
3DC8:  MOVFF  02,28B
3DCC:  MOVFF  01,28A
3DD0:  MOVLB  2
3DD2:  MOVF   02,W
3DD4:  SUBWF  x58,W
3DD6:  BTFSS  FD8.0
3DD8:  BRA    3F2C
3DDA:  BNZ   3DE4
3DDC:  MOVF   x8A,W
3DDE:  SUBWF  x57,W
3DE0:  BTFSS  FD8.0
3DE2:  BRA    3F2C
3DE4:  CLRF   16
3DE6:  BTFSC  FF2.7
3DE8:  BSF    16.7
3DEA:  BCF    FF2.7
....................                     if(quantum*contador3<=time3){ 
3DEC:  MOVFF  25E,299
3DF0:  MOVFF  25D,298
3DF4:  CLRF   x9B
3DF6:  MOVFF  1B,29A
3DFA:  MOVLB  0
3DFC:  CALL   0276
3E00:  BTFSC  16.7
3E02:  BSF    FF2.7
3E04:  MOVFF  02,28B
3E08:  MOVFF  01,28A
3E0C:  MOVLB  2
3E0E:  MOVF   02,W
3E10:  SUBWF  x5C,W
3E12:  BNC   3EA6
3E14:  BNZ   3E1C
3E16:  MOVF   x8A,W
3E18:  SUBWF  x5B,W
3E1A:  BNC   3EA6
....................                              rb2=1; 
3E1C:  BSF    F81.2
....................                              rb3=1; 
3E1E:  BSF    F81.3
....................                              rb1=1; 
3E20:  BSF    F81.1
....................                              delay_ms(quantum); 
3E22:  MOVFF  25E,28A
3E26:  INCF   x8A,F
3E28:  DECF   x8A,F
3E2A:  BTFSC  FD8.2
3E2C:  BRA    3E48
3E2E:  CLRF   16
3E30:  BTFSC  FF2.7
3E32:  BSF    16.7
3E34:  BCF    FF2.7
3E36:  MOVLW  FF
3E38:  MOVWF  x9A
3E3A:  MOVLB  0
3E3C:  CALL   024E
3E40:  BTFSC  16.7
3E42:  BSF    FF2.7
3E44:  MOVLB  2
3E46:  BRA    3E28
3E48:  CLRF   16
3E4A:  BTFSC  FF2.7
3E4C:  BSF    16.7
3E4E:  BCF    FF2.7
3E50:  MOVFF  25D,29A
3E54:  MOVLB  0
3E56:  CALL   024E
3E5A:  BTFSC  16.7
3E5C:  BSF    FF2.7
....................                              rb2=0; 
3E5E:  BCF    F81.2
....................                              rb3=0; 
3E60:  BCF    F81.3
....................                              rb1=0; 
3E62:  BCF    F81.1
....................                              delay_ms(quantum); 
3E64:  MOVFF  25E,28A
3E68:  MOVLB  2
3E6A:  INCF   x8A,F
3E6C:  DECF   x8A,F
3E6E:  BTFSC  FD8.2
3E70:  BRA    3E8C
3E72:  CLRF   16
3E74:  BTFSC  FF2.7
3E76:  BSF    16.7
3E78:  BCF    FF2.7
3E7A:  MOVLW  FF
3E7C:  MOVWF  x9A
3E7E:  MOVLB  0
3E80:  CALL   024E
3E84:  BTFSC  16.7
3E86:  BSF    FF2.7
3E88:  MOVLB  2
3E8A:  BRA    3E6C
3E8C:  CLRF   16
3E8E:  BTFSC  FF2.7
3E90:  BSF    16.7
3E92:  BCF    FF2.7
3E94:  MOVFF  25D,29A
3E98:  MOVLB  0
3E9A:  CALL   024E
3E9E:  BTFSC  16.7
3EA0:  BSF    FF2.7
....................                     } 
....................                     else{   
3EA2:  BRA    3F28
3EA4:  MOVLB  2
....................                              rb2=1; 
3EA6:  BSF    F81.2
....................                              rb1=1; 
3EA8:  BSF    F81.1
....................                              delay_ms(quantum); 
3EAA:  MOVFF  25E,28A
3EAE:  INCF   x8A,F
3EB0:  DECF   x8A,F
3EB2:  BTFSC  FD8.2
3EB4:  BRA    3ED0
3EB6:  CLRF   16
3EB8:  BTFSC  FF2.7
3EBA:  BSF    16.7
3EBC:  BCF    FF2.7
3EBE:  MOVLW  FF
3EC0:  MOVWF  x9A
3EC2:  MOVLB  0
3EC4:  CALL   024E
3EC8:  BTFSC  16.7
3ECA:  BSF    FF2.7
3ECC:  MOVLB  2
3ECE:  BRA    3EB0
3ED0:  CLRF   16
3ED2:  BTFSC  FF2.7
3ED4:  BSF    16.7
3ED6:  BCF    FF2.7
3ED8:  MOVFF  25D,29A
3EDC:  MOVLB  0
3EDE:  CALL   024E
3EE2:  BTFSC  16.7
3EE4:  BSF    FF2.7
....................                              rb2=0; 
3EE6:  BCF    F81.2
....................                              rb1=0; 
3EE8:  BCF    F81.1
....................                              delay_ms(quantum); 
3EEA:  MOVFF  25E,28A
3EEE:  MOVLB  2
3EF0:  INCF   x8A,F
3EF2:  DECF   x8A,F
3EF4:  BTFSC  FD8.2
3EF6:  BRA    3F12
3EF8:  CLRF   16
3EFA:  BTFSC  FF2.7
3EFC:  BSF    16.7
3EFE:  BCF    FF2.7
3F00:  MOVLW  FF
3F02:  MOVWF  x9A
3F04:  MOVLB  0
3F06:  CALL   024E
3F0A:  BTFSC  16.7
3F0C:  BSF    FF2.7
3F0E:  MOVLB  2
3F10:  BRA    3EF2
3F12:  CLRF   16
3F14:  BTFSC  FF2.7
3F16:  BSF    16.7
3F18:  BCF    FF2.7
3F1A:  MOVFF  25D,29A
3F1E:  MOVLB  0
3F20:  CALL   024E
3F24:  BTFSC  16.7
3F26:  BSF    FF2.7
....................                     } 
....................                                                } 
....................                                                 
....................                    else  { 
3F28:  BRA    3FE2
3F2A:  MOVLB  2
3F2C:  CLRF   16
3F2E:  BTFSC  FF2.7
3F30:  BSF    16.7
3F32:  BCF    FF2.7
....................                               if(quantum*contador2<=time2){ 
3F34:  MOVFF  25E,299
3F38:  MOVFF  25D,298
3F3C:  CLRF   x9B
3F3E:  MOVFF  1A,29A
3F42:  MOVLB  0
3F44:  CALL   0276
3F48:  BTFSC  16.7
3F4A:  BSF    FF2.7
3F4C:  MOVFF  02,28B
3F50:  MOVFF  01,28A
3F54:  MOVLB  2
3F56:  MOVF   02,W
3F58:  SUBWF  x5A,W
3F5A:  BNC   3FE4
3F5C:  BNZ   3F64
3F5E:  MOVF   x8A,W
3F60:  SUBWF  x59,W
3F62:  BNC   3FE4
....................                                rb2=1; 
3F64:  BSF    F81.2
....................                                delay_ms(quantum); 
3F66:  MOVFF  25E,28A
3F6A:  INCF   x8A,F
3F6C:  DECF   x8A,F
3F6E:  BTFSC  FD8.2
3F70:  BRA    3F8C
3F72:  CLRF   16
3F74:  BTFSC  FF2.7
3F76:  BSF    16.7
3F78:  BCF    FF2.7
3F7A:  MOVLW  FF
3F7C:  MOVWF  x9A
3F7E:  MOVLB  0
3F80:  CALL   024E
3F84:  BTFSC  16.7
3F86:  BSF    FF2.7
3F88:  MOVLB  2
3F8A:  BRA    3F6C
3F8C:  CLRF   16
3F8E:  BTFSC  FF2.7
3F90:  BSF    16.7
3F92:  BCF    FF2.7
3F94:  MOVFF  25D,29A
3F98:  MOVLB  0
3F9A:  CALL   024E
3F9E:  BTFSC  16.7
3FA0:  BSF    FF2.7
....................                                rb2=0; 
3FA2:  BCF    F81.2
....................                                delay_ms(quantum); 
3FA4:  MOVFF  25E,28A
3FA8:  MOVLB  2
3FAA:  INCF   x8A,F
3FAC:  DECF   x8A,F
3FAE:  BTFSC  FD8.2
3FB0:  BRA    3FCC
3FB2:  CLRF   16
3FB4:  BTFSC  FF2.7
3FB6:  BSF    16.7
3FB8:  BCF    FF2.7
3FBA:  MOVLW  FF
3FBC:  MOVWF  x9A
3FBE:  MOVLB  0
3FC0:  CALL   024E
3FC4:  BTFSC  16.7
3FC6:  BSF    FF2.7
3FC8:  MOVLB  2
3FCA:  BRA    3FAC
3FCC:  CLRF   16
3FCE:  BTFSC  FF2.7
3FD0:  BSF    16.7
3FD2:  BCF    FF2.7
3FD4:  MOVFF  25D,29A
3FD8:  MOVLB  0
3FDA:  CALL   024E
3FDE:  BTFSC  16.7
3FE0:  BSF    FF2.7
3FE2:  MOVLB  2
....................                                                      }                
....................                                                       
....................                                                    
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
3FE4:  MOVF   19,W
3FE6:  SUBLW  0A
3FE8:  BNZ   3FF2
3FEA:  MOVLB  0
3FEC:  CALL   1140
3FF0:  MOVLB  2
....................                  if(contador3==20 )do_proceso3(); 
3FF2:  MOVF   1B,W
3FF4:  SUBLW  14
3FF6:  BNZ   4000
3FF8:  MOVLB  0
3FFA:  CALL   11F0
3FFE:  MOVLB  2
....................                  if(contador2==16 )do_proceso2(); 
4000:  MOVF   1A,W
4002:  SUBLW  10
4004:  BNZ   400E
4006:  MOVLB  0
4008:  CALL   1198
400C:  MOVLB  2
....................                   contador3++; 
400E:  INCF   1B,F
....................                   contador1++; 
4010:  INCF   19,F
....................  
....................                          }///// 
4012:  INCF   1A,F
4014:  MOVLB  0
4016:  BRA    3D9A
....................                      } 
....................                  /// 
....................                  else  { 
4018:  BRA    429C
....................                         for (contador2=copia2;contador2<=16;contador2++){ 
401A:  MOVFF  1D,1A
401E:  MOVF   1A,W
4020:  SUBLW  10
4022:  BTFSS  FD8.0
4024:  BRA    429C
....................                       copia2=contador2; 
4026:  MOVFF  1A,1D
402A:  CLRF   16
402C:  BTFSC  FF2.7
402E:  BSF    16.7
4030:  BCF    FF2.7
....................                     if(quantum*contador1<=time1){ 
4032:  MOVFF  25E,299
4036:  MOVFF  25D,298
403A:  MOVLB  2
403C:  CLRF   x9B
403E:  MOVFF  19,29A
4042:  MOVLB  0
4044:  CALL   0276
4048:  BTFSC  16.7
404A:  BSF    FF2.7
404C:  MOVFF  02,28B
4050:  MOVFF  01,28A
4054:  MOVLB  2
4056:  MOVF   02,W
4058:  SUBWF  x58,W
405A:  BTFSS  FD8.0
405C:  BRA    41B0
405E:  BNZ   4068
4060:  MOVF   x8A,W
4062:  SUBWF  x57,W
4064:  BTFSS  FD8.0
4066:  BRA    41B0
4068:  CLRF   16
406A:  BTFSC  FF2.7
406C:  BSF    16.7
406E:  BCF    FF2.7
....................                     if(quantum*contador3<=time3){ 
4070:  MOVFF  25E,299
4074:  MOVFF  25D,298
4078:  CLRF   x9B
407A:  MOVFF  1B,29A
407E:  MOVLB  0
4080:  CALL   0276
4084:  BTFSC  16.7
4086:  BSF    FF2.7
4088:  MOVFF  02,28B
408C:  MOVFF  01,28A
4090:  MOVLB  2
4092:  MOVF   02,W
4094:  SUBWF  x5C,W
4096:  BNC   412A
4098:  BNZ   40A0
409A:  MOVF   x8A,W
409C:  SUBWF  x5B,W
409E:  BNC   412A
....................                              rb2=1; 
40A0:  BSF    F81.2
....................                              rb3=1; 
40A2:  BSF    F81.3
....................                              rb1=1; 
40A4:  BSF    F81.1
....................                              delay_ms(quantum); 
40A6:  MOVFF  25E,28A
40AA:  INCF   x8A,F
40AC:  DECF   x8A,F
40AE:  BTFSC  FD8.2
40B0:  BRA    40CC
40B2:  CLRF   16
40B4:  BTFSC  FF2.7
40B6:  BSF    16.7
40B8:  BCF    FF2.7
40BA:  MOVLW  FF
40BC:  MOVWF  x9A
40BE:  MOVLB  0
40C0:  CALL   024E
40C4:  BTFSC  16.7
40C6:  BSF    FF2.7
40C8:  MOVLB  2
40CA:  BRA    40AC
40CC:  CLRF   16
40CE:  BTFSC  FF2.7
40D0:  BSF    16.7
40D2:  BCF    FF2.7
40D4:  MOVFF  25D,29A
40D8:  MOVLB  0
40DA:  CALL   024E
40DE:  BTFSC  16.7
40E0:  BSF    FF2.7
....................                              rb2=0; 
40E2:  BCF    F81.2
....................                              rb3=0; 
40E4:  BCF    F81.3
....................                              rb1=0; 
40E6:  BCF    F81.1
....................                              delay_ms(quantum); 
40E8:  MOVFF  25E,28A
40EC:  MOVLB  2
40EE:  INCF   x8A,F
40F0:  DECF   x8A,F
40F2:  BTFSC  FD8.2
40F4:  BRA    4110
40F6:  CLRF   16
40F8:  BTFSC  FF2.7
40FA:  BSF    16.7
40FC:  BCF    FF2.7
40FE:  MOVLW  FF
4100:  MOVWF  x9A
4102:  MOVLB  0
4104:  CALL   024E
4108:  BTFSC  16.7
410A:  BSF    FF2.7
410C:  MOVLB  2
410E:  BRA    40F0
4110:  CLRF   16
4112:  BTFSC  FF2.7
4114:  BSF    16.7
4116:  BCF    FF2.7
4118:  MOVFF  25D,29A
411C:  MOVLB  0
411E:  CALL   024E
4122:  BTFSC  16.7
4124:  BSF    FF2.7
....................                     } 
....................                     else{    
4126:  BRA    41AC
4128:  MOVLB  2
....................                              rb2=1; 
412A:  BSF    F81.2
....................                              rb1=1; 
412C:  BSF    F81.1
....................                              delay_ms(quantum); 
412E:  MOVFF  25E,28A
4132:  INCF   x8A,F
4134:  DECF   x8A,F
4136:  BTFSC  FD8.2
4138:  BRA    4154
413A:  CLRF   16
413C:  BTFSC  FF2.7
413E:  BSF    16.7
4140:  BCF    FF2.7
4142:  MOVLW  FF
4144:  MOVWF  x9A
4146:  MOVLB  0
4148:  CALL   024E
414C:  BTFSC  16.7
414E:  BSF    FF2.7
4150:  MOVLB  2
4152:  BRA    4134
4154:  CLRF   16
4156:  BTFSC  FF2.7
4158:  BSF    16.7
415A:  BCF    FF2.7
415C:  MOVFF  25D,29A
4160:  MOVLB  0
4162:  CALL   024E
4166:  BTFSC  16.7
4168:  BSF    FF2.7
....................                              rb2=0; 
416A:  BCF    F81.2
....................                              rb1=0; 
416C:  BCF    F81.1
....................                              delay_ms(quantum); 
416E:  MOVFF  25E,28A
4172:  MOVLB  2
4174:  INCF   x8A,F
4176:  DECF   x8A,F
4178:  BTFSC  FD8.2
417A:  BRA    4196
417C:  CLRF   16
417E:  BTFSC  FF2.7
4180:  BSF    16.7
4182:  BCF    FF2.7
4184:  MOVLW  FF
4186:  MOVWF  x9A
4188:  MOVLB  0
418A:  CALL   024E
418E:  BTFSC  16.7
4190:  BSF    FF2.7
4192:  MOVLB  2
4194:  BRA    4176
4196:  CLRF   16
4198:  BTFSC  FF2.7
419A:  BSF    16.7
419C:  BCF    FF2.7
419E:  MOVFF  25D,29A
41A2:  MOVLB  0
41A4:  CALL   024E
41A8:  BTFSC  16.7
41AA:  BSF    FF2.7
....................                     } 
....................                                                } 
....................                                                 
....................                    else  {        
41AC:  BRA    4266
41AE:  MOVLB  2
41B0:  CLRF   16
41B2:  BTFSC  FF2.7
41B4:  BSF    16.7
41B6:  BCF    FF2.7
....................                    if(quantum*contador2<=time2){ 
41B8:  MOVFF  25E,299
41BC:  MOVFF  25D,298
41C0:  CLRF   x9B
41C2:  MOVFF  1A,29A
41C6:  MOVLB  0
41C8:  CALL   0276
41CC:  BTFSC  16.7
41CE:  BSF    FF2.7
41D0:  MOVFF  02,28B
41D4:  MOVFF  01,28A
41D8:  MOVLB  2
41DA:  MOVF   02,W
41DC:  SUBWF  x5A,W
41DE:  BNC   4268
41E0:  BNZ   41E8
41E2:  MOVF   x8A,W
41E4:  SUBWF  x59,W
41E6:  BNC   4268
....................                                rb2=1; 
41E8:  BSF    F81.2
....................                                delay_ms(quantum); 
41EA:  MOVFF  25E,28A
41EE:  INCF   x8A,F
41F0:  DECF   x8A,F
41F2:  BTFSC  FD8.2
41F4:  BRA    4210
41F6:  CLRF   16
41F8:  BTFSC  FF2.7
41FA:  BSF    16.7
41FC:  BCF    FF2.7
41FE:  MOVLW  FF
4200:  MOVWF  x9A
4202:  MOVLB  0
4204:  CALL   024E
4208:  BTFSC  16.7
420A:  BSF    FF2.7
420C:  MOVLB  2
420E:  BRA    41F0
4210:  CLRF   16
4212:  BTFSC  FF2.7
4214:  BSF    16.7
4216:  BCF    FF2.7
4218:  MOVFF  25D,29A
421C:  MOVLB  0
421E:  CALL   024E
4222:  BTFSC  16.7
4224:  BSF    FF2.7
....................                                rb2=0;                            
4226:  BCF    F81.2
....................                                delay_ms(quantum);  
4228:  MOVFF  25E,28A
422C:  MOVLB  2
422E:  INCF   x8A,F
4230:  DECF   x8A,F
4232:  BTFSC  FD8.2
4234:  BRA    4250
4236:  CLRF   16
4238:  BTFSC  FF2.7
423A:  BSF    16.7
423C:  BCF    FF2.7
423E:  MOVLW  FF
4240:  MOVWF  x9A
4242:  MOVLB  0
4244:  CALL   024E
4248:  BTFSC  16.7
424A:  BSF    FF2.7
424C:  MOVLB  2
424E:  BRA    4230
4250:  CLRF   16
4252:  BTFSC  FF2.7
4254:  BSF    16.7
4256:  BCF    FF2.7
4258:  MOVFF  25D,29A
425C:  MOVLB  0
425E:  CALL   024E
4262:  BTFSC  16.7
4264:  BSF    FF2.7
4266:  MOVLB  2
....................                                 
....................                                } 
....................                          } 
....................  
....................                  if(contador1==10 ) do_proceso1(); 
4268:  MOVF   19,W
426A:  SUBLW  0A
426C:  BNZ   4276
426E:  MOVLB  0
4270:  CALL   1140
4274:  MOVLB  2
....................                  if(contador3==20 )do_proceso3(); 
4276:  MOVF   1B,W
4278:  SUBLW  14
427A:  BNZ   4284
427C:  MOVLB  0
427E:  CALL   11F0
4282:  MOVLB  2
....................                  if(contador2==16 )do_proceso2(); 
4284:  MOVF   1A,W
4286:  SUBLW  10
4288:  BNZ   4292
428A:  MOVLB  0
428C:  CALL   1198
4290:  MOVLB  2
....................                   contador1++; 
4292:  INCF   19,F
....................                   contador3++; 
4294:  INCF   1B,F
....................  
....................                          }///// 
4296:  INCF   1A,F
4298:  MOVLB  0
429A:  BRA    401E
....................                   
....................                   
....................                                    } 
....................                           
....................                          
....................                   
....................                       } 
....................                 
....................                   } 
....................               } 
....................        }    
....................    } 
429C:  GOTO   4418 (RETURN)
.................... /////////////////////////////////////// 
.................... void main(){ 
*
42B2:  CLRF   FF8
42B4:  BCF    FD0.7
42B6:  BSF    07.7
42B8:  CLRF   FEA
42BA:  CLRF   FE9
42BC:  MOVLW  81
42BE:  MOVWF  FAF
42C0:  MOVLW  A6
42C2:  MOVWF  FAC
42C4:  MOVLW  90
42C6:  MOVWF  FAB
42C8:  CLRF   19
42CA:  CLRF   1A
42CC:  CLRF   1B
42CE:  MOVLB  2
42D0:  CLRF   x37
42D2:  CLRF   x38
42D4:  CLRF   x39
42D6:  MOVLW  09
42D8:  MOVWF  x58
42DA:  MOVLW  C4
42DC:  MOVWF  x57
42DE:  MOVLW  0F
42E0:  MOVWF  x5A
42E2:  MOVLW  A0
42E4:  MOVWF  x59
42E6:  MOVLW  13
42E8:  MOVWF  x5C
42EA:  MOVLW  88
42EC:  MOVWF  x5B
42EE:  CLRF   x5E
42F0:  MOVLW  FA
42F2:  MOVWF  x5D
42F4:  BSF    FC1.0
42F6:  BSF    FC1.1
42F8:  BSF    FC1.2
42FA:  BCF    FC1.3
.................... setup_timer_0(rtcc_internal | rtcc_div_16);//quantun de 250 ms 
42FC:  MOVLW  83
42FE:  MOVWF  FD5
.................... set_timer0(0x01); 
4300:  CLRF   FD7
4302:  MOVLW  01
4304:  MOVWF  FD6
.................... enable_interrupts(global); 
4306:  MOVLW  C0
4308:  IORWF  FF2,F
.................... tris_b=0; 
430A:  CLRF   F93
.................... port_b=0; 
430C:  CLRF   F81
.................... // 
.................... mensaje_recibido=0; 
430E:  CLRF   18
.................... lcd_init(); 
4310:  MOVLB  0
4312:  GOTO   107A
.................... lcd_putc("hola"); 
4316:  MOVLW  58
4318:  MOVWF  FF6
431A:  MOVLW  10
431C:  MOVWF  FF7
431E:  CLRF   16
4320:  BTFSC  FF2.7
4322:  BSF    16.7
4324:  BCF    FF2.7
4326:  CALL   0B86
432A:  BTFSC  16.7
432C:  BSF    FF2.7
432E:  CLRF   16
4330:  BTFSC  FF2.7
4332:  BSF    16.7
4334:  BCF    FF2.7
.................... delay_ms(100); 
4336:  MOVLW  64
4338:  MOVLB  2
433A:  MOVWF  x9A
433C:  MOVLB  0
433E:  CALL   024E
4342:  BTFSC  16.7
4344:  BSF    FF2.7
.................... lcd_putc("\f"); 
4346:  MOVLW  5E
4348:  MOVWF  FF6
434A:  MOVLW  10
434C:  MOVWF  FF7
434E:  CLRF   16
4350:  BTFSC  FF2.7
4352:  BSF    16.7
4354:  BCF    FF2.7
4356:  CALL   0B86
435A:  BTFSC  16.7
435C:  BSF    FF2.7
.................... lcd_putc("comprabando"); 
435E:  MOVLW  60
4360:  MOVWF  FF6
4362:  MOVLW  10
4364:  MOVWF  FF7
4366:  CLRF   16
4368:  BTFSC  FF2.7
436A:  BSF    16.7
436C:  BCF    FF2.7
436E:  CALL   0B86
4372:  BTFSC  16.7
4374:  BSF    FF2.7
4376:  CLRF   16
4378:  BTFSC  FF2.7
437A:  BSF    16.7
437C:  BCF    FF2.7
.................... lcd_gotoxy(2,2); 
437E:  MOVLW  02
4380:  MOVLB  2
4382:  MOVWF  x9A
4384:  MOVWF  x9B
4386:  MOVLB  0
4388:  CALL   0B02
438C:  BTFSC  16.7
438E:  BSF    FF2.7
.................... lcd_putc("proceso..."); 
4390:  MOVLW  6C
4392:  MOVWF  FF6
4394:  MOVLW  10
4396:  MOVWF  FF7
4398:  CLRF   16
439A:  BTFSC  FF2.7
439C:  BSF    16.7
439E:  BCF    FF2.7
43A0:  CALL   0B86
43A4:  BTFSC  16.7
43A6:  BSF    FF2.7
43A8:  CLRF   16
43AA:  BTFSC  FF2.7
43AC:  BSF    16.7
43AE:  BCF    FF2.7
.................... delay_ms(100); 
43B0:  MOVLW  64
43B2:  MOVLB  2
43B4:  MOVWF  x9A
43B6:  MOVLB  0
43B8:  CALL   024E
43BC:  BTFSC  16.7
43BE:  BSF    FF2.7
.................... rb6=0; 
43C0:  BCF    F81.6
.................... pcb[0].id=0; 
43C2:  MOVLB  2
43C4:  CLRF   x61
.................... pcb[1].id=1; 
43C6:  MOVLW  01
43C8:  MOVWF  x67
.................... pcb[2].id=2; 
43CA:  MOVLW  02
43CC:  MOVWF  x6D
.................... contador1=0; 
43CE:  CLRF   19
.................... contador2=0; 
43D0:  CLRF   1A
.................... contador3=0; 
43D2:  CLRF   1B
.................... enable_interrupts(int_rda); 
43D4:  BSF    F9D.5
.................... enable_interrupts(int_timer0); 
43D6:  BSF    FF2.5
....................    while(true){             
....................          if(mensaje_recibido==1){ 
43D8:  DECFSZ 18,W
43DA:  BRA    4440
....................                   lcd_putc("\f"); 
43DC:  MOVLW  78
43DE:  MOVWF  FF6
43E0:  MOVLW  10
43E2:  MOVWF  FF7
43E4:  CLRF   16
43E6:  BTFSC  FF2.7
43E8:  BSF    16.7
43EA:  BCF    FF2.7
43EC:  MOVLB  0
43EE:  CALL   0B86
43F2:  BTFSC  16.7
43F4:  BSF    FF2.7
....................                    
....................                if(tecla_pulsada=='1'){ 
43F6:  MOVF   17,W
43F8:  SUBLW  31
43FA:  BNZ   4402
....................                do_proceso11(); 
43FC:  GOTO   1248
....................                   } 
....................                else { 
4400:  BRA    4418
....................                 
....................                   if(tecla_pulsada=='2')do_proceso22(); 
4402:  MOVF   17,W
4404:  SUBLW  32
4406:  BNZ   440E
4408:  GOTO   1E6C
....................                     
....................                    else{ 
440C:  BRA    4418
....................                     if(tecla_pulsada=='3') do_proceso33();  
440E:  MOVF   17,W
4410:  SUBLW  33
4412:  BNZ   4418
4414:  GOTO   2A8A
....................                   } 
....................                } 
....................                  
....................                 if(tecla_pulsada=='a'){ 
4418:  MOVF   17,W
441A:  SUBLW  61
441C:  BNZ   4424
....................                 contador1=0; 
441E:  CLRF   19
....................                 copia1=0; 
4420:  CLRF   1C
....................                 descargar_proceso1(); 
4422:  BRA    42A0
....................                   } 
....................                 if(tecla_pulsada=='b'){ 
4424:  MOVF   17,W
4426:  SUBLW  62
4428:  BNZ   4430
....................                 contador2=0; 
442A:  CLRF   1A
....................                 copia2=0; 
442C:  CLRF   1D
....................                 descargar_proceso2(); 
442E:  BRA    42A6
....................                   } 
....................                 if(tecla_pulsada=='c'){ 
4430:  MOVF   17,W
4432:  SUBLW  63
4434:  BNZ   443C
....................                 contador3=0; 
4436:  CLRF   1B
....................                 copia3=0; 
4438:  CLRF   1E
....................                 descargar_proceso3(); 
443A:  BRA    42AC
....................                   } 
....................                   mensaje_recibido=0; 
443C:  CLRF   18
443E:  MOVLB  2
....................                   } 
....................                 
....................              } 
4440:  BRA    43D8
....................         } 
....................  
4442:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0E   BROWNOUT WDT128 NOWDT BORV20 PUT
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NODEBUG NOLVP
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTB NOWRTC
   Word  7: 400F   NOEBTR NOEBTRB
